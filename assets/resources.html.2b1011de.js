import{r as i,o as l,c as h,a as e,b as o,w as a,F as _,d as n,e as t}from"./app.366383cb.js";import{_ as d}from"./plugin-vue_export-helper.21dcd24c.js";const c={},g=n('<br><div style="line-height:90%;letter-spacing:-0.05em;font-weight:400;font-size:2.7em;">Awesome<span style="font-weight:600;letter-spacing:-0.05em;"> Game Boy Development </span></div><br><div style="letter-spacing:-0.05em;font-weight:500;font-size:18px;"> A curated list of awesome Game Boy (Color) Development resources, tools, docs, related projects and homebrews. Inspired by the <a href="https://github.com/sindresorhus/awesome"> awesome </a> list thing.<br><br><div style="letter-spacing:-0.05em;font-weight:500;font-size:18px;"> This project is open source and community-lead. Come <a href="https://gbdev.io/contribute">contribute! </a></div></div><br><div style="letter-spacing:-0.03em;font-weight:500;font-size:20px;"><a href="https://gbdev.io/chat">Chat with the community!</a></div><br><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2>',8),m={id:"the-game-boy-a-hardware-autopsy",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#the-game-boy-a-hardware-autopsy","aria-hidden":"true"},"#",-1),u=t(),b={href:"https://www.youtube.com/playlist?list=PLu3xpmdUP-GRDp8tknpXC_Y4RUQtMMqEu",target:"_blank",rel:"noopener noreferrer"},f=t("The Game Boy, a hardware autopsy"),k=e("br",null,null,-1),y=e("div",{class:"videoWrapper"},[e("iframe",{id:"ytplayer",type:"text/html",src:"https://www.youtube.com/embed/videoseries?list=PLu3xpmdUP-GRDp8tknpXC_Y4RUQtMMqEu",frameborder:"0",allowfullscreen:""}),e("br")],-1),B={id:"the-ultimate-game-boy-talk",tabindex:"-1"},G=e("a",{class:"header-anchor",href:"#the-ultimate-game-boy-talk","aria-hidden":"true"},"#",-1),w=t(),v={href:"https://media.ccc.de/v/33c3-8029-the_ultimate_game_boy_talk",target:"_blank",rel:"noopener noreferrer"},C=t("The Ultimate Game Boy Talk"),D=e("br",null,null,-1),S=e("div",{class:"videoWrapper"},[e("iframe",{id:"ytplayer",type:"text/html",src:"https://www.youtube.com/embed/HyzD8pNlpwI",frameborder:"0",allowfullscreen:""}),e("br")],-1),A=e("h3",{id:"disambiguation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#disambiguation","aria-hidden":"true"},"#"),t(" Disambiguation")],-1),M=e("h4",{id:"game-boy-advance",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#game-boy-advance","aria-hidden":"true"},"#"),t(" Game Boy Advance")],-1),x=t("Game Boy Advance development is covered by another project, the "),P={href:"https://github.com/gbdev/awesome-gbadev",target:"_blank",rel:"noopener noreferrer"},R=t("awesome-GBAdev"),T=t(" list. GBA, however, can run GB/GBC games. It does so in a slightly different way compared to native hardware. This is covered in the Emulator Development section of this list."),E=n('<h4 id="game-boy-color-and-super-game-boy" tabindex="-1"><a class="header-anchor" href="#game-boy-color-and-super-game-boy" aria-hidden="true">#</a> Game Boy Color and Super Game Boy</h4><p>This list is focused on the original (1989) Game Boy (DMG), the <em>Game Boy Color</em> (GBC) and <em>Super Game Boy</em> (SGB) are very similar systems, with a few important distinctions, such as:</p><ul><li>Different hardware specifications</li><li>Specific hardware and software features</li><li>Specific registers</li><li>Specific bugs, quirks and exploitable behaviours</li></ul><p>If you aim to develop your software for SGB or GBC, or you want to know how it runs on the other systems, you may want to take advantage and adapt to these differences, check the <a href="#game-boy-color">Game Boy Color</a> category and look for specific references to GBC/CGB and SGB.</p>',4),j=e("h2",{id:"documentation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#documentation","aria-hidden":"true"},"#"),t(" Documentation")],-1),L={href:"https://gbdev.github.io/pandocs/",target:"_blank",rel:"noopener noreferrer"},z=e("strong",null,"Pan Docs",-1),F=t(" - The single, most comprehensive technical reference to Game Boy available to the public. Corrected, updated and maintained by the community."),I={href:"https://github.com/AntonioND/giibiiadvance/blob/master/docs/TCAGBD.pdf",target:"_blank",rel:"noopener noreferrer"},O=t("The Cycle-Accurate Game Boy Docs"),H=t(" - A precise documentation by AntonioND to make a cycle-accurate Game Boy emulator."),N={href:"https://gekkio.fi/files/gb-docs/gbctr.pdf",target:"_blank",rel:"noopener noreferrer"},U=t("Complete Technical Reference"),K=t(" - by Gekkio."),W={href:"http://www.cs.columbia.edu/~sedwards/classes/2019/4840-spring/reports/GameBoy.pdf",target:"_blank",rel:"noopener noreferrer"},V=t("Game Boy Project Report"),Z=t(" - Report of an hardware "),J={href:"https://github.com/kitsuneh/SVGameBoy",target:"_blank",rel:"noopener noreferrer"},q=t("emulator"),X=t(" (on a Terasic DE1-SoC Board) developed as final project for the CSEE4840 Embedded Systems Design course at Columbia University."),Y=e("h4",{id:"opcodes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#opcodes","aria-hidden":"true"},"#"),t(" Opcodes")],-1),Q={href:"https://gbdev.github.io/gb-opcodes/optables/",target:"_blank",rel:"noopener noreferrer"},$=t("gb-opcodes"),ee=t(" - Opcodes table"),te={href:"https://rgbds.gbdev.io/docs/gbz80.7",target:"_blank",rel:"noopener noreferrer"},oe=t("RGBDS opcodes reference"),re=t(" - A reference of all instructions, including short descriptions, cycle and byte counts, and explanations of flag modifications."),ne=e("h3",{id:"game-boy-color",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#game-boy-color","aria-hidden":"true"},"#"),t(" Game Boy Color")],-1),se={href:"https://tcrf.net/Game_Boy_Color_Bootstrap_ROM",target:"_blank",rel:"noopener noreferrer"},ie=t("Bootstrap ROM"),ae={href:"https://tcrf.net/Notes:Game_Boy_Color_Bootstrap_ROM",target:"_blank",rel:"noopener noreferrer"},le=t("Unused Palettes"),he={href:"https://forums.nesdev.com/viewtopic.php?p=114388&sid=c3d4ce08cfd9d9c834958d4f148750c3#p114388",target:"_blank",rel:"noopener noreferrer"},_e=t("Colorization palettes in the BIOS"),de={href:"https://gist.github.com/drhelius/6063265",target:"_blank",rel:"noopener noreferrer"},ce=t("ROM Disassembly"),ge=e("h3",{id:"hardware",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hardware","aria-hidden":"true"},"#"),t(" Hardware")],-1),me={href:"http://gbdev.gg8.se/wiki/articles/DMG_Schematics",target:"_blank",rel:"noopener noreferrer"},pe=t("DMG Schematics"),ue=t(" - Hardware schematics."),be={href:"http://marc.rawer.de/Gameboy/Docs/GBProject.pdf",target:"_blank",rel:"noopener noreferrer"},fe=t("The Game Boy Project"),ke=t(" - Provides a study on the hardware and detailed constructional information for the implementation of three 8-bit bidirectional parallel ports."),ye={href:"https://github.com/Gekkio/gb-hardware",target:"_blank",rel:"noopener noreferrer"},Be=t("Related custom hardware"),Ge=t(" - by Gekkio."),we={href:"https://github.com/applefreak/esp8266-gameboy-dev-board",target:"_blank",rel:"noopener noreferrer"},ve=t("ESP8266 GB Dev Board"),Ce=t(" - Dev board for Game Boy accessories development, powered by ESP8266."),De={href:"https://github.com/applefreak/esp8266-gameboy-printer",target:"_blank",rel:"noopener noreferrer"},Se=t("ESP8266 GB Printer"),Ae=t(" - A device that emulates the GB Printer and lets you retrieve images using WiFi."),Me={href:"http://verhoeven272.nl/fruttenboel/Gameboy/index.html",target:"_blank",rel:"noopener noreferrer"},xe=t("fruttenboel"),Pe=t(" - Page with loads of information on the hardware, custom boards to interface with the console and other related projects."),Re={href:"https://gbhwdb.gekkio.fi/",target:"_blank",rel:"noopener noreferrer"},Te=t("Game Boy hardware database"),Ee=t(" - Data and photos of various types of Game Boy consoles."),je={href:"https://github.com/furrtek/DMG-CPU-Inside",target:"_blank",rel:"noopener noreferrer"},Le=t("DMG-CPU-Inside"),ze=t(" - Schematics and annotated overlay for the DMG-CPU-B chip, extracted from die photos."),Fe=e("h3",{id:"peripherals",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#peripherals","aria-hidden":"true"},"#"),t(" Peripherals")],-1),Ie={href:"https://shonumi.github.io/dandocs.html",target:"_blank",rel:"noopener noreferrer"},Oe=t("Dan Docs"),He=t(" - Obscure Game Boy hardware documentation."),Ne={href:"https://shonumi.github.io/articles.html",target:"_blank",rel:"noopener noreferrer"},Ue=t("Edge of Emulation"),Ke=t(", a series of articles about emulating and investigating Game Boy accessories. Also available as "),We={href:"https://github.com/shonumi/gbe-plus/tree/master/src/docs/technical",target:"_blank",rel:"noopener noreferrer"},Ve=t("technical documents"),Ze=t(" in the GBE- emulator documentation. "),Je={href:"https://shonumi.github.io/articles/art14.html",target:"_blank",rel:"noopener noreferrer"},qe=t("Mobile Adapter GB"),Xe=t(" - Internet connectivity and DLC on the Game Boy Color."),Ye={href:"https://shonumi.github.io/articles/art2.html",target:"_blank",rel:"noopener noreferrer"},Qe=t("The Game Boy Printer"),$e={href:"https://shonumi.github.io/articles/art13.html",target:"_blank",rel:"noopener noreferrer"},et=t("Pocket Sonar"),tt=t(" - A blue cart with built-in sonar hardware."),ot={href:"https://shonumi.github.io/articles/art8.html",target:"_blank",rel:"noopener noreferrer"},rt=t("Zok Zok Heroes"),nt=t(" - Zok Zok Heroes' Full Changer, a motion-activated accessory."),st={href:"https://shonumi.github.io/articles/art11.html",target:"_blank",rel:"noopener noreferrer"},it=t("Infrared Madness"),at=t(" - Infrared communication on the Game Boy Color."),lt={href:"https://shonumi.github.io/articles/art9.html",target:"_blank",rel:"noopener noreferrer"},ht=t("Game Boy 4-Player Adapter"),_t=t(" - DMG-07."),dt={href:"https://shonumi.github.io/articles/art7.html",target:"_blank",rel:"noopener noreferrer"},ct=t("Barcode Boy"),gt=t(" - The first Game Boy card-scanner."),mt={href:"https://shonumi.github.io/articles/art6.html",target:"_blank",rel:"noopener noreferrer"},pt=t("Barcode Taisen Bardigun"),ut=t(" - A late 90s DMG-GBC barcode reader."),bt={href:"https://raw.githubusercontent.com/shonumi/gbe-plus/master/src/docs/technical/DMG_07.txt",target:"_blank",rel:"noopener noreferrer"},ft=t("DMG-07 Technical Documentation"),kt={href:"https://github.com/AntonioND/gbcam-rev-engineer",target:"_blank",rel:"noopener noreferrer"},yt=t("Game Boy Camera RE"),Bt=t(" - Documentation about GB Camera and tools used to reverse engineer it by using Arduino."),Gt={href:"http://www.pinchofintelligence.com/photorealistic-neural-network-gameboy/",target:"_blank",rel:"noopener noreferrer"},wt=t("Creating photo realistic images with neural networks and a Gameboy Camera"),vt={href:"https://shonumi.github.io/articles/art2.html",target:"_blank",rel:"noopener noreferrer"},Ct=t("The Game Boy Printer"),Dt=t(" - An in-depth technical document about the printer hardware, the communication protocol and the usual routine that games used for implementing the print feature."),St={href:"https://www.youtube.com/watch?v=43FfJvd-YP4",target:"_blank",rel:"noopener noreferrer"},At=t("Ben Heck Reverse Engineers Game Boy Printer"),Mt=t(" (Errata: the used thermal paper is expired, 4 colors are actually printable)."),xt={href:"https://github.com/mofosyne/arduino-gameboy-printer-emulator",target:"_blank",rel:"noopener noreferrer"},Pt=t("Arduino Game Boy Printer Emulator"),Rt=t(" - Emulating a Game Boy Printer via the Game Boy Link cable with an Arduino."),Tt={href:"https://bulbapedia.bulbagarden.net/wiki/Mobile_Game_Boy_Adapter",target:"_blank",rel:"noopener noreferrer"},Et=t("Mobile Game Boy Adapter"),jt={href:"http://nectaris.tg-16.com/GB-KISS-LINK-FAQ-hudson-gameboy-nectaris.html",target:"_blank",rel:"noopener noreferrer"},Lt=t("GB KISS LINK MODEM"),zt=e("h3",{id:"cartridges",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#cartridges","aria-hidden":"true"},"#"),t(" Cartridges")],-1),Ft={href:"https://github.com/AntonioND/giibiiadvance/tree/master/docs",target:"_blank",rel:"noopener noreferrer"},It=t("AntonioND's docs"),Ot=t(" - Corrected schematics and infos on cartridge header data."),Ht={href:"http://gekkio.fi/blog/2015-02-14-mooneye-gb-gameboy-cartridge-types.html",target:"_blank",rel:"noopener noreferrer"},Nt=t("Gekkio's Game Boy cartridge types"),Ut=t(" - An overview on existing cartridge types."),Kt=t("Gekkio's cartridge analysis: "),Wt={href:"http://gekkio.fi/blog/2015-05-18-mooneye-gb-cartridge-analysis-dmg-bean-02.html",target:"_blank",rel:"noopener noreferrer"},Vt=t("DMG-BEAN-02"),Zt=t(";"),Jt={href:"http://gekkio.fi/blog/2015-05-17-mooneye-gb-cartridge-analysis-fortress-of-fear.html",target:"_blank",rel:"noopener noreferrer"},qt=t("MBC1"),Xt=t(";"),Yt={href:"http://gekkio.fi/blog/2015-02-28-mooneye-gb-cartridge-analysis-tetris.html",target:"_blank",rel:"noopener noreferrer"},Qt=t("no MBC"),$t=t("."),eo=t("Pinout, registers descriptions and VHDL code of some cartridge types on Tauwasser's wiki: "),to={href:"https://wiki.tauwasser.eu/view/MBC1",target:"_blank",rel:"noopener noreferrer"},oo=t("MBC1"),ro={href:"https://wiki.tauwasser.eu/view/MBC2",target:"_blank",rel:"noopener noreferrer"},no=t("MBC2"),so={href:"https://wiki.tauwasser.eu/view/MMM01",target:"_blank",rel:"noopener noreferrer"},io=t("MMM01"),ao={href:"http://www.devrs.com/gb/files/gb.html",target:"_blank",rel:"noopener noreferrer"},lo=t("Game Boy Cartridges Schematics"),ho=t(" - Schematics for MBC2 and MBC3 types."),_o={href:"https://imgur.com/a/D5bpC",target:"_blank",rel:"noopener noreferrer"},co=t("Cartridges PCB photos"),go={href:"http://www.devrs.com/gb/files/mbc1.gif",target:"_blank",rel:"noopener noreferrer"},mo=t("MBC1+RAM+Battery cartridge Schematic"),po=t(" - First schematics by Jeff Frohwein."),uo={href:"http://fms.komkon.org/GameBoy/Tech/Carts.html",target:"_blank",rel:"noopener noreferrer"},bo=t("MBC1 and MBC2 cartridges circuits"),fo=t(" - and explanation on how these MBC bank switch and control RAM."),ko=e("li",null,[e("a",{href:"CartridgeList.csv"},"GB Rom List"),t(" - Navigable table of every game released with details on their cartridges.")],-1),yo={href:"http://gekkio.fi/blog/2016-03-19-game-boy-cartridge-pcb-photos.html",target:"_blank",rel:"noopener noreferrer"},Bo=t("Game Boy cartridge PCB photos"),Go=e("h4",{id:"custom-cartridges",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#custom-cartridges","aria-hidden":"true"},"#"),t(" Custom cartridges")],-1),wo={href:"https://dhole.github.io/post/gameboy_cartridge_emu_1/",target:"_blank",rel:"noopener noreferrer"},vo=t("Emulating a GameBoy Cartridge"),Co=t(" - Emulating the functionality of a Game Boy cartridge with the development board STM32F4."),Do={href:"http://www.happydaze.se/wolf/",target:"_blank",rel:"noopener noreferrer"},So=t("Wolf"),Ao=t(" - Game Boy cartridge with co-processor."),Mo={href:"https://github.com/dwaq/Homebrew-Gameboy-Cartridge",target:"_blank",rel:"noopener noreferrer"},xo=t("Homebrew-Gameboy-Cartridge"),Po=t(" - Eagle library, schematic, and board files for a cartridge PCB using an Atmel AT49F040 as ROM."),Ro={href:"https://github.com/Xyl2k/Gameboy-Color-Cartridge",target:"_blank",rel:"noopener noreferrer"},To=t("Homebrew Gameboy Color Cartridge"),Eo=t(" - Board layout for an EEPROM powered cartridge."),jo={href:"https://github.com/zephray/NekoCart-GB",target:"_blank",rel:"noopener noreferrer"},Lo=t("Nekocart"),zo=t(" - Open-source flash cartridge using an Xilinx CPLD as MBC5 ("),Fo={href:"https://hackaday.io/project/41160-nekocart-cpld-gameboy-cartridge",target:"_blank",rel:"noopener noreferrer"},Io=t("Post"),Oo=t(")."),Ho={href:"http://reinerziegler.de.mirrors.gg8.se/",target:"_blank",rel:"noopener noreferrer"},No=t("Reiner Ziegler's Game Boy page"),Uo=t(" - Commercial and homemade programmable cartridges and programming systems. Tutorials, wiring and schematics provided."),Ko={href:"https://github.com/insidegadgets/Gameboy-MBC5-MBC1-Hybrid",target:"_blank",rel:"noopener noreferrer"},Wo=t("Gameboy-MBC5-MBC1-Hybrid"),Vo=t(" - CPLD implementation of a MBC5/MBC1 Hybrid cartridge."),Zo=e("h4",{id:"misc",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#misc","aria-hidden":"true"},"#"),t(" Misc")],-1),Jo={href:"http://pepijndevos.nl/sha2017/workshop.pdf",target:"_blank",rel:"noopener noreferrer"},qo=t("Introduction to Game Boy Hacking"),Xo=t(" - Workshop introducing basic assembly, debugging and reverse engineering."),Yo={href:"https://github.com/bwhitman/pushpin/blob/master/src/gbsound.txt",target:"_blank",rel:"noopener noreferrer"},Qo=t("GBSOUND.txt"),$o=t(" - A document detailing the Game Boy sound engine."),er={href:"http://www.devrs.com/gb/files/faqs.html",target:"_blank",rel:"noopener noreferrer"},tr=t("gbdev FAQs"),or=t(" - Must read by Jeff Frohwein."),rr={href:"http://www.neviksti.com/DMG/DMG_ROM.asm",target:"_blank",rel:"noopener noreferrer"},nr=t("Game Boy Bootrom"),sr=t(" - Commented dump of the DMG bootrom."),ir={href:"http://www.z80.info/z80gboy.txt",target:"_blank",rel:"noopener noreferrer"},ar=t("Differences between the Z80 and the gameboy's processor"),lr={href:"http://www.huderlem.com/demos/gameboy2bpp.html",target:"_blank",rel:"noopener noreferrer"},hr=t("Gameboy 2BPP Graphics Format"),_r=t(" - Information on how the Game Boy interprets VRAM tile data to color pixels."),dr=e("h2",{id:"emulator-development",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emulator-development","aria-hidden":"true"},"#"),t(" Emulator Development")],-1),cr={href:"https://www.youtube.com/watch?v=GBYwjch6oEE",target:"_blank",rel:"noopener noreferrer"},gr=t("Reverse Engineering fine details of Game Boy hardware"),mr=t(" - 43 minutes talk by Gekkio given at Disobey 2018 ("),pr={href:"https://gekkio.fi/blog/2018-02-05-errata-for-reverse-engineering-fine-details-of-game-boy-hardware.html",target:"_blank",rel:"noopener noreferrer"},ur=t("errata"),br=t(")."),fr={href:"https://github.com/Baekalfen/PyBoy/blob/master/PyBoy.pdf",target:"_blank",rel:"noopener noreferrer"},kr=t("Emulation of Nintendo Game Boy"),yr=t(" - Overview of the Game Boy hardware with the perspective of building an emulator."),Br={href:"https://rylev.github.io/DMG-01/public/book/",target:"_blank",rel:"noopener noreferrer"},Gr=t("DMG-01"),wr=t(" - An educational Gameboy Emulator in Rust and a companion book explaining its development. *"),vr={href:"https://media.ccc.de/v/rustfest-rome-3-gameboy-emulator",target:"_blank",rel:"noopener noreferrer"},Cr=t("Oh Boy! Creating a Game Boy Emulator in Rust"),Dr=t("- is a talk given at Rust Fest 18 about this."),Sr={href:"http://imrannazar.com/gameboy-Emulation-in-JavaScript",target:"_blank",rel:"noopener noreferrer"},Ar=t("Building a Game Boy emulator in JavaScript"),Mr=t(" - Step by step tutorial."),xr={href:"https://cturt.github.io/cinoop.html",target:"_blank",rel:"noopener noreferrer"},Pr=t("Writing a Game Boy emulator, Cinoop"),Rr={href:"https://jeremybanks.github.io/0dmg/2018/05/23/getting-started.html",target:"_blank",rel:"noopener noreferrer"},Tr=t("0dmg"),Er=t(" - Learning Rust by building a partial Game Boy emulator."),jr={href:"https://realboyemulator.wordpress.com/posts/",target:"_blank",rel:"noopener noreferrer"},Lr=t("RealBoy Emulator"),zr=t(" - A series of posts about the design and implementation of the RealBoy Emulator."),Fr={href:"http://www.codeslinger.co.uk/pages/projects/gameboy.html",target:"_blank",rel:"noopener noreferrer"},Ir=t("Codeslinger"),Or=t(" - Another series of posts documenting the building of an emulator."),Hr={href:"http://blog.rekawek.eu/2017/02/09/coffee-gb/",target:"_blank",rel:"noopener noreferrer"},Nr=t("Why did I spend 1.5 months creating a Gameboy emulator?"),Ur=t(" - Blog post."),Kr={href:"https://binji.github.io/2017/12/31/binjgb-rewind.html",target:"_blank",rel:"noopener noreferrer"},Wr=t("binjgb rewind"),Vr=t(" - Implementing a *rewind- feature."),Zr={href:"https://binji.github.io/2017/02/26/binjgb-on-the-web-part-1.html",target:"_blank",rel:"noopener noreferrer"},Jr=t("binjgb on the web"),qr=t(" - Porting of the binjgb emulator to Web Assembly. "),Xr={href:"https://binji.github.io/2017/02/27/binjgb-on-the-web-part-2.html",target:"_blank",rel:"noopener noreferrer"},Yr=t("(Part 2)"),Qr={href:"https://binji.github.io/2017/05/03/debugging-hangs.html",target:"_blank",rel:"noopener noreferrer"},$r=t("binjgb debugging hangs"),en=t(" - Investigations on emulations quirks."),tn={href:"https://gb-archive.github.io/salvage/decoding_gbz80_opcodes/Decoding%20Gamboy%20Z80%20Opcodes.html",target:"_blank",rel:"noopener noreferrer"},on=t("Decoding Gameboy Z80 opcodes"),rn=t(" - How to algorithmically decode Game Boy instructions (as opposed to writing one huge switch-case statement)."),nn={href:"https://djhworld.github.io/post/2018/09/21/i-ported-my-gameboy-color-emulator-to-webassembly/",target:"_blank",rel:"noopener noreferrer"},sn=t("Porting a GO Game Boy emulator to WebAssembly"),an={href:"https://mitxela.com/projects/swotgb/about",target:"_blank",rel:"noopener noreferrer"},ln=t("About swotGB"),hn=t(" - Notes about the development of a Game Boy emulator in JavaScript."),_n=t("List of open source emulators"),dn=e("h3",{id:"testing",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#testing","aria-hidden":"true"},"#"),t(" Testing")],-1),cn={href:"http://gbdev.gg8.se/files/roms/blargg-gb-tests/",target:"_blank",rel:"noopener noreferrer"},gn=t("Blargg's test roms"),mn={href:"https://gekkio.fi/files/mooneye-gb/latest/",target:"_blank",rel:"noopener noreferrer"},pn=t("Gekkio's test roms"),un={href:"https://github.com/LIJI32/SameSuite",target:"_blank",rel:"noopener noreferrer"},bn=t("SameSuite"),fn={href:"https://github.com/mattcurrie/mealybug-tearoom-tests",target:"_blank",rel:"noopener noreferrer"},kn=t("Mealybug Tearoom Tests"),yn={href:"http://tasvideos.org/EmulatorResources/GBAccuracyTests.html",target:"_blank",rel:"noopener noreferrer"},Bn=t("GB Accuracy Tests"),Gn={href:"https://github.com/pinobatch/240p-test-mini/tree/master/gameboy",target:"_blank",rel:"noopener noreferrer"},wn=t("144p Test Suite"),vn=t(" - Port of Artemio Urbina's 240p Test Suite to the Game Boy."),Cn={href:"https://github.com/aaaaaa123456789/rtc3test",target:"_blank",rel:"noopener noreferrer"},Dn=t("MBC3 RTC test ROM"),Sn={href:"https://github.com/mattcurrie/dmg-acid2",target:"_blank",rel:"noopener noreferrer"},An=t("dmg-acid2"),Mn=t(" and "),xn={href:"https://github.com/mattcurrie/cgb-acid2",target:"_blank",rel:"noopener noreferrer"},Pn=t("cgb-acid2"),Rn=t(" - Basic PPU rendering tests."),Tn=e("h2",{id:"software-development",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#software-development","aria-hidden":"true"},"#"),t(" Software Development")],-1),En=t("The "),jn={href:"https://gbdev.io/guides/tools.html",target:"_blank",rel:"noopener noreferrer"},Ln=t("Choosing tools for Game Boy development"),zn=t(" essay provides an overview of the available development tools for Game Boy."),Fn=e("h3",{id:"assemblers",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#assemblers","aria-hidden":"true"},"#"),t(" Assemblers")],-1),In={href:"https://github.com/gbdev/rgbds",target:"_blank",rel:"noopener noreferrer"},On=t("RGBDS"),Hn=t(" - Assembler and linker package. "),Nn={href:"https://rgbds.gbdev.io/docs/",target:"_blank",rel:"noopener noreferrer"},Un=t("Documentation"),Kn=t("."),Wn={href:"https://github.com/csoren/asmotor",target:"_blank",rel:"noopener noreferrer"},Vn=t("ASMotor"),Zn=t(" - Assembler engine and development system targeting Game Boy, among other CPUs. Written by the original RGBDS author. "),Jn={href:"https://github.com/asmotor/asmotor/tree/develop#further-reading",target:"_blank",rel:"noopener noreferrer"},qn=t("Documentation"),Xn=t("."),Yn={href:"https://github.com/vhelin/wla-dx",target:"_blank",rel:"noopener noreferrer"},Qn=t("wla-dx"),$n=t(" - Yet Another GB-Z80/Z80/... Multi Platform Cross Assembler Package. "),es={href:"http://www.villehelin.com/wla.txt",target:"_blank",rel:"noopener noreferrer"},ts=t("Documentation"),os=t("."),rs=e("h3",{id:"compilers",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#compilers","aria-hidden":"true"},"#"),t(" Compilers")],-1),ns={href:"https://github.com/gbdk-2020/gbdk-2020/",target:"_blank",rel:"noopener noreferrer"},ss=t("GBDK"),is=t(" - Maintained and modernized GBDK (Game Boy Development Kit) powered by an updated version of the SDCC toolchain. Provides a C compiler, assembler, linker and a set of libraries. "),as={href:"https://gbdk-2020.github.io/gbdk-2020/docs/api/docs_getting_started.html",target:"_blank",rel:"noopener noreferrer"},ls=t("API docs: Getting Started"),hs={href:"https://github.com/mrombout/gbdk_playground",target:"_blank",rel:"noopener noreferrer"},_s=t("Examples"),ds={href:"https://gbdk-2020.github.io/gbdk-2020/docs/api/docs_links_and_tools.html",target:"_blank",rel:"noopener noreferrer"},cs=t("Documentation, links and tools"),gs={href:"https://lemonspawn.com/turbo-rascal-syntax-error-expected-but-begin/",target:"_blank",rel:"noopener noreferrer"},ms=t("Turbo Rascal Syntax Error"),ps=t(" - Complete suite (IDE, compiler, programming language, resource editor) intended for developing games/demos for 8 / 16-bit line of computers, including the Game Boy and Game Boy Color."),us=e("h4",{id:"experimental-proof-of-concepts",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#experimental-proof-of-concepts","aria-hidden":"true"},"#"),t(" Experimental/Proof of Concepts")],-1),bs={href:"https://daid.github.io/rgbds-live/",target:"_blank",rel:"noopener noreferrer"},fs=t("RGBDS-Live"),ks=t(" - In-browser coding environment to try out RGBDS."),ys={href:"https://github.com/wiz-lang/wiz",target:"_blank",rel:"noopener noreferrer"},Bs=t("Wiz"),Gs=t(" - A high-level assembly language for writing homebrew on retro console platforms (Game Boy, NES, Atari 2600, and more)."),ws={href:"https://github.com/ams-hackers/gbforth",target:"_blank",rel:"noopener noreferrer"},vs=t("gbforth"),Cs=t(" - A Forth-based Game Boy development kit."),Ds={href:"https://gitlab.com/BonsaiDen/gbasm-rs",target:"_blank",rel:"noopener noreferrer"},Ss=t("gbasm-rs"),As=t(" - An opinionated Rust based compiler for Game Boy z80 assembly code."),Ms={href:"https://github.com/BonsaiDen/gbasm",target:"_blank",rel:"noopener noreferrer"},xs=t("gbasm"),Ps=t(" - A JavaScript based compiler for Game Boy z80 assembly code."),Rs={href:"http://www.tni.nl/products/tniasm.html",target:"_blank",rel:"noopener noreferrer"},Ts=t("tniASM"),Es=t(" - Macro Assembler."),js={href:"https://github.com/ulrikdamm/Assembler",target:"_blank",rel:"noopener noreferrer"},Ls=t("Assembler"),zs=t(" - Assembler written in Swift."),Fs={href:"https://github.com/Bevinsky/llvm-gbz80",target:"_blank",rel:"noopener noreferrer"},Is=t("llvm-gbz80"),Os=t(" / "),Hs={href:"https://github.com/Bevinsky/clang-gbz80",target:"_blank",rel:"noopener noreferrer"},Ns=t("clang-gbz80"),Us=t(" - Clang/LLVM port to the GBZ80 CPU (similar to the deprecated "),Ks={href:"https://github.com/euclio/llvm-gbz80",target:"_blank",rel:"noopener noreferrer"},Ws=t("euclio/llvm-gbz80"),Vs=t(")."),Zs={href:"https://github.com/pokemium/gbdk-go",target:"_blank",rel:"noopener noreferrer"},Js=t("gbdk-go"),qs=t(" - A compiler translates Go programs to C code. The output C code is built into GB ROM by GBDK."),Xs=e("h3",{id:"emulators",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emulators","aria-hidden":"true"},"#"),t(" Emulators")],-1),Ys={href:"https://bgb.bircd.org/",target:"_blank",rel:"noopener noreferrer"},Qs=t("BGB"),$s=t(" - Powerful emulator and debugger. Provides an accurate hardware emulation."),ei={href:"https://github.com/LIJI32/SameBoy",target:"_blank",rel:"noopener noreferrer"},ti=t("SameBoy"),oi=t(" - Accurate emulator with a wide range of powerful debugging features."),ri={href:"https://github.com/Gekkio/mooneye-gb",target:"_blank",rel:"noopener noreferrer"},ni=t("Mooneye GB"),si=t(" - Research project and emulator in Rust."),ii={href:"https://github.com/mgba-emu/mgba",target:"_blank",rel:"noopener noreferrer"},ai=t("mGBA"),li=t(" - Modern cross platform GBA emulator which also runs GB/GBC games."),hi={href:"https://github.com/binji/binjgb",target:"_blank",rel:"noopener noreferrer"},_i=t("Binjgb"),di=t(" - 5Kloc emulator that passes most of the tests. *Rewind- feature. Runs in the browser using WebAssembly."),ci={href:"https://github.com/sinamas/gambatte",target:"_blank",rel:"noopener noreferrer"},gi=t("Gambatte"),mi=t(" - Cross-platform and accurate emulator."),pi={href:"https://github.com/aappleby/MetroBoy",target:"_blank",rel:"noopener noreferrer"},ui=t("MetroBoy"),bi=t(" - A playable, circuit-level simulation of an entire Game Boy."),fi={href:"https://github.com/shonumi/gbe-plus",target:"_blank",rel:"noopener noreferrer"},ki=t("gbe-plus"),yi=t(" - A recently rewritten emulator that has a large effort in preserving the functions of obscure accessories (such as IR link, Mobile Network GB, Barcode Boy, GB Printer, local and online GB Serial Link Cable, ... )"),Bi={href:"https://emulicious.net/",target:"_blank",rel:"noopener noreferrer"},Gi=t("Emulicious"),wi=t(" - Provides accurate emulation and includes powerful tools such as a profiler and source-level debugging for ASM and C via a "),vi={href:"https://marketplace.visualstudio.com/items?itemName=emulicious.emulicious-debugger",target:"_blank",rel:"noopener noreferrer"},Ci=t("VS Code debug adapter"),Di=t("."),Si=t("Complete list of open source emulators"),Ai=e("h3",{id:"tools",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tools","aria-hidden":"true"},"#"),t(" Tools")],-1),Mi=e("h4",{id:"engines",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#engines","aria-hidden":"true"},"#"),t(" Engines")],-1),xi={href:"https://github.com/Zal0/ZGB",target:"_blank",rel:"noopener noreferrer"},Pi=t("ZGB"),Ri=t(" - A little engine for creating games for the original Game Boy (expands gbdk, more info "),Ti={href:"http://zalods.blogspot.com/2017/01/zgb-little-engine-for-game-boy.html",target:"_blank",rel:"noopener noreferrer"},Ei=t("here"),ji=t(")."),Li={href:"https://bitbucket.org/HellSuffering/retr0-gb/",target:"_blank",rel:"noopener noreferrer"},zi=t("Retr0 GB"),Fi=t(" - An engine for creating games (expands GBDK)."),Ii=e("h4",{id:"development-tools",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#development-tools","aria-hidden":"true"},"#"),t(" Development tools")],-1),Oi={href:"http://www.tensi.eu/thomas/programming/gameboy/gbextended.html",target:"_blank",rel:"noopener noreferrer"},Hi=t("GBExtended"),Ni=t(" - C library extending gbdk."),Ui={href:"https://github.com/ProGM/gbdk-lib-extension",target:"_blank",rel:"noopener noreferrer"},Ki=t("gbdk-lib-extension"),Wi=t(" - A small set of sources and tools for the Game Boy Development Kit by Michael Hope."),Vi={href:"http://www.dotmatrixgame.com/",target:"_blank",rel:"noopener noreferrer"},Zi=t("Dot Matrix Game Editor"),Ji=t(" - An IDE for Game Boy programming in a C-like language called GBL, with many other features like tile and map extraction, WLA-DX assembly, and more."),qi={href:"https://github.com/mattcurrie/mgbdis",target:"_blank",rel:"noopener noreferrer"},Xi=t("mgbdis"),Yi=t(" - Game Boy ROM disassembler with RGBDS compatible output."),Qi={href:"http://catskull.net/GB-Logo-Generator/",target:"_blank",rel:"noopener noreferrer"},$i=t("ROM Header Utility"),ea=t(" - An online tool to inspect and modify a ROM's header data, including the logo."),ta={href:"https://github.com/bbbbbr/romusage",target:"_blank",rel:"noopener noreferrer"},oa=t("romusage"),ra=t(" - Command line tool for estimating usage (free space) of Game Boy ROMs from a .map, .noi or ihx file. Works with GBDK-2020 and RGBDS."),na={href:"https://github.com/devdri/awake",target:"_blank",rel:"noopener noreferrer"},sa=t("awake"),ia=t(" - Game Boy decompiler."),aa={href:"https://github.com/raphaklaus/gameboy-text-tools",target:"_blank",rel:"noopener noreferrer"},la=t("Game Boy Text Tools"),ha=t(" - Set of tools for text manipulation and translation of Game Boy ROMs written in Node.js."),_a=e("h4",{id:"graphics-utilities",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#graphics-utilities","aria-hidden":"true"},"#"),t(" Graphics utilities")],-1),da={href:"https://github.com/chrisantonellis/gbtdg",target:"_blank",rel:"noopener noreferrer"},ca=t("Game Boy Tile Data Generator"),ga=t(" - HTML5 / JS web application that will convert bitmap images to hexadecimal data appropriate for use in tile based graphical applications, specifically GB."),ma={href:"http://www.devrs.com/gb/hmgd/intro.html",target:"_blank",rel:"noopener noreferrer"},pa=t("Harry Mulder's GB Development"),ua=t(" - Some sources and home of Game Boy Tile Designer (GBTD) and Game Boy Map Builder (GBMB) tools."),ba={href:"https://github.com/bashaus/gbtiles",target:"_blank",rel:"noopener noreferrer"},fa=t("GBTiles"),ka=t(" - Converts .GBR files created with Harry Mulder's Tile Designer (GBTD) and .GBM files created with Harry Mulder's Map Builder (GBMB) to different formats for use with the Game Boy and GBDK."),ya={href:"https://github.com/gitendo/bmp2cgb",target:"_blank",rel:"noopener noreferrer"},Ba=t("bmp2cgb"),Ga=t(" - Graphics converter for Game Boy Color development providing real time palette adjustments."),wa={href:"https://github.com/LuckyLights/png2gb",target:"_blank",rel:"noopener noreferrer"},va=t("png2gb"),Ca=t(" - CLI tool to convert image file to game boy .c array."),Da={href:"https://github.com/exezin/gb-convert",target:"_blank",rel:"noopener noreferrer"},Sa=t("GB-convert"),Aa=t(" - Game Boy tile conversion and map editor tool (converts to assembly)."),Ma={href:"http://make.vg/brewtool/",target:"_blank",rel:"noopener noreferrer"},xa=t("brewtool"),Pa=t(" - A collection of primitive editor/converter tools for making assets used with homebrew ROM development."),Ra={href:"https://github.com/paul-arutyunov/vtGBte",target:"_blank",rel:"noopener noreferrer"},Ta=t("vtGBte"),Ea=t(" - A minimalistic ncurses tile editor."),ja={href:"https://github.com/TwitchPlaysPokemon/tpp1",target:"_blank",rel:"noopener noreferrer"},La=t("tpp1"),za=t(" - Definition and specification of a custom GB/GBC memory/hardware mapper, as a functional superset of MBC."),Fa={href:"https://github.com/delwink/libstdgb",target:"_blank",rel:"noopener noreferrer"},Ia=t("libstdgb"),Oa=t(" - A C library of useful Game Boy operations (SDCC)."),Ha={href:"https://github.com/bbbbbr/gimp-tilemap-gb",target:"_blank",rel:"noopener noreferrer"},Na=t("Tilemap GB"),Ua=t(" - GIMP image editor plug-in for importing & exporting GBMB and GBTD tilemaps and tilesets (as bitmap images or .GBM/.GBR files)."),Ka={href:"https://github.com/bbbbbr/gimp-tilemap-helper",target:"_blank",rel:"noopener noreferrer"},Wa=t("Tilemap Helper"),Va=t(" - GIMP image editor plug-in for optimizing tile maps and tile sets."),Za={href:"https://github.com/Rangi42/tilemap-studio",target:"_blank",rel:"noopener noreferrer"},Ja=t("Tilemap Studio"),qa=t(" - A tilemap editor for Game Boy, Color, Advance, and SNES projects. Written in C++ with FLTK."),Xa={href:"https://github.com/Optiroc/SuperFamiconv",target:"_blank",rel:"noopener noreferrer"},Ya=t("Superfamiconv"),Qa=t(" - Flexible and composable tile graphics converter supporting Super Nintendo, Game Boy, Game Boy Color, Game Boy Advance, Mega Drive and PC Engine formats."),$a=e("h4",{id:"hardware-and-rom-utilities",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hardware-and-rom-utilities","aria-hidden":"true"},"#"),t(" Hardware and ROM utilities")],-1),el={href:"https://github.com/Palmr/cart-dumper",target:"_blank",rel:"noopener noreferrer"},tl=t("cart-dumper"),ol=t(" - Game Boy Cartridge Dumper ROM."),rl={href:"https://github.com/jkbenaim/gbcamextract",target:"_blank",rel:"noopener noreferrer"},nl=t("gbcamextract"),sl=t(" - Extracts photos from Game Boy Camera saves."),il={href:"https://github.com/svendahlstrand/game-boy-lcd-sniffing",target:"_blank",rel:"noopener noreferrer"},al=t("Game Boy LCD sniffing"),ll=t(" - Sniff your Game Boy's LCD using a logic analyzer."),hl={href:"https://github.com/sanqui/swapdump",target:"_blank",rel:"noopener noreferrer"},_l=t("swapdump"),dl=t(" - Diagnostic utility for Game Boy flashcarts."),cl={href:"https://github.com/JustinLloyd/Gameboy-LinkUp",target:"_blank",rel:"noopener noreferrer"},gl=t("Gameboy-LinkUp"),ml=t(" - Game Boy LinkUp serial cable networking project."),pl=e("h4",{id:"music-drivers-and-trackers",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#music-drivers-and-trackers","aria-hidden":"true"},"#"),t(" Music drivers and trackers")],-1),ul={href:"https://github.com/DevEd2/DevSound",target:"_blank",rel:"noopener noreferrer"},bl=t("DevSound"),fl=t(" - Sound driver embeddable in homebrews which supports pulse width manipulation, arpeggios, and multiple waveforms."),kl={href:"http://gbdev.gg8.se/files/musictools/Aleksi%20Eeben/Carillon%20Editor.zip",target:"_blank",rel:"noopener noreferrer"},yl=t("Carillon Player"),Bl=t(" - Music Engine."),Gl={href:"https://github.com/AntonioND/gbt-player",target:"_blank",rel:"noopener noreferrer"},wl=t("GBT PLAYER"),vl=t(" - A music player library and converter kit."),Cl={href:"https://github.com/SimonLarsen/mmlgb",target:"_blank",rel:"noopener noreferrer"},Dl=t("mmlgb"),Sl=t(" - A MML parser and GBDK sound driver for the Nintendo Game Boy."),Al={href:"https://github.com/bazzinotti/XPMCK",target:"_blank",rel:"noopener noreferrer"},Ml=t("XPMCK"),xl=t(" - An MML based music compiler with support for Game Boy & Game Boy Color."),Pl={href:"https://github.com/gb-archive/GBSoundSystem",target:"_blank",rel:"noopener noreferrer"},Rl=t("SoundSystem"),Tl=t(" - A modernized audio driver for GameBoy Tracker (aka the Paragon 5 music player)."),El={href:"https://github.com/SuperDisk/hUGETracker",target:"_blank",rel:"noopener noreferrer"},jl=t("hUGETracker"),Ll=t(" - A music tracker based on OpenMPT, focused on ease of use, compact output, and embeddability in homebrew games."),zl={href:"https://github.com/datguywitha3ds/CBT-FX",target:"_blank",rel:"noopener noreferrer"},Fl=t("CBT-FX"),Il=t(" - A GBDK-2020 sound effect driver compatible with FX-Hammer sound effects."),Ol=n('<h2 id="programming" tabindex="-1"><a class="header-anchor" href="#programming" aria-hidden="true">#</a> Programming</h2><p>Guides, tutorials and tools to develop software for Game Boy using the development toolchains described in the <a href="#software-development">Software Development</a> chapter.</p><h3 id="asm" tabindex="-1"><a class="header-anchor" href="#asm" aria-hidden="true">#</a> ASM</h3>',3),Hl={href:"https://eldred.fr/gb-asm-tutorial",target:"_blank",rel:"noopener noreferrer"},Nl=t("gb asm tutorial"),Ul=t(" - Step by step tutorial, building several ROMs to accompany its explanations."),Kl={href:"http://gameboy.mongenel.com/asmschool.html",target:"_blank",rel:"noopener noreferrer"},Wl=t("ASMSchool"),Vl=t(" - A set of lessons by Duo about coding in Assembly for GB/GBC and disassembling."),Zl={href:"https://github.com/tobiasvl/hardware.inc",target:"_blank",rel:"noopener noreferrer"},Jl=t("hardware.inc"),ql=t(" - Standard include file containing Game Boy hardware definitions for use in RGBDS projects."),Xl={href:"https://gb-archive.github.io/salvage/tutorial_de_ensamblador/tutorial_de_ensamblador_la_decadence.html",target:"_blank",rel:"noopener noreferrer"},Yl=t("Assembly tutorial by David Pello"),Ql=t(" - Good document to learn to produce working asm code for gb. Brief explanations of many important topics. Many examples with commented source code."),$l={href:"https://github.com/assemblydigest/gameboy",target:"_blank",rel:"noopener noreferrer"},eh=t("assemblydigest"),th=t(" - Exploring Game Boy programming techniques: "),oh={href:"http://assemblydigest.tumblr.com/post/77203696711/tutorial-making-an-empty-game-boy-rom-in-wiz",target:"_blank",rel:"noopener noreferrer"},rh=t("Making an Empty Game Boy ROM (in Wiz)"),nh={href:"http://assemblydigest.tumblr.com/post/77404621743/tutorial-making-art-for-the-game-boy",target:"_blank",rel:"noopener noreferrer"},sh=t("Making Art for the Game Boy"),ih={href:"http://web.archive.org/web/20150511145100/http://www.bennvenn.com/Beginners_Guide_To_Reverse_Engineering.htm",target:"_blank",rel:"noopener noreferrer"},ah=t("Beginner's Guide to Reverse Engineering GB"),lh=t(" - Some starting tips on disassembling and reverse engineering."),hh={href:"http://voidptr.io/blog/2017/01/21/GameBoy.html",target:"_blank",rel:"noopener noreferrer"},_h=t("FlappyBoy: Making a simple Game Boy Game"),dh={href:"https://imanoleasgames.blogspot.no/2016/12/games-aside-1-super-game-boy.html",target:"_blank",rel:"noopener noreferrer"},ch=t("Super Game Boy development"),gh=t(" - Step by step tutorial to implement Super Game Boy features (frame and palettes)."),mh={href:"https://peterwynroberts.wordpress.com/2014/05/11/gameboy-programming-tutorial-hello-world/",target:"_blank",rel:"noopener noreferrer"},ph=t("GameBoy programming tutorial: Hello World!"),uh=t(" - Step by step tutorial."),bh={href:"https://github.com/lancekindle/DMGreport",target:"_blank",rel:"noopener noreferrer"},fh=t("DMGreport"),kh=t(" - Game programming tutorials in assembly."),yh={href:"https://gbdev.gg8.se/wiki/articles/OAM_DMA_tutorial",target:"_blank",rel:"noopener noreferrer"},Bh=t("OAM DMA tutorial"),Gh=t(" - Example of how to use OAM DMA in assembly."),wh={href:"https://github.com/ahrnbom/gbapfomgd",target:"_blank",rel:"noopener noreferrer"},vh=t("Game Boy Assembly Programming for the Modern Game Developer"),Ch=t(" - An e-book about making Game Boy games in Assembly."),Dh=e("h4",{id:"sources",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#sources","aria-hidden":"true"},"#"),t(" Sources")],-1),Sh=e("p",null,"Fragments of code, effects, proof of concepts and generally non complete games.",-1),Ah={href:"http://www.devrs.com/gb/asmcode.php",target:"_blank",rel:"noopener noreferrer"},Mh=t("dev'rs ASM section"),xh=t(" - A lot of working demos and sources."),Ph={href:"https://github.com/EmmaEwert/gameboy",target:"_blank",rel:"noopener noreferrer"},Rh=t("EmmaEwert's experiments"),Th=t(" - A collection of prototype programs, mostly just toying around. Among others, a daylight effect, transparency and a weather effect."),Eh={href:"https://github.com/gb-archive/DeadCScroll",target:"_blank",rel:"noopener noreferrer"},jh=t("DeadCScroll"),Lh=t(' - A detailed tutorial on how to make the screen wobble, among other "raster effects"'),zh=e("h4",{id:"timings",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#timings","aria-hidden":"true"},"#"),t(" Timings")],-1),Fh={href:"http://blog.kevtris.org/blogfiles/Nitty%20Gritty%20Gameboy%20VRAM%20Timing.txt",target:"_blank",rel:"noopener noreferrer"},Ih=t("Nitty Gritty Gameboy Cycle Timing"),Oh={href:"https://www.reddit.com/r/EmuDev/comments/59pawp/gb_mode3_sprite_timing/",target:"_blank",rel:"noopener noreferrer"},Hh=t("Mode3 Sprite Timing"),Nh={href:"http://gameboy.mongenel.com/dmg/gbc_dma_transfers.txt",target:"_blank",rel:"noopener noreferrer"},Uh=t("GameBoy Color DMA-Transfers v0.0.1"),Kh={href:"http://gameboy.mongenel.com/dmg/istat98.txt",target:"_blank",rel:"noopener noreferrer"},Wh=t("STAT interrupt timings"),Vh={href:"https://github.com/jdeblese/gbcpu/wiki/Video-Timing",target:"_blank",rel:"noopener noreferrer"},Zh=t("Video Timing"),Jh=e("h4",{id:"boilerplates-and-libraries",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#boilerplates-and-libraries","aria-hidden":"true"},"#"),t(" Boilerplates and libraries")],-1),qh={href:"https://github.com/nezticle/rgbds-template",target:"_blank",rel:"noopener noreferrer"},Xh=t("rgbds-template"),Yh=t(" - Basic hello-world example for Game Boy using RGBDS."),Qh={href:"http://www.devrs.com/gb/files/galp.zip",target:"_blank",rel:"noopener noreferrer"},$h=t("Game Boy Assembly Language Primer"),e_=t(" - Simple template code with memory defines, copy routines and IBM font tilemap."),t_={href:"https://github.com/yenatch/bootstrap.gb",target:"_blank",rel:"noopener noreferrer"},o_=t("bootstrap.gb"),r_=t(" - An example Game Boy project."),n_={href:"https://github.com/junebug12851/GameboyBoilerplateProj",target:"_blank",rel:"noopener noreferrer"},s_=t("Gameboy Boilerplate"),i_=t(" - Boilerplate project to move quicker into the actual assembly code for your game."),a_={href:"https://github.com/ahrnbom/gingerbread",target:"_blank",rel:"noopener noreferrer"},l_=t("GingerBread"),h_=t(" - A software library for making your own Game Boy games. It is made to be used alongside the book "),__={href:"https://github.com/ahrnbom/gbapfomgd",target:"_blank",rel:"noopener noreferrer"},d_=t("Game Boy Assembly Programming for the Modern Game Developer"),c_=t(" which also doubles as documentation."),g_={href:"https://github.com/ISSOtm/gb-vwf",target:"_blank",rel:"noopener noreferrer"},m_=t("gb-vwf"),p_=t(" - Library to print variable-width text, comes with a demo."),u_={href:"https://github.com/ISSOtm/gb-boilerplate",target:"_blank",rel:"noopener noreferrer"},b_=t("gb-boilerplate"),f_=t(" - A template for starting Game Boy projects, providing a Makefile for infrastructure."),k_={href:"https://github.com/ISSOtm/gb-starter-kit",target:"_blank",rel:"noopener noreferrer"},y_=t("gb-starter-kit"),B_=t(" - An expansion on the above, including base library code as well to get started faster."),G_={href:"https://github.com/gb-archive/gb-template",target:"_blank",rel:"noopener noreferrer"},w_=t("gb-template"),v_=t(" - A template with basic functions such as joypad input, DMA transfers, and map/tile data loading."),C_=e("h4",{id:"syntax-highlighting-packages",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#syntax-highlighting-packages","aria-hidden":"true"},"#"),t(" Syntax highlighting packages")],-1),D_={href:"https://atom.io/packages/language-rgbasm",target:"_blank",rel:"noopener noreferrer"},S_=t("Atom language package for RGBASM"),A_=t(" - Atom syntax highlighting for RGBDS assembly."),M_={href:"https://github.com/ISSOtm/gbz80-highlight",target:"_blank",rel:"noopener noreferrer"},x_=t("gbz80-highlight"),P_=t(" - Notepad+- and gedit syntax highlighting files for RGBDS assembly."),R_={href:"http://www.vim.org/scripts/script.php?script_id=819",target:"_blank",rel:"noopener noreferrer"},T_=t("Vim syntax file for the Game Boy assembler RGBASM"),E_=t(" - Vim syntax highlighting for RGBDS assembly."),j_={href:"https://github.com/Leandros/dotfiles/blob/master/.vim/syntax/rgbds.vim",target:"_blank",rel:"noopener noreferrer"},L_=t("Vim syntax file for RGBDS"),z_=t(" - Another Vim syntax highlighting file for RGBDS assembly."),F_={href:"https://packagecontrol.io/packages/RGBDS",target:"_blank",rel:"noopener noreferrer"},I_=t("sublime-rgbds"),O_=t(" - A Sublime Text 3 package for RGBDS, including syntax highlighting and some completion snippets."),H_={href:"https://github.com/Imanolea/z80asm-vscode",target:"_blank",rel:"noopener noreferrer"},N_=t("Z80 Assembly support for Visual Studio Code"),U_={href:"https://github.com/DonaldHays/rgbds-vscode",target:"_blank",rel:"noopener noreferrer"},K_=t("rgbds-vscode"),W_=t(" - Visual Studio Code language extension for RGBDS GBZ80 Assembly."),V_={href:"https://github.com/japanoise/rgbds-mode",target:"_blank",rel:"noopener noreferrer"},Z_=t("rgbds-mode"),J_=t(" - Emacs major mode for RGBDS assembly."),q_=e("h3",{id:"c",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#c","aria-hidden":"true"},"#"),t(" C")],-1),X_={href:"https://github.com/gb-archive/salvage/blob/master/misc/8bit_wonderland.pdf",target:"_blank",rel:"noopener noreferrer"},Y_=t("8-Bit Wonderland"),Q_=t(" - Well-written introductory document about how the Game Boy works and how to start developing working code for it."),$_={href:"https://github.com/gbdk-salvage/grooves-game-boy-programming",target:"_blank",rel:"noopener noreferrer"},ed=t("Grooves Game Boy Programming"),td=t(" - A complete set of lessons about implementing various game mechanics in a Game Boy game."),od={href:"http://pastebin.com/F3tHLj68",target:"_blank",rel:"noopener noreferrer"},rd=t("How to Write a Simple Side Scrolling Game"),nd=t(" - Old (but still relevant) tutorial."),sd={href:"http://pastebin.com/gzT47MPJ",target:"_blank",rel:"noopener noreferrer"},id=t("Just another simple tutorial"),ad={href:"https://refreshgames.co.uk/2016/04/18/gameboy-tutorial-rom/",target:"_blank",rel:"noopener noreferrer"},ld=t("GBDK Tutorial"),hd=t(" - Fairly minimal game demo for getting started with GBDK."),_d={href:"http://gbdev.gg8.se/wiki/articles/GBDK_Sprite_Tutorial",target:"_blank",rel:"noopener noreferrer"},dd=t("GBDK Sprite"),cd=t(" - Presents a workflow for getting multiple sprites to display and animate."),gd={href:"http://gbdev.gg8.se/wiki/articles/GBDK_Color_Tutorial",target:"_blank",rel:"noopener noreferrer"},md=t("GBDK Color"),pd=t(" - Extends your knowledge of basic spriting on the Game Boy by adding colors to sprites, backgrounds and the window layer."),ud={href:"http://gbdev.gg8.se/wiki/articles/GBDK_Joypad_Tutorial",target:"_blank",rel:"noopener noreferrer"},bd=t("GBDK Joypad"),fd=t(" - Details the use of the joypad with GBDK."),kd={href:"https://web.archive.org/web/20210427064949/www.personal.triticom.com/~erm/GameBoy/",target:"_blank",rel:"noopener noreferrer"},yd=t("Game Boy home of Flavor"),Bd=t(" - Some full games and sources."),Gd={href:"https://videlais.com/2016/07/03/programming-game-boy-games-using-gbdk-part-1-configuring-programming-and-compiling/",target:"_blank",rel:"noopener noreferrer"},wd=t("GBDK Configuring and Programming Tutorial"),vd=t(" - Configuring GBDK, Using Tiles, Colliding Sprites, GBTD, GBMB, Memory Management and ROM Banking."),Cd={href:"https://github.com/mrombout/gbdk_playground",target:"_blank",rel:"noopener noreferrer"},Dd=t("Simplified GBDK examples"),Sd={href:"https://www.youtube.com/playlist?list=PLeEj4c2zF7PaFv5MPYhNAkBGrkx4iPGJo",target:"_blank",rel:"noopener noreferrer"},Ad=t("GBDK Programming Video Tutorials"),Md=t(" - A series of video tutorials introducing beginners to programming with GBDK."),xd=e("h2",{id:"homebrews",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#homebrews","aria-hidden":"true"},"#"),t(" Homebrews")],-1),Pd=e("p",null,"Complete and open source games.",-1),Rd={href:"https://hh.gbdev.io",target:"_blank",rel:"noopener noreferrer"},Td=t("Homebrew Hub"),Ed=t(" - Every unofficial homebrew ever produced for Game Boy playable online (mobile/touch too): a community-lead attempt to collect, archive and save every unofficial game, homebrew, demo, patch, hackrom for Game Boy (Color) produced by the community through years of passionate work."),jd=e("h3",{id:"asm-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#asm-1","aria-hidden":"true"},"#"),t(" ASM")],-1),Ld={href:"https://github.com/BonsaiDen/Tuff.gb",target:"_blank",rel:"noopener noreferrer"},zd=t("Tuff"),Fd={href:"https://github.com/Sanqui/2048-gb",target:"_blank",rel:"noopener noreferrer"},Id=t("2048-gb"),Od={href:"https://bitbucket.org/Sanqui/snake/src/?at=master",target:"_blank",rel:"noopener noreferrer"},Hd=t("Snake"),Nd={href:"https://github.com/huderlem/lazerpong",target:"_blank",rel:"noopener noreferrer"},Ud=t("Lazerpong"),Kd={href:"https://github.com/AntonioND/geometrix",target:"_blank",rel:"noopener noreferrer"},Wd=t("Geometrix"),Vd={href:"https://github.com/AntonioND/ucity",target:"_blank",rel:"noopener noreferrer"},Zd=t("\xB5City"),Jd={href:"https://github.com/mholtkamp/carazu",target:"_blank",rel:"noopener noreferrer"},qd=t("Carazu"),Xd={href:"https://github.com/DonaldHays/snake-gb",target:"_blank",rel:"noopener noreferrer"},Yd=t("Snake-gb"),Qd={href:"https://github.com/furrtek/GB303",target:"_blank",rel:"noopener noreferrer"},$d=t("GB303"),ec=t(" - GB303 wavetable-based TB-303 style synthesizer for the Nintendo Game Boy."),tc={href:"https://github.com/JustSid/Sushi",target:"_blank",rel:"noopener noreferrer"},oc=t("Sushi"),rc={href:"https://github.com/bitnenfer/flappy-boy-asm",target:"_blank",rel:"noopener noreferrer"},nc=t("Flappy-boy-asm"),sc={href:"https://github.com/dubvulture/gbdev",target:"_blank",rel:"noopener noreferrer"},ic=t("kupman"),ac=t(" and some other projects."),lc={href:"https://github.com/tbsp/Adjustris",target:"_blank",rel:"noopener noreferrer"},hc=t("Adjustris"),_c={href:"https://github.com/exezin/exeman/",target:"_blank",rel:"noopener noreferrer"},dc=t("exeman"),cc={href:"https://github.com/ISSOtm/Aevilia-GB",target:"_blank",rel:"noopener noreferrer"},gc=t("Aevilia"),mc={href:"https://github.com/Kartones/gameboy",target:"_blank",rel:"noopener noreferrer"},pc=t("GBSlides"),uc=t(" - A simple Game Boy Powerpoint-like slides viewer."),bc={href:"https://github.com/dannye/pokered-gbc",target:"_blank",rel:"noopener noreferrer"},fc=t("Pokered-gbc"),kc=t(" - Pok\xE9mon Red remade with full GBC support."),yc={href:"https://github.com/tslanina/Retro-GameBoyColor-ToyToy",target:"_blank",rel:"noopener noreferrer"},Bc=t("ToyToy"),Gc={href:"https://github.com/tslanina/Retro-GameBoyColor-StefaN",target:"_blank",rel:"noopener noreferrer"},wc=t("StefaN"),vc=t(" - Fourway Breakout clone."),Cc={href:"https://github.com/tslanina/Retro-GameBoyColor-Galaxia",target:"_blank",rel:"noopener noreferrer"},Dc=t("Galaxia"),Sc={href:"https://github.com/sanqui/desgb",target:"_blank",rel:"noopener noreferrer"},Ac=t("desgb"),Mc=t(" - DES encryption."),xc={href:"https://github.com/l0k1/superhappyfunbubbletime",target:"_blank",rel:"noopener noreferrer"},Pc=t("superhappyfunbubbletime"),Rc={href:"https://github.com/lancekindle/minesweepGB",target:"_blank",rel:"noopener noreferrer"},Tc=t("minesweepGB"),Ec={href:"https://github.com/pinobatch/libbet",target:"_blank",rel:"noopener noreferrer"},jc=t("Libbet and the Magic Floor"),Lc={href:"https://github.com/dannye/waveform-gb",target:"_blank",rel:"noopener noreferrer"},zc=t("waveform-gb"),Fc=t(" - Program visualizing the wave form used by the wave channel. The wave form can be edited freely and playback of the wave is updated immediately."),Ic={href:"https://gitlab.com/BonsaiDen/vectroid.gb",target:"_blank",rel:"noopener noreferrer"},Oc=t("vectroid.gb"),Hc=t(" - Developed with gbasm."),Nc={href:"https://github.com/gb-archive/plantboy",target:"_blank",rel:"noopener noreferrer"},Uc=t("PlantBoy"),Kc={href:"https://makrill.itch.io/death-planet",target:"_blank",rel:"noopener noreferrer"},Wc=t("Death Planet"),Vc={href:"https://makrill.itch.io/quartet",target:"_blank",rel:"noopener noreferrer"},Zc=t("Quartet"),Jc=t(" - Puzzle game for the Game Boy (Color) and Super Game Boy."),qc={href:"https://snorpung.itch.io/dangan-gb",target:"_blank",rel:"noopener noreferrer"},Xc=t("Dangan"),Yc=e("h3",{id:"c-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#c-1","aria-hidden":"true"},"#"),t(" C")],-1),Qc={href:"https://github.com/bitnenfer/FlappyBoy",target:"_blank",rel:"noopener noreferrer"},$c=t("FlappyBoy"),eg={href:"https://github.com/pashutk/flappybird-gameboy",target:"_blank",rel:"noopener noreferrer"},tg=t("flappybird-gameboy"),og={href:"https://github.com/gb-archive/fbgb",target:"_blank",rel:"noopener noreferrer"},rg=t("fbgb"),ng={href:"https://web.archive.org/web/20171002042716/http://ludumdare.com/compo/ludum-dare-34/?action=preview&uid=6823",target:"_blank",rel:"noopener noreferrer"},sg=t("Novascape"),ig={href:"https://github.com/cppchriscpp/SquishyTheTurtle",target:"_blank",rel:"noopener noreferrer"},ag=t("Squishy the Turtle"),lg={href:"https://github.com/avivace/quadratino",target:"_blank",rel:"noopener noreferrer"},hg=t("Quadratino"),_g={href:"https://github.com/elfgames/doctorhow",target:"_blank",rel:"noopener noreferrer"},dg=t("Doctor How"),cg={href:"https://github.com/Zal0/gbjam2016",target:"_blank",rel:"noopener noreferrer"},gg=t("Super Princess' 2092 Exodus"),mg=t(" - ("),pg={href:"https://github.com/Zal0/ZGB/",target:"_blank",rel:"noopener noreferrer"},ug=t("ZGB engine"),bg=t(")."),fg={href:"https://github.com/brovador/GBsnake",target:"_blank",rel:"noopener noreferrer"},kg=t("GBsnake"),yg={href:"https://github.com/andreasjhkarlsson/gb-mines",target:"_blank",rel:"noopener noreferrer"},Bg=t("gb-mines"),Gg={href:"http://www.atari2600land.com/gameboy/oranges.html",target:"_blank",rel:"noopener noreferrer"},wg=t("oranges"),vg={href:"https://github.com/Imanolea/bitbitjam3_red_hot_princess_carnage",target:"_blank",rel:"noopener noreferrer"},Cg=t("red hot princess carnage"),Dg={href:"http://www.tensi.eu/thomas/programming/gameboy/loderunner.html",target:"_blank",rel:"noopener noreferrer"},Sg=t("loderunner"),Ag={href:"https://refreshgames.co.uk/2017/04/24/ludum-dare-38-entry-hives/",target:"_blank",rel:"noopener noreferrer"},Mg=t("Hives"),xg={href:"https://github.com/DonaldHays/bubblefactory",target:"_blank",rel:"noopener noreferrer"},Pg=t("Bubble Factory"),Rg=t(" - *Vanilla- SDCC (no gbdk)."),Tg={href:"https://github.com/rubfi/gbc-atari-boxing",target:"_blank",rel:"noopener noreferrer"},Eg=t("GBC Atari Boxing"),jg=t(" - Atari 2600 Boxing clone for the Game Boy (Color)."),Lg={href:"https://github.com/haroldo-ok/really-old-stuff/tree/master/gameboy",target:"_blank",rel:"noopener noreferrer"},zg=t("GB raycaster, Vision-8"),Fg=t(" - and some other projects."),Ig={href:"https://github.com/SimonLarsen/tobutobugirl-dx",target:"_blank",rel:"noopener noreferrer"},Og=t("Tobu Tobu Girl Deluxe"),Hg=t(" - An arcade platformer for the Game Boy (Color)."),Ng={href:"http://sebastianmihai.com/gameboy-burly-bear.html",target:"_blank",rel:"noopener noreferrer"},Ug=t("Burly Bear vs. The Mean Foxes"),Kg=t(" ("),Wg={href:"http://sebastianmihai.com/gameboy-color-burly-bear.html",target:"_blank",rel:"noopener noreferrer"},Vg=t("GBC"),Zg=t(" port)"),Jg={href:"https://github.com/MasterIV/PostBot",target:"_blank",rel:"noopener noreferrer"},qg=t("PostBot"),Xg={href:"https://github.com/kanfor/gunsridersgameboy",target:"_blank",rel:"noopener noreferrer"},Yg=t("Guns & Riders"),Qg={href:"https://github.com/gingemonster/DinosOfflineAdventure",target:"_blank",rel:"noopener noreferrer"},$g=t("Dino's Offline Adventure"),em=t(" - A clone of the Google Chrome offline game."),tm={href:"https://github.com/rnegron/dino-gb",target:"_blank",rel:"noopener noreferrer"},om=t("dino-gb"),rm=t(" - Another clone of the Chrome game."),nm={href:"https://github.com/flozz/evoland.gb",target:"_blank",rel:"noopener noreferrer"},sm=t("Evoland.gb"),im=t(" - A port of the first level of Evoland."),am={href:"https://github.com/bbbbbr/Petris",target:"_blank",rel:"noopener noreferrer"},lm=t("Petris"),hm=t(" - A puzzle game of shapely pets for the Game Boy Color ("),_m={href:"https://bbbbbr.itch.io/petris",target:"_blank",rel:"noopener noreferrer"},dm=t("itch.io"),cm=t(")."),gm={href:"https://github.com/gb-archive/infinity-gbc",target:"_blank",rel:"noopener noreferrer"},mm=t("Infinity"),pm=t(" - RPG developed by Affinix Software primarily between the years 1999 and 2001. The game never found a publisher and was eventually canceled. Got recently released with the full source, development tools and workflows."),um={href:"https://gbdev.gg8.se/forums/viewtopic.php?id=743",target:"_blank",rel:"noopener noreferrer"},bm=t("Black Castle"),fm=t(" - Side scrolling platformer for the Game Boy ("),km={href:"https://user0x7f.itch.io/black-castle",target:"_blank",rel:"noopener noreferrer"},ym=t("itch.io"),Bm=t(")."),Gm={href:"https://gbdev.gg8.se/forums/viewtopic.php?id=674",target:"_blank",rel:"noopener noreferrer"},wm=t("Genesis"),vm=t(" - Shmup for the Game Boy ("),Cm={href:"https://user0x7f.itch.io/genesis",target:"_blank",rel:"noopener noreferrer"},Dm=t("itch.io"),Sm=t(")."),Am={href:"https://antonylavelle.itch.io/indestructotank-gb",target:"_blank",rel:"noopener noreferrer"},Mm=t("Indestructo Tank!"),xm={href:"https://pocketpixel.design/super-jetpak-dx-game-boy-rom.html",target:"_blank",rel:"noopener noreferrer"},Pm=t("Super JetPak DX"),Rm={href:"https://aiguanachein.itch.io/powa",target:"_blank",rel:"noopener noreferrer"},Tm=t("Powa!"),Em=t(" - Side scrolling platformer for the Game Boy (Color) ("),jm={href:"https://github.com/Zal0/ZGB/",target:"_blank",rel:"noopener noreferrer"},Lm=t("ZGB engine"),zm=t(")."),Fm={href:"https://thegreatgallus.itch.io/cavern-mvm-9",target:"_blank",rel:"noopener noreferrer"},Im=t("Cavern"),Om=t(" - ("),Hm={href:"https://github.com/Zal0/ZGB/",target:"_blank",rel:"noopener noreferrer"},Nm=t("ZGB engine"),Um=t(")."),Km={href:"https://ctneptune.itch.io/mona-and-the-witchs-hat-dx",target:"_blank",rel:"noopener noreferrer"},Wm=t("Mona and the Witch's Hat Deluxe"),Vm=t(" - ("),Zm={href:"https://github.com/Zal0/ZGB/",target:"_blank",rel:"noopener noreferrer"},Jm=t("ZGB engine"),qm=t(")."),Xm={href:"https://gamejolt.com/games/the-bouncing-ball-gb/86699",target:"_blank",rel:"noopener noreferrer"},Ym=t("The Bouncing Ball"),Qm={href:"https://drludos.itch.io/dmg-deals-damage",target:"_blank",rel:"noopener noreferrer"},$m=t("DMG Deals Damage"),ep=e("h3",{id:"gb-studio",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#gb-studio","aria-hidden":"true"},"#"),t(" GB Studio")],-1),tp={href:"https://kadabura.itch.io/soul-void",target:"_blank",rel:"noopener noreferrer"},op=t("Soul Void"),rp=t(" - Interactive horror fiction."),np={href:"https://izma.itch.io/deadeus",target:"_blank",rel:"noopener noreferrer"},sp=t("Deadeus"),ip={href:"https://lumpytouch.itch.io/super-impostor-bros",target:"_blank",rel:"noopener noreferrer"},ap=t("SUPER IMPOSTOR BROS."),lp=e("h3",{id:"demos",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#demos","aria-hidden":"true"},"#"),t(" Demos")],-1),hp={href:"https://github.com/AntonioND/back-to-color",target:"_blank",rel:"noopener noreferrer"},_p=t("Back to Color"),dp={href:"https://github.com/vegard/beach-gbc",target:"_blank",rel:"noopener noreferrer"},cp=t("beach-gbc"),gp={href:"https://github.com/mills32/CUTE_DEMO",target:"_blank",rel:"noopener noreferrer"},mp=t("CUTE DEMO"),pp={href:"https://github.com/svendahlstrand/10-print-game-boy",target:"_blank",rel:"noopener noreferrer"},up=e("code",null,"10 PRINT",-1),bp=t(" Game Boy"),fp={href:"https://github.com/naavis/roboto-demo",target:"_blank",rel:"noopener noreferrer"},kp=t("Roboto Demo"),yp={href:"https://github.com/wtjones/matrix-rain-gb",target:"_blank",rel:"noopener noreferrer"},Bp=t("matrix-rain-gb"),Gp=t(" - A Matrix digital rain effect in assembler."),wp={href:"https://github.com/LIJI32/GBVideoPlayer",target:"_blank",rel:"noopener noreferrer"},vp=t("GBVideoPlayer"),Cp=t(" - A technical demo demonstrating how the Game Boy LCD controller can be hacked to make a Game Boy Color play a full motion video in color, together with music."),Dp={href:"https://github.com/LIJI32/GBVideoPlayer2",target:"_blank",rel:"noopener noreferrer"},Sp=t("GBVideoPlayer2"),Ap=t(" - The second iteration of the above demo, which increases the resolution, adds "),Mp=e("em",null,"stereo- PCM audio, and introduces video compression",-1),xp=t("."),Pp=e("h2",{id:"reverse-engineering",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#reverse-engineering","aria-hidden":"true"},"#"),t(" Reverse Engineering")],-1),Rp={href:"http://ecc-comp.blogspot.it/2016/03/reverse-engineering-kirbys-dreamland-2.html",target:"_blank",rel:"noopener noreferrer"},Tp=t("Reverse engineering Kirby's Dreamland 2"),Ep={href:"https://github.com/pret/pokemon-reverse-engineering-tools",target:"_blank",rel:"noopener noreferrer"},jp=t("pokemontools"),Lp=t(" - a python module that provides various reverse engineering components for various Pok\xE9mon games."),zp={href:"https://www.megabeets.net/reverse-engineering-a-gameboy-rom-with-radare2",target:"_blank",rel:"noopener noreferrer"},Fp=t("Reverse Engineering a Gameboy ROM with radare2"),Ip=t(" - A walkthrough to reverse engineer a Game Boy ROM challenge using radare2."),Op={href:"http://kemenaran.winosx.com/posts/category-disassembling-links-awakening/",target:"_blank",rel:"noopener noreferrer"},Hp=t("Disassembling Link's Awakening"),Np=t(" - A series of blog posts about disassembling Link's Awakening DX."),Up={href:"https://github.com/h3nnn4n/Reverse-Engineering-the-GameBoy-Tetris",target:"_blank",rel:"noopener noreferrer"},Kp=t("Reverse Engineering the GameBoy Tetris"),Wp={href:"https://gbdev.io/articles/dma_hijacking",target:"_blank",rel:"noopener noreferrer"},Vp=t("DMA hijacking"),Zp=t(" - A simple technique that allows you to run custom code in most GB/SGB/CGB games, provided you have an ACE exploit."),Jp=e("h3",{id:"game-disassemblies",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#game-disassemblies","aria-hidden":"true"},"#"),t(" Game Disassemblies")],-1),qp={href:"https://github.com/pret/pokered",target:"_blank",rel:"noopener noreferrer"},Xp=t("Pok\xE9mon Red/Blue"),Yp={href:"https://github.com/pret/pokecrystal",target:"_blank",rel:"noopener noreferrer"},Qp=t("Pok\xE9mon Crystal"),$p={href:"https://github.com/pret/pokeyellow",target:"_blank",rel:"noopener noreferrer"},eu=t("Pok\xE9mon Yellow"),tu={href:"https://github.com/pret/pokegold",target:"_blank",rel:"noopener noreferrer"},ou=t("Pok\xE9mon Gold and Silver"),ru={href:"https://github.com/pret/pokepinball",target:"_blank",rel:"noopener noreferrer"},nu=t("Pok\xE9mon Pinball"),su={href:"https://github.com/pret/poketcg",target:"_blank",rel:"noopener noreferrer"},iu=t("Pok\xE9mon TCG"),au={href:"https://github.com/pret/pokegold-spaceworld",target:"_blank",rel:"noopener noreferrer"},lu=t("pokegold-spaceworld"),hu=t(" - Pok\xE9mon Gold and Silver 1997 Space World demo."),_u={href:"https://github.com/mojobojo/LADX-Disassembly",target:"_blank",rel:"noopener noreferrer"},du=t("Link's Awakening DX"),cu={href:"https://github.com/drenn1/ages-disasm",target:"_blank",rel:"noopener noreferrer"},gu=t("Oracle of Ages"),mu={href:"https://github.com/vinheim3/tetris-gb-disasm",target:"_blank",rel:"noopener noreferrer"},pu=t("Tetris"),uu=t(" - Complete Tetris disassembly."),bu={href:"https://github.com/DevEd2/FXHammer-Disasm",target:"_blank",rel:"noopener noreferrer"},fu=t("FX Hammer"),ku={href:"https://github.com/sanqui/hm3",target:"_blank",rel:"noopener noreferrer"},yu=t("Harvest Moon 3"),Bu=e("h2",{id:"game-boy-camera",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#game-boy-camera","aria-hidden":"true"},"#"),t(" Game Boy Camera")],-1),Gu=e("h3",{id:"retrieving-images",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#retrieving-images","aria-hidden":"true"},"#"),t(" Retrieving images")],-1),wu=e("p",null,"Game Boy Printer emulation (e.g. to retrieve images from the camera):",-1),vu={href:"https://github.com/mofosyne/arduino-gameboy-printer-emulator",target:"_blank",rel:"noopener noreferrer"},Cu=t("Arduino Gameboy Printer Emulator"),Du=t(" - Emulate a gameboy printer via the gameboy link cable."),Su={href:"https://github.com/applefreak/esp8266-gameboy-printer",target:"_blank",rel:"noopener noreferrer"},Au=t("ESP8266 Game Boy Printer"),Mu=t(" - A device that emulates the Gameboy Printer and lets you retrieve images using WiFi powered by an ESP8266."),xu={href:"https://github.com/HerrZatacke/wifi-gbp-emulator",target:"_blank",rel:"noopener noreferrer"},Pu=t("WiFi GBP Emulator"),Ru=t(" - A GameBoy printer emulator which provides the received data over a WiFi connection."),Tu={href:"https://github.com/cristofercruz/gbp-esp-shield-pcb",target:"_blank",rel:"noopener noreferrer"},Eu=t("Game Boy WiFi Printer - D1 Mini Shield"),ju=t(" - Game Boy Printer interface shield for D1 mini/mini Pro ESP8266 boards."),Lu={href:"https://github.com/mofosyne/GameboyPrinterSniffer",target:"_blank",rel:"noopener noreferrer"},zu=t("Game Boy Printer Sniffer"),Fu=t(" - Sniff packet communications between a Game Boy and the Printer."),Iu=e("h3",{id:"changing-the-camera-s-behavior",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#changing-the-camera-s-behavior","aria-hidden":"true"},"#"),t(" Changing the camera's behavior")],-1),Ou=e("p",null,"Methods to improve and/or manipulate the camera's quality and behavior:",-1),Hu={href:"http://ekeler.com/game-boy-camera-canon-ef-mount",target:"_blank",rel:"noopener noreferrer"},Nu=t("Game Boy Camera Canon EF Lens Mount"),Uu={href:"https://www.thingiverse.com/thing:4337362",target:"_blank",rel:"noopener noreferrer"},Ku=t("Game Boy Camera to Canon Lens mount"),Wu=t(" - based on the above."),Vu={href:"https://github.com/cristofercruz/game-boy-camera-frame-replacer",target:"_blank",rel:"noopener noreferrer"},Zu=t("game-boy-camera-frame-replacer"),Ju=t(" - Manipulate the ROM of a camera to include custom frames"),qu=e("h3",{id:"post-processing",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#post-processing","aria-hidden":"true"},"#"),t(" Post processing")],-1),Xu={href:"https://github.com/mofosyne/GameboyPrinterPaperSimulation",target:"_blank",rel:"noopener noreferrer"},Yu=t("Game Boy Printer Paper Simulation"),Qu=t(" - Generate as-if-printed images of digital printed images."),$u={href:"https://github.com/HerrZatacke/gb-printer-web",target:"_blank",rel:"noopener noreferrer"},eb=t("Game Boy Printer Web"),tb=t(" - Gallery app for to the Game Boy camera: import pictures from exports or cartridge dumps and choose color palettes."),ob=e("h2",{id:"related-projects",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#related-projects","aria-hidden":"true"},"#"),t(" Related projects")],-1),rb={href:"https://www.gbstudio.dev/",target:"_blank",rel:"noopener noreferrer"},nb=t("GB Studio"),sb=t(" - Drag and drop game creator with simple, no knowledge required, visual scripting. "),ib={href:"https://gbstudiocentral.com/resources/",target:"_blank",rel:"noopener noreferrer"},ab=t("Resources to get started"),lb={href:"https://discord.gg/knRryZWGcm",target:"_blank",rel:"noopener noreferrer"},hb=t("Dedicated Discord"),_b={href:"https://github.com/trash80/Arduinoboy",target:"_blank",rel:"noopener noreferrer"},db=t("ArduinoBoy"),cb=t(" - Serial communication (MIDI) from an Arduino to the Game Boy for music applications such as LittleSoundDJ, Nanoloop, and mGB."),gb={href:"https://github.com/diegovalverde/papiGB",target:"_blank",rel:"noopener noreferrer"},mb=t("papiGB"),pb=t(" - Game Boy Classic fully functional FPGA implementation from scratch."),ub={href:"https://github.com/trun/fpgaboy",target:"_blank",rel:"noopener noreferrer"},bb=t("fpgaboy"),fb=t(" - Implementation Nintendo's Game Boy console on an FPGA."),kb={href:"https://github.com/danShumway/Piglet",target:"_blank",rel:"noopener noreferrer"},yb=t("Piglet"),Bb=t(" - A LUA-driven AI that plays classic Game Boy color games using experimentation. In active development."),Gb={href:"https://github.com/PumpMagic/ostrich",target:"_blank",rel:"noopener noreferrer"},wb=t("Ostrich"),vb=t(" - A Game Boy Sound System player written in Swift."),Cb={href:"https://github.com/trash80/mGB",target:"_blank",rel:"noopener noreferrer"},Db=t("mGB"),Sb=t(" - A Game Boy cartridge program that enables the Game Boy to act as a full MIDI supported sound module."),Ab={href:"https://github.com/LIJI32/GBVisualizer",target:"_blank",rel:"noopener noreferrer"},Mb=t("GBVisualizer"),xb=t(" - Demonstrating the use of two undocumented Game Boy Color registers, nicknamed PCM12 (FF76) and PCM34 (FF77), which can be used to read the current PCM amplitude of the 4 APU channels."),Pb={href:"https://github.com/drhelius/arduinogameboy",target:"_blank",rel:"noopener noreferrer"},Rb=t("ArduinoGameBoy"),Tb=t(" - Arduino based Game Boy cartridge reader and writer."),Eb={href:"https://github.com/bitnenfer/gameboy-brainfuck",target:"_blank",rel:"noopener noreferrer"},jb=t("gameboy-brainfuck"),Lb=t(" - Brainf*ck interpreter."),zb={href:"https://github.com/elseyf/gbfk",target:"_blank",rel:"noopener noreferrer"},Fb=t("gbfk"),Ib=t(" - Brainf*ck interpreter, with input."),Ob={href:"https://github.com/mattcurrie/gb-save-states",target:"_blank",rel:"noopener noreferrer"},Hb=t("gb-save-states"),Nb=t(" - Patches to add save state support to Game Boy games when playing on the original hardware."),Ub={href:"https://github.com/jdeblese/gbcpu",target:"_blank",rel:"noopener noreferrer"},Kb=t("gbcpu"),Wb=t(" - A CPU and peripherals implementing the Game Boy instruction set and functionality."),Vb={href:"https://youtube.com/watch?v=1lzHfLYzyRM",target:"_blank",rel:"noopener noreferrer"},Zb=t("Digitized Speech in Game Boy Games"),Jb={href:"https://dhole.github.io/post/gameboy_serial_1/",target:"_blank",rel:"noopener noreferrer"},qb=t("Sniffing Game Boy serial traffic with an STM32F4"),Xb={href:"https://dhole.github.io/post/gameboy_serial_2/",target:"_blank",rel:"noopener noreferrer"},Yb=t("Virtual Game Boy Printer with an STM32F4"),Qb={href:"https://dhole.github.io/post/gameboy_serial_3/",target:"_blank",rel:"noopener noreferrer"},$b=t("Printing on the Game Boy Printer using an STM32F4"),ef={href:"https://dhole.github.io/post/gameboy_cartridge_rw_1/",target:"_blank",rel:"noopener noreferrer"},tf=t("Programming Game Boy Chinese cartridges with an STM32F4"),of={href:"https://tilde.town/~minerobber/techwriteups/pokemonpc.html",target:"_blank",rel:"noopener noreferrer"},rf=t("Pokemon Pocket Computer:"),nf=t(" - What is it and how to use it to make cheat codes."),sf={href:"https://dhole.github.io/post/gameboy_custom_logo/",target:"_blank",rel:"noopener noreferrer"},af=t("Booting the Game Boy with a custom logo"),lf=t(" - Bypassing the Nintendo logo check."),hf=t('Making a Game Boy game in 2017: A "Sheep It Up!" Post-Mortem ('),_f={href:"https://www.gamasutra.com/blogs/DoctorLudos/20171207/311143/",target:"_blank",rel:"noopener noreferrer"},df=t("part 1"),cf=t(", "),gf={href:"https://www.gamasutra.com/blogs/DoctorLudos/20180213/314554/",target:"_blank",rel:"noopener noreferrer"},mf=t("part 2"),pf=t(")"),uf={href:"http://fuji.drillspirits.net/?post=87",target:"_blank",rel:"noopener noreferrer"},bf=t("Nintendo's fake logos"),ff=t(" - Every cartridge has to show the authentic logo to be considered valid and be run, but obviously some companies managed to exploit the check system."),kf={href:"https://github.com/stijnfrishert/liblsdj",target:"_blank",rel:"noopener noreferrer"},yf=t("liblsdj"),Bf=t(" - Utility library for interacting with the LSDj save format (.sav), song files (.lsdsng) and more."),Gf={href:"https://github.com/jkotlinski/lsdpatch",target:"_blank",rel:"noopener noreferrer"},wf=t("lsdpatch"),vf=t(" - Tool for modifying samples, fonts and palettes on LSDj ROM images."),Cf={href:"https://github.com/ChaosCabbage/crazy-gameboy-video-experiments",target:"_blank",rel:"noopener noreferrer"},Df=t("Game Boy video effects"),Sf=t(" - Some little experiments using the STAT interrupt to do funny video manipulations."),Af={href:"https://github.com/ekimekim/gbos",target:"_blank",rel:"noopener noreferrer"},Mf=t("gbos"),xf=t(" - A basic operating system for the Game Boy."),Pf={href:"https://translate.google.com/translate?hl=&sl=ru&tl=en&u=https%3A%2F%2Fweb.archive.org%2Fweb%2F20081226145726%2Fhttp%3A%2F%2Fworkmaster.ru%2Findex.php%3Fp%3D8&sandbox=1",target:"_blank",rel:"noopener noreferrer"},Rf=t("Work Master OS"),Tf=t(" - Russian multi tasking operating system."),Ef={href:"https://github.com/Palmr/gb-link-cable",target:"_blank",rel:"noopener noreferrer"},jf=t("Game Boy Link Cable Breakout Board"),Lf={href:"https://github.com/Tauwasser/GBCartFlasher",target:"_blank",rel:"noopener noreferrer"},zf=t("GBCartFlasher firmware"),Ff={href:"https://github.com/zephray/VerilogBoy/",target:"_blank",rel:"noopener noreferrer"},If=t("VerilogBoy"),Of=t(" - Game Boy compatible console Verilog RTL implementation."),Hf={href:"https://github.com/furrtek/GBCamcorder",target:"_blank",rel:"noopener noreferrer"},Nf=t("GBCamcorder"),Uf=t(" - Lo-Fi portable video recorder using a GameBoy Camera cartridge."),Kf={href:"https://github.com/insidegadgets/GBCartRead",target:"_blank",rel:"noopener noreferrer"},Wf=t("GBCartRead"),Vf=t(" - Read ROM, Read RAM or Write RAM from/to a GameBoy Cartridge."),Zf={href:"https://github.com/insidegadgets/GBxCart-RW",target:"_blank",rel:"noopener noreferrer"},Jf=t("GBxCart-RW"),qf=t(" - A device for reading game ROMs, save games and restoring saves for GB, GBC and GBA carts from your PC via USB."),Xf={href:"http://www.its.caltech.edu/~costis/sgb_hack/",target:"_blank",rel:"noopener noreferrer"},Yf=t("Dumping the Super Game Boy Boot ROM"),Qf=e("h3",{id:"directories",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#directories","aria-hidden":"true"},"#"),t(" Directories")],-1),$f={href:"http://gbdev.gg8.se/files/",target:"_blank",rel:"noopener noreferrer"},ek=t("Archive of related files"),tk={href:"https://github.com/gb-archive",target:"_blank",rel:"noopener noreferrer"},ok=t("The Game Boy Archive"),rk=t(" - A library of Game Boy related software, hardware and literature. Aimed to mirror and preserve old and fragmented contributions from the last three decades."),nk={href:"https://github.com/gb-archive/salvage",target:"_blank",rel:"noopener noreferrer"},sk=t("The Game Boy Archive - Salvage"),ik=t(" - Historical archive of software, old articles, FAQs and various documents."),ak=e("h3",{id:"websites",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#websites","aria-hidden":"true"},"#"),t(" Websites")],-1),lk={href:"http://devrs.com/gb",target:"_blank",rel:"noopener noreferrer"},hk=t("devrs.com/gb"),_k=t(" - Old home of the scene: examples, sources, complete documentation, guides, tutorials and various tools."),dk={href:"http://pdroms.de/news/gameboy/",target:"_blank",rel:"noopener noreferrer"},ck=t("pdroms.de"),gk=t(" - Game Boy releases."),mk={href:"http://hhug.me",target:"_blank",rel:"noopener noreferrer"},pk=t("Handheld Underground"),uk=t(" - Unlicensed games, blog posts about Game Boy, home of the hhugboy emulator.");function bk(fk,kk){const r=i("ExternalLinkIcon"),s=i("RouterLink");return l(),h(_,null,[g,e("h3",m,[p,u,e("a",b,[f,o(r)])]),k,y,e("h3",B,[G,w,e("a",v,[C,o(r)])]),D,S,e("blockquote",null,[A,M,e("p",null,[x,e("a",P,[R,o(r)]),T]),E]),j,e("ul",null,[e("li",null,[e("a",L,[z,o(r)]),F]),e("li",null,[e("a",I,[O,o(r)]),H]),e("li",null,[e("a",N,[U,o(r)]),K]),e("li",null,[e("a",W,[V,o(r)]),Z,e("a",J,[q,o(r)]),X])]),Y,e("ul",null,[e("li",null,[e("a",Q,[$,o(r)]),ee]),e("li",null,[e("a",te,[oe,o(r)]),re])]),ne,e("ul",null,[e("li",null,[e("a",se,[ie,o(r)])]),e("li",null,[e("a",ae,[le,o(r)])]),e("li",null,[e("a",he,[_e,o(r)])]),e("li",null,[e("a",de,[ce,o(r)])])]),ge,e("ul",null,[e("li",null,[e("a",me,[pe,o(r)]),ue]),e("li",null,[e("a",be,[fe,o(r)]),ke]),e("li",null,[e("a",ye,[Be,o(r)]),Ge]),e("li",null,[e("a",we,[ve,o(r)]),Ce]),e("li",null,[e("a",De,[Se,o(r)]),Ae]),e("li",null,[e("a",Me,[xe,o(r)]),Pe]),e("li",null,[e("a",Re,[Te,o(r)]),Ee]),e("li",null,[e("a",je,[Le,o(r)]),ze])]),Fe,e("ul",null,[e("li",null,[e("a",Ie,[Oe,o(r)]),He]),e("li",null,[e("a",Ne,[Ue,o(r)]),Ke,e("a",We,[Ve,o(r)]),Ze,e("ul",null,[e("li",null,[e("a",Je,[qe,o(r)]),Xe]),e("li",null,[e("a",Ye,[Qe,o(r)])]),e("li",null,[e("a",$e,[et,o(r)]),tt]),e("li",null,[e("a",ot,[rt,o(r)]),nt]),e("li",null,[e("a",st,[it,o(r)]),at]),e("li",null,[e("a",lt,[ht,o(r)]),_t]),e("li",null,[e("a",dt,[ct,o(r)]),gt]),e("li",null,[e("a",mt,[pt,o(r)]),ut])])]),e("li",null,[e("a",bt,[ft,o(r)])]),e("li",null,[e("a",kt,[yt,o(r)]),Bt]),e("li",null,[e("a",Gt,[wt,o(r)])]),e("li",null,[e("a",vt,[Ct,o(r)]),Dt]),e("li",null,[e("a",St,[At,o(r)]),Mt]),e("li",null,[e("a",xt,[Pt,o(r)]),Rt]),e("li",null,[e("a",Tt,[Et,o(r)])]),e("li",null,[e("a",jt,[Lt,o(r)])])]),zt,e("ul",null,[e("li",null,[e("a",Ft,[It,o(r)]),Ot]),e("li",null,[e("a",Ht,[Nt,o(r)]),Ut]),e("li",null,[Kt,e("ul",null,[e("li",null,[e("a",Wt,[Vt,o(r)]),Zt]),e("li",null,[e("a",Jt,[qt,o(r)]),Xt]),e("li",null,[e("a",Yt,[Qt,o(r)]),$t])])]),e("li",null,[eo,e("ul",null,[e("li",null,[e("a",to,[oo,o(r)])]),e("li",null,[e("a",ro,[no,o(r)])]),e("li",null,[e("a",so,[io,o(r)])])])]),e("li",null,[e("a",ao,[lo,o(r)]),ho]),e("li",null,[e("a",_o,[co,o(r)])]),e("li",null,[e("a",go,[mo,o(r)]),po]),e("li",null,[e("a",uo,[bo,o(r)]),fo]),ko,e("li",null,[e("a",yo,[Bo,o(r)])])]),Go,e("ul",null,[e("li",null,[e("a",wo,[vo,o(r)]),Co]),e("li",null,[e("a",Do,[So,o(r)]),Ao]),e("li",null,[e("a",Mo,[xo,o(r)]),Po]),e("li",null,[e("a",Ro,[To,o(r)]),Eo]),e("li",null,[e("a",jo,[Lo,o(r)]),zo,e("a",Fo,[Io,o(r)]),Oo]),e("li",null,[e("a",Ho,[No,o(r)]),Uo]),e("li",null,[e("a",Ko,[Wo,o(r)]),Vo])]),Zo,e("ul",null,[e("li",null,[e("a",Jo,[qo,o(r)]),Xo]),e("li",null,[e("a",Yo,[Qo,o(r)]),$o]),e("li",null,[e("a",er,[tr,o(r)]),or]),e("li",null,[e("a",rr,[nr,o(r)]),sr]),e("li",null,[e("a",ir,[ar,o(r)])]),e("li",null,[e("a",lr,[hr,o(r)]),_r])]),dr,e("ul",null,[e("li",null,[e("a",cr,[gr,o(r)]),mr,e("a",pr,[ur,o(r)]),br]),e("li",null,[e("a",fr,[kr,o(r)]),yr]),e("li",null,[e("a",Br,[Gr,o(r)]),wr,e("a",vr,[Cr,o(r)]),Dr]),e("li",null,[e("a",Sr,[Ar,o(r)]),Mr]),e("li",null,[e("a",xr,[Pr,o(r)])]),e("li",null,[e("a",Rr,[Tr,o(r)]),Er]),e("li",null,[e("a",jr,[Lr,o(r)]),zr]),e("li",null,[e("a",Fr,[Ir,o(r)]),Or]),e("li",null,[e("a",Hr,[Nr,o(r)]),Ur]),e("li",null,[e("a",Kr,[Wr,o(r)]),Vr]),e("li",null,[e("a",Zr,[Jr,o(r)]),qr,e("a",Xr,[Yr,o(r)])]),e("li",null,[e("a",Qr,[$r,o(r)]),en]),e("li",null,[e("a",tn,[on,o(r)]),rn]),e("li",null,[e("a",nn,[sn,o(r)])]),e("li",null,[e("a",an,[ln,o(r)]),hn]),e("li",null,[o(s,{to:"/EMULATORS.html"},{default:a(()=>[_n]),_:1})])]),dn,e("ul",null,[e("li",null,[e("a",cn,[gn,o(r)])]),e("li",null,[e("a",mn,[pn,o(r)])]),e("li",null,[e("a",un,[bn,o(r)])]),e("li",null,[e("a",fn,[kn,o(r)])]),e("li",null,[e("a",yn,[Bn,o(r)])]),e("li",null,[e("a",Gn,[wn,o(r)]),vn]),e("li",null,[e("a",Cn,[Dn,o(r)])]),e("li",null,[e("a",Sn,[An,o(r)]),Mn,e("a",xn,[Pn,o(r)]),Rn])]),Tn,e("p",null,[En,e("a",jn,[Ln,o(r)]),zn]),Fn,e("ul",null,[e("li",null,[e("a",In,[On,o(r)]),Hn,e("a",Nn,[Un,o(r)]),Kn]),e("li",null,[e("a",Wn,[Vn,o(r)]),Zn,e("a",Jn,[qn,o(r)]),Xn]),e("li",null,[e("a",Yn,[Qn,o(r)]),$n,e("a",es,[ts,o(r)]),os])]),rs,e("ul",null,[e("li",null,[e("a",ns,[ss,o(r)]),is,e("ul",null,[e("li",null,[e("a",as,[ls,o(r)])]),e("li",null,[e("a",hs,[_s,o(r)])]),e("li",null,[e("a",ds,[cs,o(r)])])])]),e("li",null,[e("a",gs,[ms,o(r)]),ps])]),us,e("ul",null,[e("li",null,[e("a",bs,[fs,o(r)]),ks]),e("li",null,[e("a",ys,[Bs,o(r)]),Gs]),e("li",null,[e("a",ws,[vs,o(r)]),Cs]),e("li",null,[e("a",Ds,[Ss,o(r)]),As]),e("li",null,[e("a",Ms,[xs,o(r)]),Ps]),e("li",null,[e("a",Rs,[Ts,o(r)]),Es]),e("li",null,[e("a",js,[Ls,o(r)]),zs]),e("li",null,[e("a",Fs,[Is,o(r)]),Os,e("a",Hs,[Ns,o(r)]),Us,e("a",Ks,[Ws,o(r)]),Vs]),e("li",null,[e("a",Zs,[Js,o(r)]),qs])]),Xs,e("ul",null,[e("li",null,[e("a",Ys,[Qs,o(r)]),$s]),e("li",null,[e("a",ei,[ti,o(r)]),oi]),e("li",null,[e("a",ri,[ni,o(r)]),si]),e("li",null,[e("a",ii,[ai,o(r)]),li]),e("li",null,[e("a",hi,[_i,o(r)]),di]),e("li",null,[e("a",ci,[gi,o(r)]),mi]),e("li",null,[e("a",pi,[ui,o(r)]),bi]),e("li",null,[e("a",fi,[ki,o(r)]),yi]),e("li",null,[e("a",Bi,[Gi,o(r)]),wi,e("a",vi,[Ci,o(r)]),Di])]),e("p",null,[o(s,{to:"/EMULATORS.html"},{default:a(()=>[Si]),_:1})]),Ai,Mi,e("ul",null,[e("li",null,[e("a",xi,[Pi,o(r)]),Ri,e("a",Ti,[Ei,o(r)]),ji]),e("li",null,[e("a",Li,[zi,o(r)]),Fi])]),Ii,e("ul",null,[e("li",null,[e("a",Oi,[Hi,o(r)]),Ni]),e("li",null,[e("a",Ui,[Ki,o(r)]),Wi]),e("li",null,[e("a",Vi,[Zi,o(r)]),Ji]),e("li",null,[e("a",qi,[Xi,o(r)]),Yi]),e("li",null,[e("a",Qi,[$i,o(r)]),ea]),e("li",null,[e("a",ta,[oa,o(r)]),ra]),e("li",null,[e("a",na,[sa,o(r)]),ia]),e("li",null,[e("a",aa,[la,o(r)]),ha])]),_a,e("ul",null,[e("li",null,[e("a",da,[ca,o(r)]),ga]),e("li",null,[e("a",ma,[pa,o(r)]),ua]),e("li",null,[e("a",ba,[fa,o(r)]),ka]),e("li",null,[e("a",ya,[Ba,o(r)]),Ga]),e("li",null,[e("a",wa,[va,o(r)]),Ca]),e("li",null,[e("a",Da,[Sa,o(r)]),Aa]),e("li",null,[e("a",Ma,[xa,o(r)]),Pa]),e("li",null,[e("a",Ra,[Ta,o(r)]),Ea]),e("li",null,[e("a",ja,[La,o(r)]),za]),e("li",null,[e("a",Fa,[Ia,o(r)]),Oa]),e("li",null,[e("a",Ha,[Na,o(r)]),Ua]),e("li",null,[e("a",Ka,[Wa,o(r)]),Va]),e("li",null,[e("a",Za,[Ja,o(r)]),qa]),e("li",null,[e("a",Xa,[Ya,o(r)]),Qa])]),$a,e("ul",null,[e("li",null,[e("a",el,[tl,o(r)]),ol]),e("li",null,[e("a",rl,[nl,o(r)]),sl]),e("li",null,[e("a",il,[al,o(r)]),ll]),e("li",null,[e("a",hl,[_l,o(r)]),dl]),e("li",null,[e("a",cl,[gl,o(r)]),ml])]),pl,e("ul",null,[e("li",null,[e("a",ul,[bl,o(r)]),fl]),e("li",null,[e("a",kl,[yl,o(r)]),Bl]),e("li",null,[e("a",Gl,[wl,o(r)]),vl]),e("li",null,[e("a",Cl,[Dl,o(r)]),Sl]),e("li",null,[e("a",Al,[Ml,o(r)]),xl]),e("li",null,[e("a",Pl,[Rl,o(r)]),Tl]),e("li",null,[e("a",El,[jl,o(r)]),Ll]),e("li",null,[e("a",zl,[Fl,o(r)]),Il])]),Ol,e("ul",null,[e("li",null,[e("strong",null,[e("a",Hl,[Nl,o(r)])]),Ul]),e("li",null,[e("a",Kl,[Wl,o(r)]),Vl]),e("li",null,[e("a",Zl,[Jl,o(r)]),ql]),e("li",null,[e("a",Xl,[Yl,o(r)]),Ql]),e("li",null,[e("a",$l,[eh,o(r)]),th,e("ul",null,[e("li",null,[e("a",oh,[rh,o(r)])]),e("li",null,[e("a",nh,[sh,o(r)])])])]),e("li",null,[e("a",ih,[ah,o(r)]),lh]),e("li",null,[e("a",hh,[_h,o(r)])]),e("li",null,[e("a",dh,[ch,o(r)]),gh]),e("li",null,[e("a",mh,[ph,o(r)]),uh]),e("li",null,[e("a",bh,[fh,o(r)]),kh]),e("li",null,[e("a",yh,[Bh,o(r)]),Gh]),e("li",null,[e("a",wh,[vh,o(r)]),Ch])]),Dh,Sh,e("ul",null,[e("li",null,[e("a",Ah,[Mh,o(r)]),xh]),e("li",null,[e("a",Ph,[Rh,o(r)]),Th]),e("li",null,[e("a",Eh,[jh,o(r)]),Lh])]),zh,e("ul",null,[e("li",null,[e("a",Fh,[Ih,o(r)])]),e("li",null,[e("a",Oh,[Hh,o(r)])]),e("li",null,[e("a",Nh,[Uh,o(r)])]),e("li",null,[e("a",Kh,[Wh,o(r)])]),e("li",null,[e("a",Vh,[Zh,o(r)])])]),Jh,e("ul",null,[e("li",null,[e("a",qh,[Xh,o(r)]),Yh]),e("li",null,[e("a",Qh,[$h,o(r)]),e_]),e("li",null,[e("a",t_,[o_,o(r)]),r_]),e("li",null,[e("a",n_,[s_,o(r)]),i_]),e("li",null,[e("a",a_,[l_,o(r)]),h_,e("a",__,[d_,o(r)]),c_]),e("li",null,[e("a",g_,[m_,o(r)]),p_]),e("li",null,[e("a",u_,[b_,o(r)]),f_]),e("li",null,[e("a",k_,[y_,o(r)]),B_]),e("li",null,[e("a",G_,[w_,o(r)]),v_])]),C_,e("ul",null,[e("li",null,[e("a",D_,[S_,o(r)]),A_]),e("li",null,[e("a",M_,[x_,o(r)]),P_]),e("li",null,[e("a",R_,[T_,o(r)]),E_]),e("li",null,[e("a",j_,[L_,o(r)]),z_]),e("li",null,[e("a",F_,[I_,o(r)]),O_]),e("li",null,[e("a",H_,[N_,o(r)])]),e("li",null,[e("a",U_,[K_,o(r)]),W_]),e("li",null,[e("a",V_,[Z_,o(r)]),J_])]),q_,e("ul",null,[e("li",null,[e("a",X_,[Y_,o(r)]),Q_]),e("li",null,[e("a",$_,[ed,o(r)]),td]),e("li",null,[e("a",od,[rd,o(r)]),nd]),e("li",null,[e("a",sd,[id,o(r)])]),e("li",null,[e("a",ad,[ld,o(r)]),hd]),e("li",null,[e("a",_d,[dd,o(r)]),cd]),e("li",null,[e("a",gd,[md,o(r)]),pd]),e("li",null,[e("a",ud,[bd,o(r)]),fd]),e("li",null,[e("a",kd,[yd,o(r)]),Bd]),e("li",null,[e("a",Gd,[wd,o(r)]),vd]),e("li",null,[e("a",Cd,[Dd,o(r)])]),e("li",null,[e("a",Sd,[Ad,o(r)]),Md])]),xd,Pd,e("ul",null,[e("li",null,[e("a",Rd,[Td,o(r)]),Ed])]),jd,e("ul",null,[e("li",null,[e("a",Ld,[zd,o(r)])]),e("li",null,[e("a",Fd,[Id,o(r)])]),e("li",null,[e("a",Od,[Hd,o(r)])]),e("li",null,[e("a",Nd,[Ud,o(r)])]),e("li",null,[e("a",Kd,[Wd,o(r)])]),e("li",null,[e("a",Vd,[Zd,o(r)])]),e("li",null,[e("a",Jd,[qd,o(r)])]),e("li",null,[e("a",Xd,[Yd,o(r)])]),e("li",null,[e("a",Qd,[$d,o(r)]),ec]),e("li",null,[e("a",tc,[oc,o(r)])]),e("li",null,[e("a",rc,[nc,o(r)])]),e("li",null,[e("a",sc,[ic,o(r)]),ac]),e("li",null,[e("a",lc,[hc,o(r)])]),e("li",null,[e("a",_c,[dc,o(r)])]),e("li",null,[e("a",cc,[gc,o(r)])]),e("li",null,[e("a",mc,[pc,o(r)]),uc]),e("li",null,[e("a",bc,[fc,o(r)]),kc]),e("li",null,[e("a",yc,[Bc,o(r)])]),e("li",null,[e("a",Gc,[wc,o(r)]),vc]),e("li",null,[e("a",Cc,[Dc,o(r)])]),e("li",null,[e("a",Sc,[Ac,o(r)]),Mc]),e("li",null,[e("a",xc,[Pc,o(r)])]),e("li",null,[e("a",Rc,[Tc,o(r)])]),e("li",null,[e("a",Ec,[jc,o(r)])]),e("li",null,[e("a",Lc,[zc,o(r)]),Fc]),e("li",null,[e("a",Ic,[Oc,o(r)]),Hc]),e("li",null,[e("a",Nc,[Uc,o(r)])]),e("li",null,[e("a",Kc,[Wc,o(r)])]),e("li",null,[e("a",Vc,[Zc,o(r)]),Jc]),e("li",null,[e("a",qc,[Xc,o(r)])])]),Yc,e("ul",null,[e("li",null,[e("a",Qc,[$c,o(r)])]),e("li",null,[e("a",eg,[tg,o(r)])]),e("li",null,[e("a",og,[rg,o(r)])]),e("li",null,[e("a",ng,[sg,o(r)])]),e("li",null,[e("a",ig,[ag,o(r)])]),e("li",null,[e("a",lg,[hg,o(r)])]),e("li",null,[e("a",_g,[dg,o(r)])]),e("li",null,[e("a",cg,[gg,o(r)]),mg,e("a",pg,[ug,o(r)]),bg]),e("li",null,[e("a",fg,[kg,o(r)])]),e("li",null,[e("a",yg,[Bg,o(r)])]),e("li",null,[e("a",Gg,[wg,o(r)])]),e("li",null,[e("a",vg,[Cg,o(r)])]),e("li",null,[e("a",Dg,[Sg,o(r)])]),e("li",null,[e("a",Ag,[Mg,o(r)])]),e("li",null,[e("a",xg,[Pg,o(r)]),Rg]),e("li",null,[e("a",Tg,[Eg,o(r)]),jg]),e("li",null,[e("a",Lg,[zg,o(r)]),Fg]),e("li",null,[e("a",Ig,[Og,o(r)]),Hg]),e("li",null,[e("a",Ng,[Ug,o(r)]),Kg,e("a",Wg,[Vg,o(r)]),Zg]),e("li",null,[e("a",Jg,[qg,o(r)])]),e("li",null,[e("a",Xg,[Yg,o(r)])]),e("li",null,[e("a",Qg,[$g,o(r)]),em]),e("li",null,[e("a",tm,[om,o(r)]),rm]),e("li",null,[e("a",nm,[sm,o(r)]),im]),e("li",null,[e("a",am,[lm,o(r)]),hm,e("a",_m,[dm,o(r)]),cm]),e("li",null,[e("a",gm,[mm,o(r)]),pm]),e("li",null,[e("a",um,[bm,o(r)]),fm,e("a",km,[ym,o(r)]),Bm]),e("li",null,[e("a",Gm,[wm,o(r)]),vm,e("a",Cm,[Dm,o(r)]),Sm]),e("li",null,[e("a",Am,[Mm,o(r)])]),e("li",null,[e("a",xm,[Pm,o(r)])]),e("li",null,[e("a",Rm,[Tm,o(r)]),Em,e("a",jm,[Lm,o(r)]),zm]),e("li",null,[e("a",Fm,[Im,o(r)]),Om,e("a",Hm,[Nm,o(r)]),Um]),e("li",null,[e("a",Km,[Wm,o(r)]),Vm,e("a",Zm,[Jm,o(r)]),qm]),e("li",null,[e("a",Xm,[Ym,o(r)])]),e("li",null,[e("a",Qm,[$m,o(r)])])]),ep,e("ul",null,[e("li",null,[e("a",tp,[op,o(r)]),rp]),e("li",null,[e("a",np,[sp,o(r)])]),e("li",null,[e("a",ip,[ap,o(r)])])]),lp,e("ul",null,[e("li",null,[e("a",hp,[_p,o(r)])]),e("li",null,[e("a",dp,[cp,o(r)])]),e("li",null,[e("a",gp,[mp,o(r)])]),e("li",null,[e("a",pp,[up,bp,o(r)])]),e("li",null,[e("a",fp,[kp,o(r)])]),e("li",null,[e("a",yp,[Bp,o(r)]),Gp]),e("li",null,[e("a",wp,[vp,o(r)]),Cp]),e("li",null,[e("a",Dp,[Sp,o(r)]),Ap,Mp,xp])]),Pp,e("ul",null,[e("li",null,[e("a",Rp,[Tp,o(r)])]),e("li",null,[e("a",Ep,[jp,o(r)]),Lp]),e("li",null,[e("a",zp,[Fp,o(r)]),Ip]),e("li",null,[e("a",Op,[Hp,o(r)]),Np]),e("li",null,[e("a",Up,[Kp,o(r)])]),e("li",null,[e("a",Wp,[Vp,o(r)]),Zp])]),Jp,e("ul",null,[e("li",null,[e("a",qp,[Xp,o(r)])]),e("li",null,[e("a",Yp,[Qp,o(r)])]),e("li",null,[e("a",$p,[eu,o(r)])]),e("li",null,[e("a",tu,[ou,o(r)])]),e("li",null,[e("a",ru,[nu,o(r)])]),e("li",null,[e("a",su,[iu,o(r)])]),e("li",null,[e("a",au,[lu,o(r)]),hu]),e("li",null,[e("a",_u,[du,o(r)])]),e("li",null,[e("a",cu,[gu,o(r)])]),e("li",null,[e("a",mu,[pu,o(r)]),uu]),e("li",null,[e("a",bu,[fu,o(r)])]),e("li",null,[e("a",ku,[yu,o(r)])])]),Bu,Gu,wu,e("ul",null,[e("li",null,[e("a",vu,[Cu,o(r)]),Du]),e("li",null,[e("a",Su,[Au,o(r)]),Mu]),e("li",null,[e("a",xu,[Pu,o(r)]),Ru]),e("li",null,[e("a",Tu,[Eu,o(r)]),ju]),e("li",null,[e("a",Lu,[zu,o(r)]),Fu])]),Iu,Ou,e("ul",null,[e("li",null,[e("a",Hu,[Nu,o(r)])]),e("li",null,[e("a",Uu,[Ku,o(r)]),Wu]),e("li",null,[e("a",Vu,[Zu,o(r)]),Ju])]),qu,e("ul",null,[e("li",null,[e("a",Xu,[Yu,o(r)]),Qu]),e("li",null,[e("a",$u,[eb,o(r)]),tb])]),ob,e("ul",null,[e("li",null,[e("a",rb,[nb,o(r)]),sb,e("ul",null,[e("li",null,[e("a",ib,[ab,o(r)])]),e("li",null,[e("a",lb,[hb,o(r)])])])]),e("li",null,[e("a",_b,[db,o(r)]),cb]),e("li",null,[e("a",gb,[mb,o(r)]),pb]),e("li",null,[e("a",ub,[bb,o(r)]),fb]),e("li",null,[e("a",kb,[yb,o(r)]),Bb]),e("li",null,[e("a",Gb,[wb,o(r)]),vb]),e("li",null,[e("a",Cb,[Db,o(r)]),Sb]),e("li",null,[e("a",Ab,[Mb,o(r)]),xb]),e("li",null,[e("a",Pb,[Rb,o(r)]),Tb]),e("li",null,[e("a",Eb,[jb,o(r)]),Lb]),e("li",null,[e("a",zb,[Fb,o(r)]),Ib]),e("li",null,[e("a",Ob,[Hb,o(r)]),Nb]),e("li",null,[e("a",Ub,[Kb,o(r)]),Wb]),e("li",null,[e("a",Vb,[Zb,o(r)])]),e("li",null,[e("a",Jb,[qb,o(r)])]),e("li",null,[e("a",Xb,[Yb,o(r)])]),e("li",null,[e("a",Qb,[$b,o(r)])]),e("li",null,[e("a",ef,[tf,o(r)])]),e("li",null,[e("a",of,[rf,o(r)]),nf]),e("li",null,[e("a",sf,[af,o(r)]),lf]),e("li",null,[hf,e("a",_f,[df,o(r)]),cf,e("a",gf,[mf,o(r)]),pf]),e("li",null,[e("a",uf,[bf,o(r)]),ff]),e("li",null,[e("a",kf,[yf,o(r)]),Bf]),e("li",null,[e("a",Gf,[wf,o(r)]),vf]),e("li",null,[e("a",Cf,[Df,o(r)]),Sf]),e("li",null,[e("a",Af,[Mf,o(r)]),xf]),e("li",null,[e("a",Pf,[Rf,o(r)]),Tf]),e("li",null,[e("a",Ef,[jf,o(r)])]),e("li",null,[e("a",Lf,[zf,o(r)])]),e("li",null,[e("a",Ff,[If,o(r)]),Of]),e("li",null,[e("a",Hf,[Nf,o(r)]),Uf]),e("li",null,[e("a",Kf,[Wf,o(r)]),Vf]),e("li",null,[e("a",Zf,[Jf,o(r)]),qf]),e("li",null,[e("a",Xf,[Yf,o(r)])])]),Qf,e("ul",null,[e("li",null,[e("a",$f,[ek,o(r)])]),e("li",null,[e("a",tk,[ok,o(r)]),rk]),e("li",null,[e("a",nk,[sk,o(r)]),ik])]),ak,e("ul",null,[e("li",null,[e("a",lk,[hk,o(r)]),_k]),e("li",null,[e("a",dk,[ck,o(r)]),gk]),e("li",null,[e("a",mk,[pk,o(r)]),uk])])],64)}var Gk=d(c,[["render",bk]]);export{Gk as default};
