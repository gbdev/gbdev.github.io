import{_ as s,M as l,p as h,q as d,R as e,t as r,N as t,V as i,a1 as n}from"./framework-204010b2.js";const c={},g=n('<br><div style="line-height:90%;letter-spacing:-0.05em;font-weight:400;font-size:2.7em;">Awesome<span style="font-weight:600;letter-spacing:-0.05em;"> Game Boy Development </span></div><br><div style="letter-spacing:-0.05em;font-weight:500;font-size:18px;"> A curated list of awesome Game Boy (Color) Development resources, tools, docs, related projects and homebrews. Inspired by the <a href="https://github.com/sindresorhus/awesome"> awesome </a> list thing.<br><br><div style="letter-spacing:-0.05em;font-weight:500;font-size:18px;"> This project is open source and community-lead. Come <a href="https://gbdev.io/contribute">contribute! </a></div></div><br><div style="letter-spacing:-0.03em;font-weight:500;font-size:20px;"><a href="https://gbdev.io/chat">Chat with the community!</a></div><br><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2>',8),m={id:"the-game-boy-a-hardware-autopsy",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#the-game-boy-a-hardware-autopsy","aria-hidden":"true"},"#",-1),u={href:"https://www.youtube.com/playlist?list=PLu3xpmdUP-GRDp8tknpXC_Y4RUQtMMqEu",target:"_blank",rel:"noopener noreferrer"},b=e("br",null,null,-1),_=e("div",{class:"videoWrapper"},[e("iframe",{id:"ytplayer",type:"text/html",src:"https://www.youtube.com/embed/videoseries?list=PLu3xpmdUP-GRDp8tknpXC_Y4RUQtMMqEu",frameborder:"0",allowfullscreen:""}),e("br")],-1),f={id:"the-ultimate-game-boy-talk",tabindex:"-1"},k=e("a",{class:"header-anchor",href:"#the-ultimate-game-boy-talk","aria-hidden":"true"},"#",-1),y={href:"https://media.ccc.de/v/33c3-8029-the_ultimate_game_boy_talk",target:"_blank",rel:"noopener noreferrer"},B=e("br",null,null,-1),G=e("div",{class:"videoWrapper"},[e("iframe",{id:"ytplayer",type:"text/html",src:"https://www.youtube.com/embed/HyzD8pNlpwI",frameborder:"0",allowfullscreen:""}),e("br")],-1),w=e("h3",{id:"disambiguation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#disambiguation","aria-hidden":"true"},"#"),r(" Disambiguation")],-1),v=e("h4",{id:"game-boy-advance",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#game-boy-advance","aria-hidden":"true"},"#"),r(" Game Boy Advance")],-1),C={href:"https://github.com/gbdev/awesome-gbadev",target:"_blank",rel:"noopener noreferrer"},A=n('<h4 id="game-boy-color-and-super-game-boy" tabindex="-1"><a class="header-anchor" href="#game-boy-color-and-super-game-boy" aria-hidden="true">#</a> Game Boy Color and Super Game Boy</h4><p>This list is focused on the original (1989) Game Boy (DMG), the <em>Game Boy Color</em> (GBC) and <em>Super Game Boy</em> (SGB) are very similar systems, with a few important distinctions, such as:</p><ul><li>Different hardware specifications</li><li>Specific hardware and software features</li><li>Specific registers</li><li>Specific bugs, quirks and exploitable behaviours</li></ul><p>If you aim to develop your software for SGB or GBC, or you want to know how it runs on the other systems, you may want to take advantage and adapt to these differences, check the <a href="#game-boy-color">Game Boy Color</a> category and look for specific references to GBC/CGB and SGB.</p>',4),D=e("h2",{id:"documentation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#documentation","aria-hidden":"true"},"#"),r(" Documentation")],-1),S={href:"https://gbdev.github.io/pandocs/",target:"_blank",rel:"noopener noreferrer"},M=e("strong",null,"Pan Docs",-1),x={href:"https://github.com/AntonioND/giibiiadvance/blob/master/docs/TCAGBD.pdf",target:"_blank",rel:"noopener noreferrer"},P={href:"https://gekkio.fi/files/gb-docs/gbctr.pdf",target:"_blank",rel:"noopener noreferrer"},R={href:"http://www.cs.columbia.edu/~sedwards/classes/2019/4840-spring/reports/GameBoy.pdf",target:"_blank",rel:"noopener noreferrer"},T={href:"https://github.com/kitsuneh/SVGameBoy",target:"_blank",rel:"noopener noreferrer"},E=e("h4",{id:"opcodes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#opcodes","aria-hidden":"true"},"#"),r(" Opcodes")],-1),j={href:"https://gbdev.github.io/gb-opcodes/optables/",target:"_blank",rel:"noopener noreferrer"},L={href:"https://rgbds.gbdev.io/docs/gbz80.7",target:"_blank",rel:"noopener noreferrer"},z=e("h3",{id:"game-boy-color",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#game-boy-color","aria-hidden":"true"},"#"),r(" Game Boy Color")],-1),I={href:"https://tcrf.net/Game_Boy_Color_Bootstrap_ROM",target:"_blank",rel:"noopener noreferrer"},F={href:"https://tcrf.net/Notes:Game_Boy_Color_Bootstrap_ROM",target:"_blank",rel:"noopener noreferrer"},O={href:"https://forums.nesdev.com/viewtopic.php?p=114388&sid=c3d4ce08cfd9d9c834958d4f148750c3#p114388",target:"_blank",rel:"noopener noreferrer"},H={href:"https://gist.github.com/drhelius/6063265",target:"_blank",rel:"noopener noreferrer"},N=e("h3",{id:"hardware",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hardware","aria-hidden":"true"},"#"),r(" Hardware")],-1),U={href:"http://gbdev.gg8.se/wiki/articles/DMG_Schematics",target:"_blank",rel:"noopener noreferrer"},K={href:"http://marc.rawer.de/Gameboy/Docs/GBProject.pdf",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/Gekkio/gb-hardware",target:"_blank",rel:"noopener noreferrer"},W={href:"https://github.com/applefreak/esp8266-gameboy-dev-board",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://github.com/applefreak/esp8266-gameboy-printer",target:"_blank",rel:"noopener noreferrer"},q={href:"http://verhoeven272.nl/fruttenboel/Gameboy/index.html",target:"_blank",rel:"noopener noreferrer"},J={href:"https://gbhwdb.gekkio.fi/",target:"_blank",rel:"noopener noreferrer"},X={href:"https://github.com/furrtek/DMG-CPU-Inside",target:"_blank",rel:"noopener noreferrer"},Y=e("h3",{id:"peripherals",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#peripherals","aria-hidden":"true"},"#"),r(" Peripherals")],-1),Q={href:"https://shonumi.github.io/dandocs.html",target:"_blank",rel:"noopener noreferrer"},$={href:"https://shonumi.github.io/articles.html",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://github.com/shonumi/gbe-plus/tree/master/src/docs/technical",target:"_blank",rel:"noopener noreferrer"},re={href:"https://shonumi.github.io/articles/art14.html",target:"_blank",rel:"noopener noreferrer"},te={href:"https://shonumi.github.io/articles/art2.html",target:"_blank",rel:"noopener noreferrer"},oe={href:"https://shonumi.github.io/articles/art13.html",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://shonumi.github.io/articles/art8.html",target:"_blank",rel:"noopener noreferrer"},ae={href:"https://shonumi.github.io/articles/art11.html",target:"_blank",rel:"noopener noreferrer"},le={href:"https://shonumi.github.io/articles/art9.html",target:"_blank",rel:"noopener noreferrer"},ie={href:"https://shonumi.github.io/articles/art7.html",target:"_blank",rel:"noopener noreferrer"},se={href:"https://shonumi.github.io/articles/art6.html",target:"_blank",rel:"noopener noreferrer"},he={href:"https://raw.githubusercontent.com/shonumi/gbe-plus/master/src/docs/technical/DMG_07.txt",target:"_blank",rel:"noopener noreferrer"},de={href:"https://github.com/AntonioND/gbcam-rev-engineer",target:"_blank",rel:"noopener noreferrer"},ce={href:"http://www.pinchofintelligence.com/photorealistic-neural-network-gameboy/",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://shonumi.github.io/articles/art2.html",target:"_blank",rel:"noopener noreferrer"},me={href:"https://www.youtube.com/watch?v=43FfJvd-YP4",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://github.com/mofosyne/arduino-gameboy-printer-emulator",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://bulbapedia.bulbagarden.net/wiki/Mobile_Game_Boy_Adapter",target:"_blank",rel:"noopener noreferrer"},be={href:"http://nectaris.tg-16.com/GB-KISS-LINK-FAQ-hudson-gameboy-nectaris.html",target:"_blank",rel:"noopener noreferrer"},_e=e("h3",{id:"cartridges",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#cartridges","aria-hidden":"true"},"#"),r(" Cartridges")],-1),fe={href:"https://github.com/AntonioND/giibiiadvance/tree/master/docs",target:"_blank",rel:"noopener noreferrer"},ke={href:"http://gekkio.fi/blog/2015-02-14-mooneye-gb-gameboy-cartridge-types.html",target:"_blank",rel:"noopener noreferrer"},ye={href:"http://gekkio.fi/blog/2015-05-18-mooneye-gb-cartridge-analysis-dmg-bean-02.html",target:"_blank",rel:"noopener noreferrer"},Be={href:"http://gekkio.fi/blog/2015-05-17-mooneye-gb-cartridge-analysis-fortress-of-fear.html",target:"_blank",rel:"noopener noreferrer"},Ge={href:"http://gekkio.fi/blog/2015-02-28-mooneye-gb-cartridge-analysis-tetris.html",target:"_blank",rel:"noopener noreferrer"},we={href:"https://wiki.tauwasser.eu/view/MBC1",target:"_blank",rel:"noopener noreferrer"},ve={href:"https://wiki.tauwasser.eu/view/MBC2",target:"_blank",rel:"noopener noreferrer"},Ce={href:"https://wiki.tauwasser.eu/view/MMM01",target:"_blank",rel:"noopener noreferrer"},Ae={href:"http://www.devrs.com/gb/files/gb.html",target:"_blank",rel:"noopener noreferrer"},De={href:"https://imgur.com/a/D5bpC",target:"_blank",rel:"noopener noreferrer"},Se={href:"http://www.devrs.com/gb/files/mbc1.gif",target:"_blank",rel:"noopener noreferrer"},Me={href:"http://fms.komkon.org/GameBoy/Tech/Carts.html",target:"_blank",rel:"noopener noreferrer"},xe=e("li",null,[e("a",{href:"CartridgeList.csv"},"GB Rom List"),r(" - Navigable table of every game released with details on their cartridges.")],-1),Pe={href:"http://gekkio.fi/blog/2016-03-19-game-boy-cartridge-pcb-photos.html",target:"_blank",rel:"noopener noreferrer"},Re=e("h4",{id:"custom-cartridges",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#custom-cartridges","aria-hidden":"true"},"#"),r(" Custom cartridges")],-1),Te={href:"https://dhole.github.io/post/gameboy_cartridge_emu_1/",target:"_blank",rel:"noopener noreferrer"},Ee={href:"http://www.happydaze.se/wolf/",target:"_blank",rel:"noopener noreferrer"},je={href:"https://github.com/dwaq/Homebrew-Gameboy-Cartridge",target:"_blank",rel:"noopener noreferrer"},Le={href:"https://github.com/Xyl2k/Gameboy-Color-Cartridge",target:"_blank",rel:"noopener noreferrer"},ze={href:"https://github.com/zephray/NekoCart-GB",target:"_blank",rel:"noopener noreferrer"},Ie={href:"https://hackaday.io/project/41160-nekocart-cpld-gameboy-cartridge",target:"_blank",rel:"noopener noreferrer"},Fe={href:"http://reinerziegler.de.mirrors.gg8.se/",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://github.com/insidegadgets/Gameboy-MBC5-MBC1-Hybrid",target:"_blank",rel:"noopener noreferrer"},He=e("h4",{id:"misc",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#misc","aria-hidden":"true"},"#"),r(" Misc")],-1),Ne={href:"http://pepijndevos.nl/sha2017/workshop.pdf",target:"_blank",rel:"noopener noreferrer"},Ue={href:"https://github.com/bwhitman/pushpin/blob/master/src/gbsound.txt",target:"_blank",rel:"noopener noreferrer"},Ke={href:"http://www.devrs.com/gb/files/faqs.html",target:"_blank",rel:"noopener noreferrer"},Ve={href:"http://www.neviksti.com/DMG/DMG_ROM.asm",target:"_blank",rel:"noopener noreferrer"},We={href:"http://www.z80.info/z80gboy.txt",target:"_blank",rel:"noopener noreferrer"},Ze={href:"http://www.huderlem.com/demos/gameboy2bpp.html",target:"_blank",rel:"noopener noreferrer"},qe=e("h2",{id:"emulator-development",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emulator-development","aria-hidden":"true"},"#"),r(" Emulator Development")],-1),Je={href:"https://www.youtube.com/watch?v=GBYwjch6oEE",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://gekkio.fi/blog/2018-02-05-errata-for-reverse-engineering-fine-details-of-game-boy-hardware.html",target:"_blank",rel:"noopener noreferrer"},Ye={href:"https://github.com/Baekalfen/PyBoy/blob/master/PyBoy.pdf",target:"_blank",rel:"noopener noreferrer"},Qe={href:"https://rylev.github.io/DMG-01/public/book/",target:"_blank",rel:"noopener noreferrer"},$e={href:"https://media.ccc.de/v/rustfest-rome-3-gameboy-emulator",target:"_blank",rel:"noopener noreferrer"},er={href:"http://imrannazar.com/gameboy-Emulation-in-JavaScript",target:"_blank",rel:"noopener noreferrer"},rr={href:"https://cturt.github.io/cinoop.html",target:"_blank",rel:"noopener noreferrer"},tr={href:"https://jeremybanks.github.io/0dmg/2018/05/23/getting-started.html",target:"_blank",rel:"noopener noreferrer"},or={href:"https://realboyemulator.wordpress.com/posts/",target:"_blank",rel:"noopener noreferrer"},nr={href:"http://www.codeslinger.co.uk/pages/projects/gameboy.html",target:"_blank",rel:"noopener noreferrer"},ar={href:"http://blog.rekawek.eu/2017/02/09/coffee-gb/",target:"_blank",rel:"noopener noreferrer"},lr={href:"https://binji.github.io/2017/12/31/binjgb-rewind.html",target:"_blank",rel:"noopener noreferrer"},ir={href:"https://binji.github.io/2017/02/26/binjgb-on-the-web-part-1.html",target:"_blank",rel:"noopener noreferrer"},sr={href:"https://binji.github.io/2017/02/27/binjgb-on-the-web-part-2.html",target:"_blank",rel:"noopener noreferrer"},hr={href:"https://binji.github.io/2017/05/03/debugging-hangs.html",target:"_blank",rel:"noopener noreferrer"},dr={href:"https://gb-archive.github.io/salvage/decoding_gbz80_opcodes/Decoding%20Gamboy%20Z80%20Opcodes.html",target:"_blank",rel:"noopener noreferrer"},cr={href:"https://djhworld.github.io/post/2018/09/21/i-ported-my-gameboy-color-emulator-to-webassembly/",target:"_blank",rel:"noopener noreferrer"},gr={href:"https://mitxela.com/projects/swotgb/about",target:"_blank",rel:"noopener noreferrer"},mr=e("h3",{id:"testing",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#testing","aria-hidden":"true"},"#"),r(" Testing")],-1),pr={href:"http://gbdev.gg8.se/files/roms/blargg-gb-tests/",target:"_blank",rel:"noopener noreferrer"},ur={href:"https://gekkio.fi/files/mooneye-gb/latest/",target:"_blank",rel:"noopener noreferrer"},br={href:"https://github.com/LIJI32/SameSuite",target:"_blank",rel:"noopener noreferrer"},_r={href:"https://github.com/mattcurrie/mealybug-tearoom-tests",target:"_blank",rel:"noopener noreferrer"},fr={href:"http://tasvideos.org/EmulatorResources/GBAccuracyTests.html",target:"_blank",rel:"noopener noreferrer"},kr={href:"https://github.com/pinobatch/240p-test-mini/tree/master/gameboy",target:"_blank",rel:"noopener noreferrer"},yr={href:"https://github.com/aaaaaa123456789/rtc3test",target:"_blank",rel:"noopener noreferrer"},Br={href:"https://github.com/mattcurrie/dmg-acid2",target:"_blank",rel:"noopener noreferrer"},Gr={href:"https://github.com/mattcurrie/cgb-acid2",target:"_blank",rel:"noopener noreferrer"},wr=e("h2",{id:"software-development",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#software-development","aria-hidden":"true"},"#"),r(" Software Development")],-1),vr={href:"https://gbdev.io/guides/tools.html",target:"_blank",rel:"noopener noreferrer"},Cr=e("h3",{id:"assemblers",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#assemblers","aria-hidden":"true"},"#"),r(" Assemblers")],-1),Ar={href:"https://github.com/gbdev/rgbds",target:"_blank",rel:"noopener noreferrer"},Dr={href:"https://rgbds.gbdev.io/docs/",target:"_blank",rel:"noopener noreferrer"},Sr={href:"https://github.com/csoren/asmotor",target:"_blank",rel:"noopener noreferrer"},Mr={href:"https://github.com/asmotor/asmotor/tree/develop#further-reading",target:"_blank",rel:"noopener noreferrer"},xr={href:"https://github.com/vhelin/wla-dx",target:"_blank",rel:"noopener noreferrer"},Pr={href:"http://www.villehelin.com/wla.txt",target:"_blank",rel:"noopener noreferrer"},Rr=e("h3",{id:"compilers",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#compilers","aria-hidden":"true"},"#"),r(" Compilers")],-1),Tr={href:"https://github.com/gbdk-2020/gbdk-2020/",target:"_blank",rel:"noopener noreferrer"},Er={href:"https://gbdk-2020.github.io/gbdk-2020/docs/api/docs_getting_started.html",target:"_blank",rel:"noopener noreferrer"},jr={href:"https://github.com/mrombout/gbdk_playground",target:"_blank",rel:"noopener noreferrer"},Lr={href:"https://gbdk-2020.github.io/gbdk-2020/docs/api/docs_links_and_tools.html",target:"_blank",rel:"noopener noreferrer"},zr={href:"https://lemonspawn.com/turbo-rascal-syntax-error-expected-but-begin/",target:"_blank",rel:"noopener noreferrer"},Ir=e("h4",{id:"experimental-proof-of-concepts",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#experimental-proof-of-concepts","aria-hidden":"true"},"#"),r(" Experimental/Proof of Concepts")],-1),Fr={href:"https://daid.github.io/rgbds-live/",target:"_blank",rel:"noopener noreferrer"},Or={href:"https://github.com/wiz-lang/wiz",target:"_blank",rel:"noopener noreferrer"},Hr={href:"https://github.com/ams-hackers/gbforth",target:"_blank",rel:"noopener noreferrer"},Nr={href:"https://gitlab.com/BonsaiDen/gbasm-rs",target:"_blank",rel:"noopener noreferrer"},Ur={href:"https://github.com/BonsaiDen/gbasm",target:"_blank",rel:"noopener noreferrer"},Kr={href:"http://www.tni.nl/products/tniasm.html",target:"_blank",rel:"noopener noreferrer"},Vr={href:"https://github.com/ulrikdamm/Assembler",target:"_blank",rel:"noopener noreferrer"},Wr={href:"https://github.com/Bevinsky/llvm-gbz80",target:"_blank",rel:"noopener noreferrer"},Zr={href:"https://github.com/Bevinsky/clang-gbz80",target:"_blank",rel:"noopener noreferrer"},qr={href:"https://github.com/euclio/llvm-gbz80",target:"_blank",rel:"noopener noreferrer"},Jr={href:"https://github.com/pokemium/gbdk-go",target:"_blank",rel:"noopener noreferrer"},Xr=e("h3",{id:"emulators",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#emulators","aria-hidden":"true"},"#"),r(" Emulators")],-1),Yr={href:"https://bgb.bircd.org/",target:"_blank",rel:"noopener noreferrer"},Qr={href:"https://github.com/LIJI32/SameBoy",target:"_blank",rel:"noopener noreferrer"},$r={href:"https://github.com/Gekkio/mooneye-gb",target:"_blank",rel:"noopener noreferrer"},et={href:"https://github.com/mgba-emu/mgba",target:"_blank",rel:"noopener noreferrer"},rt={href:"https://github.com/binji/binjgb",target:"_blank",rel:"noopener noreferrer"},tt={href:"https://github.com/sinamas/gambatte",target:"_blank",rel:"noopener noreferrer"},ot={href:"https://github.com/aappleby/MetroBoy",target:"_blank",rel:"noopener noreferrer"},nt={href:"https://github.com/shonumi/gbe-plus",target:"_blank",rel:"noopener noreferrer"},at={href:"https://emulicious.net/",target:"_blank",rel:"noopener noreferrer"},lt={href:"https://marketplace.visualstudio.com/items?itemName=emulicious.emulicious-debugger",target:"_blank",rel:"noopener noreferrer"},it=e("h3",{id:"tools",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tools","aria-hidden":"true"},"#"),r(" Tools")],-1),st=e("h4",{id:"engines",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#engines","aria-hidden":"true"},"#"),r(" Engines")],-1),ht={href:"https://github.com/Zal0/ZGB",target:"_blank",rel:"noopener noreferrer"},dt={href:"http://zalods.blogspot.com/2017/01/zgb-little-engine-for-game-boy.html",target:"_blank",rel:"noopener noreferrer"},ct={href:"https://bitbucket.org/HellSuffering/retr0-gb/",target:"_blank",rel:"noopener noreferrer"},gt=e("h4",{id:"development-tools",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#development-tools","aria-hidden":"true"},"#"),r(" Development tools")],-1),mt={href:"http://www.tensi.eu/thomas/programming/gameboy/gbextended.html",target:"_blank",rel:"noopener noreferrer"},pt={href:"https://github.com/ProGM/gbdk-lib-extension",target:"_blank",rel:"noopener noreferrer"},ut={href:"http://www.dotmatrixgame.com/",target:"_blank",rel:"noopener noreferrer"},bt={href:"https://github.com/mattcurrie/mgbdis",target:"_blank",rel:"noopener noreferrer"},_t={href:"http://catskull.net/GB-Logo-Generator/",target:"_blank",rel:"noopener noreferrer"},ft={href:"https://github.com/bbbbbr/romusage",target:"_blank",rel:"noopener noreferrer"},kt={href:"https://github.com/devdri/awake",target:"_blank",rel:"noopener noreferrer"},yt={href:"https://github.com/raphaklaus/gameboy-text-tools",target:"_blank",rel:"noopener noreferrer"},Bt={href:"https://github.com/eievui5/evscript",target:"_blank",rel:"noopener noreferrer"},Gt={href:"https://github.com/eievui5/evunit",target:"_blank",rel:"noopener noreferrer"},wt=e("h4",{id:"graphics-utilities",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#graphics-utilities","aria-hidden":"true"},"#"),r(" Graphics utilities")],-1),vt={href:"https://github.com/chrisantonellis/gbtdg",target:"_blank",rel:"noopener noreferrer"},Ct={href:"http://www.devrs.com/gb/hmgd/intro.html",target:"_blank",rel:"noopener noreferrer"},At={href:"https://github.com/bashaus/gbtiles",target:"_blank",rel:"noopener noreferrer"},Dt={href:"https://github.com/gitendo/bmp2cgb",target:"_blank",rel:"noopener noreferrer"},St={href:"https://github.com/LuckyLights/png2gb",target:"_blank",rel:"noopener noreferrer"},Mt={href:"https://github.com/exezin/gb-convert",target:"_blank",rel:"noopener noreferrer"},xt={href:"http://make.vg/brewtool/",target:"_blank",rel:"noopener noreferrer"},Pt={href:"https://github.com/paul-arutyunov/vtGBte",target:"_blank",rel:"noopener noreferrer"},Rt={href:"https://github.com/TwitchPlaysPokemon/tpp1",target:"_blank",rel:"noopener noreferrer"},Tt={href:"https://github.com/delwink/libstdgb",target:"_blank",rel:"noopener noreferrer"},Et={href:"https://github.com/bbbbbr/gimp-tilemap-gb",target:"_blank",rel:"noopener noreferrer"},jt={href:"https://github.com/bbbbbr/gimp-tilemap-helper",target:"_blank",rel:"noopener noreferrer"},Lt={href:"https://github.com/Rangi42/tilemap-studio",target:"_blank",rel:"noopener noreferrer"},zt={href:"https://github.com/Optiroc/SuperFamiconv",target:"_blank",rel:"noopener noreferrer"},It=e("h4",{id:"hardware-and-rom-utilities",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hardware-and-rom-utilities","aria-hidden":"true"},"#"),r(" Hardware and ROM utilities")],-1),Ft={href:"https://github.com/Palmr/cart-dumper",target:"_blank",rel:"noopener noreferrer"},Ot={href:"https://github.com/jkbenaim/gbcamextract",target:"_blank",rel:"noopener noreferrer"},Ht={href:"https://github.com/svendahlstrand/game-boy-lcd-sniffing",target:"_blank",rel:"noopener noreferrer"},Nt={href:"https://github.com/sanqui/swapdump",target:"_blank",rel:"noopener noreferrer"},Ut={href:"https://github.com/JustinLloyd/Gameboy-LinkUp",target:"_blank",rel:"noopener noreferrer"},Kt=e("h4",{id:"music-drivers-and-trackers",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#music-drivers-and-trackers","aria-hidden":"true"},"#"),r(" Music drivers and trackers")],-1),Vt={href:"https://github.com/DevEd2/DevSound",target:"_blank",rel:"noopener noreferrer"},Wt={href:"http://gbdev.gg8.se/files/musictools/Aleksi%20Eeben/Carillon%20Editor.zip",target:"_blank",rel:"noopener noreferrer"},Zt={href:"https://github.com/AntonioND/gbt-player",target:"_blank",rel:"noopener noreferrer"},qt={href:"https://github.com/SimonLarsen/mmlgb",target:"_blank",rel:"noopener noreferrer"},Jt={href:"https://github.com/bazzinotti/XPMCK",target:"_blank",rel:"noopener noreferrer"},Xt={href:"https://github.com/gb-archive/GBSoundSystem",target:"_blank",rel:"noopener noreferrer"},Yt={href:"https://github.com/SuperDisk/hUGETracker",target:"_blank",rel:"noopener noreferrer"},Qt={href:"https://github.com/datguywitha3ds/CBT-FX",target:"_blank",rel:"noopener noreferrer"},$t=n('<h2 id="programming" tabindex="-1"><a class="header-anchor" href="#programming" aria-hidden="true">#</a> Programming</h2><p>Guides, tutorials and tools to develop software for Game Boy using the development toolchains described in the <a href="#software-development">Software Development</a> chapter.</p><h3 id="asm" tabindex="-1"><a class="header-anchor" href="#asm" aria-hidden="true">#</a> ASM</h3>',3),eo={href:"https://eldred.fr/gb-asm-tutorial",target:"_blank",rel:"noopener noreferrer"},ro={href:"http://gameboy.mongenel.com/asmschool.html",target:"_blank",rel:"noopener noreferrer"},to={href:"https://github.com/tobiasvl/hardware.inc",target:"_blank",rel:"noopener noreferrer"},oo={href:"https://gb-archive.github.io/salvage/tutorial_de_ensamblador/tutorial_de_ensamblador_la_decadence.html",target:"_blank",rel:"noopener noreferrer"},no={href:"https://github.com/assemblydigest/gameboy",target:"_blank",rel:"noopener noreferrer"},ao={href:"http://assemblydigest.tumblr.com/post/77203696711/tutorial-making-an-empty-game-boy-rom-in-wiz",target:"_blank",rel:"noopener noreferrer"},lo={href:"http://assemblydigest.tumblr.com/post/77404621743/tutorial-making-art-for-the-game-boy",target:"_blank",rel:"noopener noreferrer"},io={href:"http://web.archive.org/web/20150511145100/http://www.bennvenn.com/Beginners_Guide_To_Reverse_Engineering.htm",target:"_blank",rel:"noopener noreferrer"},so={href:"http://voidptr.io/blog/2017/01/21/GameBoy.html",target:"_blank",rel:"noopener noreferrer"},ho={href:"https://imanoleasgames.blogspot.no/2016/12/games-aside-1-super-game-boy.html",target:"_blank",rel:"noopener noreferrer"},co={href:"https://peterwynroberts.wordpress.com/2014/05/11/gameboy-programming-tutorial-hello-world/",target:"_blank",rel:"noopener noreferrer"},go={href:"https://github.com/lancekindle/DMGreport",target:"_blank",rel:"noopener noreferrer"},mo={href:"https://gbdev.gg8.se/wiki/articles/OAM_DMA_tutorial",target:"_blank",rel:"noopener noreferrer"},po={href:"https://github.com/ahrnbom/gbapfomgd",target:"_blank",rel:"noopener noreferrer"},uo=e("h4",{id:"sources",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#sources","aria-hidden":"true"},"#"),r(" Sources")],-1),bo=e("p",null,"Fragments of code, effects, proof of concepts and generally non complete games.",-1),_o={href:"http://www.devrs.com/gb/asmcode.php",target:"_blank",rel:"noopener noreferrer"},fo={href:"https://github.com/EmmaEwert/gameboy",target:"_blank",rel:"noopener noreferrer"},ko={href:"https://github.com/gb-archive/DeadCScroll",target:"_blank",rel:"noopener noreferrer"},yo=e("h4",{id:"timings",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#timings","aria-hidden":"true"},"#"),r(" Timings")],-1),Bo={href:"http://blog.kevtris.org/blogfiles/Nitty%20Gritty%20Gameboy%20VRAM%20Timing.txt",target:"_blank",rel:"noopener noreferrer"},Go={href:"https://www.reddit.com/r/EmuDev/comments/59pawp/gb_mode3_sprite_timing/",target:"_blank",rel:"noopener noreferrer"},wo={href:"http://gameboy.mongenel.com/dmg/gbc_dma_transfers.txt",target:"_blank",rel:"noopener noreferrer"},vo={href:"http://gameboy.mongenel.com/dmg/istat98.txt",target:"_blank",rel:"noopener noreferrer"},Co={href:"https://github.com/jdeblese/gbcpu/wiki/Video-Timing",target:"_blank",rel:"noopener noreferrer"},Ao=e("h4",{id:"boilerplates-and-libraries",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#boilerplates-and-libraries","aria-hidden":"true"},"#"),r(" Boilerplates and libraries")],-1),Do={href:"https://github.com/nezticle/rgbds-template",target:"_blank",rel:"noopener noreferrer"},So={href:"http://www.devrs.com/gb/files/galp.zip",target:"_blank",rel:"noopener noreferrer"},Mo={href:"https://github.com/yenatch/bootstrap.gb",target:"_blank",rel:"noopener noreferrer"},xo={href:"https://github.com/junebug12851/GameboyBoilerplateProj",target:"_blank",rel:"noopener noreferrer"},Po={href:"https://github.com/ahrnbom/gingerbread",target:"_blank",rel:"noopener noreferrer"},Ro={href:"https://github.com/ahrnbom/gbapfomgd",target:"_blank",rel:"noopener noreferrer"},To={href:"https://github.com/ISSOtm/gb-vwf",target:"_blank",rel:"noopener noreferrer"},Eo={href:"https://github.com/ISSOtm/gb-boilerplate",target:"_blank",rel:"noopener noreferrer"},jo={href:"https://github.com/ISSOtm/gb-starter-kit",target:"_blank",rel:"noopener noreferrer"},Lo={href:"https://github.com/gb-archive/gb-template",target:"_blank",rel:"noopener noreferrer"},zo=e("h4",{id:"syntax-highlighting-packages",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#syntax-highlighting-packages","aria-hidden":"true"},"#"),r(" Syntax highlighting packages")],-1),Io={href:"https://atom.io/packages/language-rgbasm",target:"_blank",rel:"noopener noreferrer"},Fo={href:"https://github.com/ISSOtm/gbz80-highlight",target:"_blank",rel:"noopener noreferrer"},Oo={href:"http://www.vim.org/scripts/script.php?script_id=819",target:"_blank",rel:"noopener noreferrer"},Ho={href:"https://github.com/Leandros/dotfiles/blob/master/.vim/syntax/rgbds.vim",target:"_blank",rel:"noopener noreferrer"},No={href:"https://packagecontrol.io/packages/RGBDS",target:"_blank",rel:"noopener noreferrer"},Uo={href:"https://github.com/Imanolea/z80asm-vscode",target:"_blank",rel:"noopener noreferrer"},Ko={href:"https://github.com/DonaldHays/rgbds-vscode",target:"_blank",rel:"noopener noreferrer"},Vo={href:"https://github.com/japanoise/rgbds-mode",target:"_blank",rel:"noopener noreferrer"},Wo=e("h3",{id:"c",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#c","aria-hidden":"true"},"#"),r(" C")],-1),Zo={href:"https://github.com/gb-archive/salvage/blob/master/misc/8bit_wonderland.pdf",target:"_blank",rel:"noopener noreferrer"},qo={href:"https://github.com/gbdk-salvage/grooves-game-boy-programming",target:"_blank",rel:"noopener noreferrer"},Jo={href:"http://pastebin.com/F3tHLj68",target:"_blank",rel:"noopener noreferrer"},Xo={href:"http://pastebin.com/gzT47MPJ",target:"_blank",rel:"noopener noreferrer"},Yo={href:"https://refreshgames.co.uk/2016/04/18/gameboy-tutorial-rom/",target:"_blank",rel:"noopener noreferrer"},Qo={href:"http://gbdev.gg8.se/wiki/articles/GBDK_Sprite_Tutorial",target:"_blank",rel:"noopener noreferrer"},$o={href:"http://gbdev.gg8.se/wiki/articles/GBDK_Color_Tutorial",target:"_blank",rel:"noopener noreferrer"},en={href:"http://gbdev.gg8.se/wiki/articles/GBDK_Joypad_Tutorial",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://web.archive.org/web/20210427064949/www.personal.triticom.com/~erm/GameBoy/",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://videlais.com/2016/07/03/programming-game-boy-games-using-gbdk-part-1-configuring-programming-and-compiling/",target:"_blank",rel:"noopener noreferrer"},on={href:"https://github.com/mrombout/gbdk_playground",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://www.youtube.com/playlist?list=PLeEj4c2zF7PaFv5MPYhNAkBGrkx4iPGJo",target:"_blank",rel:"noopener noreferrer"},an=e("h2",{id:"homebrews",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#homebrews","aria-hidden":"true"},"#"),r(" Homebrews")],-1),ln=e("p",null,"Complete and open source games.",-1),sn={href:"https://hh.gbdev.io",target:"_blank",rel:"noopener noreferrer"},hn=e("h3",{id:"asm-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#asm-1","aria-hidden":"true"},"#"),r(" ASM")],-1),dn={href:"https://github.com/BonsaiDen/Tuff.gb",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://github.com/Sanqui/2048-gb",target:"_blank",rel:"noopener noreferrer"},gn={href:"https://bitbucket.org/Sanqui/snake/src/?at=master",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://github.com/huderlem/lazerpong",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://github.com/AntonioND/geometrix",target:"_blank",rel:"noopener noreferrer"},un={href:"https://github.com/AntonioND/ucity",target:"_blank",rel:"noopener noreferrer"},bn={href:"https://github.com/mholtkamp/carazu",target:"_blank",rel:"noopener noreferrer"},_n={href:"https://github.com/DonaldHays/snake-gb",target:"_blank",rel:"noopener noreferrer"},fn={href:"https://github.com/furrtek/GB303",target:"_blank",rel:"noopener noreferrer"},kn={href:"https://github.com/JustSid/Sushi",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://github.com/bitnenfer/flappy-boy-asm",target:"_blank",rel:"noopener noreferrer"},Bn={href:"https://github.com/dubvulture/gbdev",target:"_blank",rel:"noopener noreferrer"},Gn={href:"https://github.com/tbsp/Adjustris",target:"_blank",rel:"noopener noreferrer"},wn={href:"https://github.com/exezin/exeman/",target:"_blank",rel:"noopener noreferrer"},vn={href:"https://github.com/ISSOtm/Aevilia-GB",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://github.com/Kartones/gameboy",target:"_blank",rel:"noopener noreferrer"},An={href:"https://github.com/dannye/pokered-gbc",target:"_blank",rel:"noopener noreferrer"},Dn={href:"https://github.com/tslanina/Retro-GameBoyColor-ToyToy",target:"_blank",rel:"noopener noreferrer"},Sn={href:"https://github.com/tslanina/Retro-GameBoyColor-StefaN",target:"_blank",rel:"noopener noreferrer"},Mn={href:"https://github.com/tslanina/Retro-GameBoyColor-Galaxia",target:"_blank",rel:"noopener noreferrer"},xn={href:"https://github.com/sanqui/desgb",target:"_blank",rel:"noopener noreferrer"},Pn={href:"https://github.com/l0k1/superhappyfunbubbletime",target:"_blank",rel:"noopener noreferrer"},Rn={href:"https://github.com/lancekindle/minesweepGB",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://github.com/pinobatch/libbet",target:"_blank",rel:"noopener noreferrer"},En={href:"https://github.com/dannye/waveform-gb",target:"_blank",rel:"noopener noreferrer"},jn={href:"https://gitlab.com/BonsaiDen/vectroid.gb",target:"_blank",rel:"noopener noreferrer"},Ln={href:"https://github.com/gb-archive/plantboy",target:"_blank",rel:"noopener noreferrer"},zn={href:"https://makrill.itch.io/death-planet",target:"_blank",rel:"noopener noreferrer"},In={href:"https://makrill.itch.io/quartet",target:"_blank",rel:"noopener noreferrer"},Fn={href:"https://snorpung.itch.io/dangan-gb",target:"_blank",rel:"noopener noreferrer"},On=e("h3",{id:"c-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#c-1","aria-hidden":"true"},"#"),r(" C")],-1),Hn={href:"https://github.com/bitnenfer/FlappyBoy",target:"_blank",rel:"noopener noreferrer"},Nn={href:"https://github.com/pashutk/flappybird-gameboy",target:"_blank",rel:"noopener noreferrer"},Un={href:"https://github.com/gb-archive/fbgb",target:"_blank",rel:"noopener noreferrer"},Kn={href:"https://web.archive.org/web/20171002042716/http://ludumdare.com/compo/ludum-dare-34/?action=preview&uid=6823",target:"_blank",rel:"noopener noreferrer"},Vn={href:"https://github.com/cppchriscpp/SquishyTheTurtle",target:"_blank",rel:"noopener noreferrer"},Wn={href:"https://github.com/avivace/quadratino",target:"_blank",rel:"noopener noreferrer"},Zn={href:"https://github.com/elfgames/doctorhow",target:"_blank",rel:"noopener noreferrer"},qn={href:"https://github.com/Zal0/gbjam2016",target:"_blank",rel:"noopener noreferrer"},Jn={href:"https://github.com/Zal0/ZGB/",target:"_blank",rel:"noopener noreferrer"},Xn={href:"https://github.com/brovador/GBsnake",target:"_blank",rel:"noopener noreferrer"},Yn={href:"https://github.com/andreasjhkarlsson/gb-mines",target:"_blank",rel:"noopener noreferrer"},Qn={href:"http://www.atari2600land.com/gameboy/oranges.html",target:"_blank",rel:"noopener noreferrer"},$n={href:"https://github.com/Imanolea/bitbitjam3_red_hot_princess_carnage",target:"_blank",rel:"noopener noreferrer"},ea={href:"http://www.tensi.eu/thomas/programming/gameboy/loderunner.html",target:"_blank",rel:"noopener noreferrer"},ra={href:"https://refreshgames.co.uk/2017/04/24/ludum-dare-38-entry-hives/",target:"_blank",rel:"noopener noreferrer"},ta={href:"https://github.com/DonaldHays/bubblefactory",target:"_blank",rel:"noopener noreferrer"},oa={href:"https://github.com/rubfi/gbc-atari-boxing",target:"_blank",rel:"noopener noreferrer"},na={href:"https://github.com/haroldo-ok/really-old-stuff/tree/master/gameboy",target:"_blank",rel:"noopener noreferrer"},aa={href:"https://github.com/SimonLarsen/tobutobugirl-dx",target:"_blank",rel:"noopener noreferrer"},la={href:"http://sebastianmihai.com/gameboy-burly-bear.html",target:"_blank",rel:"noopener noreferrer"},ia={href:"http://sebastianmihai.com/gameboy-color-burly-bear.html",target:"_blank",rel:"noopener noreferrer"},sa={href:"https://github.com/MasterIV/PostBot",target:"_blank",rel:"noopener noreferrer"},ha={href:"https://github.com/kanfor/gunsridersgameboy",target:"_blank",rel:"noopener noreferrer"},da={href:"https://github.com/gingemonster/DinosOfflineAdventure",target:"_blank",rel:"noopener noreferrer"},ca={href:"https://github.com/rnegron/dino-gb",target:"_blank",rel:"noopener noreferrer"},ga={href:"https://github.com/flozz/evoland.gb",target:"_blank",rel:"noopener noreferrer"},ma={href:"https://github.com/bbbbbr/Petris",target:"_blank",rel:"noopener noreferrer"},pa={href:"https://bbbbbr.itch.io/petris",target:"_blank",rel:"noopener noreferrer"},ua={href:"https://github.com/gb-archive/infinity-gbc",target:"_blank",rel:"noopener noreferrer"},ba={href:"https://gbdev.gg8.se/forums/viewtopic.php?id=743",target:"_blank",rel:"noopener noreferrer"},_a={href:"https://user0x7f.itch.io/black-castle",target:"_blank",rel:"noopener noreferrer"},fa={href:"https://gbdev.gg8.se/forums/viewtopic.php?id=674",target:"_blank",rel:"noopener noreferrer"},ka={href:"https://user0x7f.itch.io/genesis",target:"_blank",rel:"noopener noreferrer"},ya={href:"https://antonylavelle.itch.io/indestructotank-gb",target:"_blank",rel:"noopener noreferrer"},Ba={href:"https://pocketpixel.design/super-jetpak-dx-game-boy-rom.html",target:"_blank",rel:"noopener noreferrer"},Ga={href:"https://aiguanachein.itch.io/powa",target:"_blank",rel:"noopener noreferrer"},wa={href:"https://github.com/Zal0/ZGB/",target:"_blank",rel:"noopener noreferrer"},va={href:"https://thegreatgallus.itch.io/cavern-mvm-9",target:"_blank",rel:"noopener noreferrer"},Ca={href:"https://github.com/Zal0/ZGB/",target:"_blank",rel:"noopener noreferrer"},Aa={href:"https://ctneptune.itch.io/mona-and-the-witchs-hat-dx",target:"_blank",rel:"noopener noreferrer"},Da={href:"https://github.com/Zal0/ZGB/",target:"_blank",rel:"noopener noreferrer"},Sa={href:"https://gamejolt.com/games/the-bouncing-ball-gb/86699",target:"_blank",rel:"noopener noreferrer"},Ma={href:"https://drludos.itch.io/dmg-deals-damage",target:"_blank",rel:"noopener noreferrer"},xa=e("h3",{id:"gb-studio",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#gb-studio","aria-hidden":"true"},"#"),r(" GB Studio")],-1),Pa={href:"https://kadabura.itch.io/soul-void",target:"_blank",rel:"noopener noreferrer"},Ra={href:"https://izma.itch.io/deadeus",target:"_blank",rel:"noopener noreferrer"},Ta={href:"https://lumpytouch.itch.io/super-impostor-bros",target:"_blank",rel:"noopener noreferrer"},Ea=e("h3",{id:"demos",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#demos","aria-hidden":"true"},"#"),r(" Demos")],-1),ja={href:"https://github.com/AntonioND/back-to-color",target:"_blank",rel:"noopener noreferrer"},La={href:"https://github.com/vegard/beach-gbc",target:"_blank",rel:"noopener noreferrer"},za={href:"https://github.com/mills32/CUTE_DEMO",target:"_blank",rel:"noopener noreferrer"},Ia={href:"https://github.com/svendahlstrand/10-print-game-boy",target:"_blank",rel:"noopener noreferrer"},Fa=e("code",null,"10 PRINT",-1),Oa={href:"https://github.com/naavis/roboto-demo",target:"_blank",rel:"noopener noreferrer"},Ha={href:"https://github.com/wtjones/matrix-rain-gb",target:"_blank",rel:"noopener noreferrer"},Na={href:"https://github.com/LIJI32/GBVideoPlayer",target:"_blank",rel:"noopener noreferrer"},Ua={href:"https://github.com/LIJI32/GBVideoPlayer2",target:"_blank",rel:"noopener noreferrer"},Ka=e("em",null,"stereo- PCM audio, and introduces video compression",-1),Va=e("h2",{id:"reverse-engineering",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#reverse-engineering","aria-hidden":"true"},"#"),r(" Reverse Engineering")],-1),Wa={href:"http://ecc-comp.blogspot.it/2016/03/reverse-engineering-kirbys-dreamland-2.html",target:"_blank",rel:"noopener noreferrer"},Za={href:"https://github.com/pret/pokemon-reverse-engineering-tools",target:"_blank",rel:"noopener noreferrer"},qa={href:"https://www.megabeets.net/reverse-engineering-a-gameboy-rom-with-radare2",target:"_blank",rel:"noopener noreferrer"},Ja={href:"http://kemenaran.winosx.com/posts/category-disassembling-links-awakening/",target:"_blank",rel:"noopener noreferrer"},Xa={href:"https://github.com/h3nnn4n/Reverse-Engineering-the-GameBoy-Tetris",target:"_blank",rel:"noopener noreferrer"},Ya={href:"https://gbdev.io/articles/dma_hijacking",target:"_blank",rel:"noopener noreferrer"},Qa=e("h3",{id:"game-disassemblies",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#game-disassemblies","aria-hidden":"true"},"#"),r(" Game Disassemblies")],-1),$a={href:"https://github.com/pret/pokered",target:"_blank",rel:"noopener noreferrer"},el={href:"https://github.com/pret/pokecrystal",target:"_blank",rel:"noopener noreferrer"},rl={href:"https://github.com/pret/pokeyellow",target:"_blank",rel:"noopener noreferrer"},tl={href:"https://github.com/pret/pokegold",target:"_blank",rel:"noopener noreferrer"},ol={href:"https://github.com/pret/pokepinball",target:"_blank",rel:"noopener noreferrer"},nl={href:"https://github.com/pret/poketcg",target:"_blank",rel:"noopener noreferrer"},al={href:"https://github.com/pret/pokegold-spaceworld",target:"_blank",rel:"noopener noreferrer"},ll={href:"https://github.com/mojobojo/LADX-Disassembly",target:"_blank",rel:"noopener noreferrer"},il={href:"https://github.com/drenn1/ages-disasm",target:"_blank",rel:"noopener noreferrer"},sl={href:"https://github.com/vinheim3/tetris-gb-disasm",target:"_blank",rel:"noopener noreferrer"},hl={href:"https://github.com/DevEd2/FXHammer-Disasm",target:"_blank",rel:"noopener noreferrer"},dl={href:"https://github.com/sanqui/hm3",target:"_blank",rel:"noopener noreferrer"},cl=e("h2",{id:"game-boy-camera",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#game-boy-camera","aria-hidden":"true"},"#"),r(" Game Boy Camera")],-1),gl=e("h3",{id:"retrieving-images",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#retrieving-images","aria-hidden":"true"},"#"),r(" Retrieving images")],-1),ml=e("p",null,"Game Boy Printer emulation (e.g. to retrieve images from the camera):",-1),pl={href:"https://github.com/mofosyne/arduino-gameboy-printer-emulator",target:"_blank",rel:"noopener noreferrer"},ul={href:"https://github.com/applefreak/esp8266-gameboy-printer",target:"_blank",rel:"noopener noreferrer"},bl={href:"https://github.com/HerrZatacke/wifi-gbp-emulator",target:"_blank",rel:"noopener noreferrer"},_l={href:"https://github.com/cristofercruz/gbp-esp-shield-pcb",target:"_blank",rel:"noopener noreferrer"},fl={href:"https://github.com/mofosyne/GameboyPrinterSniffer",target:"_blank",rel:"noopener noreferrer"},kl=e("h3",{id:"changing-the-camera-s-behavior",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#changing-the-camera-s-behavior","aria-hidden":"true"},"#"),r(" Changing the camera's behavior")],-1),yl=e("p",null,"Methods to improve and/or manipulate the camera's quality and behavior:",-1),Bl={href:"http://ekeler.com/game-boy-camera-canon-ef-mount",target:"_blank",rel:"noopener noreferrer"},Gl={href:"https://www.thingiverse.com/thing:4337362",target:"_blank",rel:"noopener noreferrer"},wl={href:"https://github.com/cristofercruz/game-boy-camera-frame-replacer",target:"_blank",rel:"noopener noreferrer"},vl=e("h3",{id:"post-processing",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#post-processing","aria-hidden":"true"},"#"),r(" Post processing")],-1),Cl={href:"https://github.com/mofosyne/GameboyPrinterPaperSimulation",target:"_blank",rel:"noopener noreferrer"},Al={href:"https://github.com/HerrZatacke/gb-printer-web",target:"_blank",rel:"noopener noreferrer"},Dl=e("h2",{id:"related-projects",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#related-projects","aria-hidden":"true"},"#"),r(" Related projects")],-1),Sl={href:"https://www.gbstudio.dev/",target:"_blank",rel:"noopener noreferrer"},Ml={href:"https://gbstudiocentral.com/resources/",target:"_blank",rel:"noopener noreferrer"},xl={href:"https://discord.gg/knRryZWGcm",target:"_blank",rel:"noopener noreferrer"},Pl={href:"https://github.com/trash80/Arduinoboy",target:"_blank",rel:"noopener noreferrer"},Rl={href:"https://github.com/diegovalverde/papiGB",target:"_blank",rel:"noopener noreferrer"},Tl={href:"https://github.com/trun/fpgaboy",target:"_blank",rel:"noopener noreferrer"},El={href:"https://github.com/danShumway/Piglet",target:"_blank",rel:"noopener noreferrer"},jl={href:"https://github.com/PumpMagic/ostrich",target:"_blank",rel:"noopener noreferrer"},Ll={href:"https://github.com/trash80/mGB",target:"_blank",rel:"noopener noreferrer"},zl={href:"https://github.com/LIJI32/GBVisualizer",target:"_blank",rel:"noopener noreferrer"},Il={href:"https://github.com/drhelius/arduinogameboy",target:"_blank",rel:"noopener noreferrer"},Fl={href:"https://github.com/bitnenfer/gameboy-brainfuck",target:"_blank",rel:"noopener noreferrer"},Ol={href:"https://github.com/elseyf/gbfk",target:"_blank",rel:"noopener noreferrer"},Hl={href:"https://github.com/mattcurrie/gb-save-states",target:"_blank",rel:"noopener noreferrer"},Nl={href:"https://github.com/jdeblese/gbcpu",target:"_blank",rel:"noopener noreferrer"},Ul={href:"https://youtube.com/watch?v=1lzHfLYzyRM",target:"_blank",rel:"noopener noreferrer"},Kl={href:"https://dhole.github.io/post/gameboy_serial_1/",target:"_blank",rel:"noopener noreferrer"},Vl={href:"https://dhole.github.io/post/gameboy_serial_2/",target:"_blank",rel:"noopener noreferrer"},Wl={href:"https://dhole.github.io/post/gameboy_serial_3/",target:"_blank",rel:"noopener noreferrer"},Zl={href:"https://dhole.github.io/post/gameboy_cartridge_rw_1/",target:"_blank",rel:"noopener noreferrer"},ql={href:"https://tilde.town/~minerobber/techwriteups/pokemonpc.html",target:"_blank",rel:"noopener noreferrer"},Jl={href:"https://dhole.github.io/post/gameboy_custom_logo/",target:"_blank",rel:"noopener noreferrer"},Xl={href:"https://www.gamasutra.com/blogs/DoctorLudos/20171207/311143/",target:"_blank",rel:"noopener noreferrer"},Yl={href:"https://www.gamasutra.com/blogs/DoctorLudos/20180213/314554/",target:"_blank",rel:"noopener noreferrer"},Ql={href:"http://fuji.drillspirits.net/?post=87",target:"_blank",rel:"noopener noreferrer"},$l={href:"https://github.com/stijnfrishert/liblsdj",target:"_blank",rel:"noopener noreferrer"},ei={href:"https://github.com/jkotlinski/lsdpatch",target:"_blank",rel:"noopener noreferrer"},ri={href:"https://github.com/ChaosCabbage/crazy-gameboy-video-experiments",target:"_blank",rel:"noopener noreferrer"},ti={href:"https://github.com/ekimekim/gbos",target:"_blank",rel:"noopener noreferrer"},oi={href:"https://translate.google.com/translate?hl=&sl=ru&tl=en&u=https%3A%2F%2Fweb.archive.org%2Fweb%2F20081226145726%2Fhttp%3A%2F%2Fworkmaster.ru%2Findex.php%3Fp%3D8&sandbox=1",target:"_blank",rel:"noopener noreferrer"},ni={href:"https://github.com/Palmr/gb-link-cable",target:"_blank",rel:"noopener noreferrer"},ai={href:"https://github.com/Tauwasser/GBCartFlasher",target:"_blank",rel:"noopener noreferrer"},li={href:"https://github.com/zephray/VerilogBoy/",target:"_blank",rel:"noopener noreferrer"},ii={href:"https://github.com/furrtek/GBCamcorder",target:"_blank",rel:"noopener noreferrer"},si={href:"https://github.com/insidegadgets/GBCartRead",target:"_blank",rel:"noopener noreferrer"},hi={href:"https://github.com/insidegadgets/GBxCart-RW",target:"_blank",rel:"noopener noreferrer"},di={href:"http://www.its.caltech.edu/~costis/sgb_hack/",target:"_blank",rel:"noopener noreferrer"},ci=e("h3",{id:"directories",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#directories","aria-hidden":"true"},"#"),r(" Directories")],-1),gi={href:"http://gbdev.gg8.se/files/",target:"_blank",rel:"noopener noreferrer"},mi={href:"https://github.com/gb-archive",target:"_blank",rel:"noopener noreferrer"},pi={href:"https://github.com/gb-archive/salvage",target:"_blank",rel:"noopener noreferrer"},ui=e("h3",{id:"websites",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#websites","aria-hidden":"true"},"#"),r(" Websites")],-1),bi={href:"http://devrs.com/gb",target:"_blank",rel:"noopener noreferrer"},_i={href:"http://pdroms.de/news/gameboy/",target:"_blank",rel:"noopener noreferrer"},fi={href:"http://hhug.me",target:"_blank",rel:"noopener noreferrer"};function ki(yi,Bi){const o=l("ExternalLinkIcon"),a=l("RouterLink");return h(),d("div",null,[g,e("h3",m,[p,r(),e("a",u,[r("The Game Boy, a hardware autopsy"),t(o)])]),b,_,e("h3",f,[k,r(),e("a",y,[r("The Ultimate Game Boy Talk"),t(o)])]),B,G,e("blockquote",null,[w,v,e("p",null,[r("Game Boy Advance development is covered by another project, the "),e("a",C,[r("awesome-GBAdev"),t(o)]),r(" list. GBA, however, can run GB/GBC games. It does so in a slightly different way compared to native hardware. This is covered in the Emulator Development section of this list.")]),A]),D,e("ul",null,[e("li",null,[e("a",S,[M,t(o)]),r(" - The single, most comprehensive technical reference to Game Boy available to the public. Corrected, updated and maintained by the community.")]),e("li",null,[e("a",x,[r("The Cycle-Accurate Game Boy Docs"),t(o)]),r(" - A precise documentation by AntonioND to make a cycle-accurate Game Boy emulator.")]),e("li",null,[e("a",P,[r("Complete Technical Reference"),t(o)]),r(" - by Gekkio.")]),e("li",null,[e("a",R,[r("Game Boy Project Report"),t(o)]),r(" - Report of an hardware "),e("a",T,[r("emulator"),t(o)]),r(" (on a Terasic DE1-SoC Board) developed as final project for the CSEE4840 Embedded Systems Design course at Columbia University.")])]),E,e("ul",null,[e("li",null,[e("a",j,[r("gb-opcodes"),t(o)]),r(" - Opcodes table")]),e("li",null,[e("a",L,[r("RGBDS opcodes reference"),t(o)]),r(" - A reference of all instructions, including short descriptions, cycle and byte counts, and explanations of flag modifications.")])]),z,e("ul",null,[e("li",null,[e("a",I,[r("Bootstrap ROM"),t(o)])]),e("li",null,[e("a",F,[r("Unused Palettes"),t(o)])]),e("li",null,[e("a",O,[r("Colorization palettes in the BIOS"),t(o)])]),e("li",null,[e("a",H,[r("ROM Disassembly"),t(o)])])]),N,e("ul",null,[e("li",null,[e("a",U,[r("DMG Schematics"),t(o)]),r(" - Hardware schematics.")]),e("li",null,[e("a",K,[r("The Game Boy Project"),t(o)]),r(" - Provides a study on the hardware and detailed constructional information for the implementation of three 8-bit bidirectional parallel ports.")]),e("li",null,[e("a",V,[r("Related custom hardware"),t(o)]),r(" - by Gekkio.")]),e("li",null,[e("a",W,[r("ESP8266 GB Dev Board"),t(o)]),r(" - Dev board for Game Boy accessories development, powered by ESP8266.")]),e("li",null,[e("a",Z,[r("ESP8266 GB Printer"),t(o)]),r(" - A device that emulates the GB Printer and lets you retrieve images using WiFi.")]),e("li",null,[e("a",q,[r("fruttenboel"),t(o)]),r(" - Page with loads of information on the hardware, custom boards to interface with the console and other related projects.")]),e("li",null,[e("a",J,[r("Game Boy hardware database"),t(o)]),r(" - Data and photos of various types of Game Boy consoles.")]),e("li",null,[e("a",X,[r("DMG-CPU-Inside"),t(o)]),r(" - Schematics and annotated overlay for the DMG-CPU-B chip, extracted from die photos.")])]),Y,e("ul",null,[e("li",null,[e("a",Q,[r("Dan Docs"),t(o)]),r(" - Obscure Game Boy hardware documentation.")]),e("li",null,[e("a",$,[r("Edge of Emulation"),t(o)]),r(", a series of articles about emulating and investigating Game Boy accessories. Also available as "),e("a",ee,[r("technical documents"),t(o)]),r(" in the GBE- emulator documentation. "),e("ul",null,[e("li",null,[e("a",re,[r("Mobile Adapter GB"),t(o)]),r(" - Internet connectivity and DLC on the Game Boy Color.")]),e("li",null,[e("a",te,[r("The Game Boy Printer"),t(o)])]),e("li",null,[e("a",oe,[r("Pocket Sonar"),t(o)]),r(" - A blue cart with built-in sonar hardware.")]),e("li",null,[e("a",ne,[r("Zok Zok Heroes"),t(o)]),r(" - Zok Zok Heroes' Full Changer, a motion-activated accessory.")]),e("li",null,[e("a",ae,[r("Infrared Madness"),t(o)]),r(" - Infrared communication on the Game Boy Color.")]),e("li",null,[e("a",le,[r("Game Boy 4-Player Adapter"),t(o)]),r(" - DMG-07.")]),e("li",null,[e("a",ie,[r("Barcode Boy"),t(o)]),r(" - The first Game Boy card-scanner.")]),e("li",null,[e("a",se,[r("Barcode Taisen Bardigun"),t(o)]),r(" - A late 90s DMG-GBC barcode reader.")])])]),e("li",null,[e("a",he,[r("DMG-07 Technical Documentation"),t(o)])]),e("li",null,[e("a",de,[r("Game Boy Camera RE"),t(o)]),r(" - Documentation about GB Camera and tools used to reverse engineer it by using Arduino.")]),e("li",null,[e("a",ce,[r("Creating photo realistic images with neural networks and a Gameboy Camera"),t(o)])]),e("li",null,[e("a",ge,[r("The Game Boy Printer"),t(o)]),r(" - An in-depth technical document about the printer hardware, the communication protocol and the usual routine that games used for implementing the print feature.")]),e("li",null,[e("a",me,[r("Ben Heck Reverse Engineers Game Boy Printer"),t(o)]),r(" (Errata: the used thermal paper is expired, 4 colors are actually printable).")]),e("li",null,[e("a",pe,[r("Arduino Game Boy Printer Emulator"),t(o)]),r(" - Emulating a Game Boy Printer via the Game Boy Link cable with an Arduino.")]),e("li",null,[e("a",ue,[r("Mobile Game Boy Adapter"),t(o)])]),e("li",null,[e("a",be,[r("GB KISS LINK MODEM"),t(o)])])]),_e,e("ul",null,[e("li",null,[e("a",fe,[r("AntonioND's docs"),t(o)]),r(" - Corrected schematics and infos on cartridge header data.")]),e("li",null,[e("a",ke,[r("Gekkio's Game Boy cartridge types"),t(o)]),r(" - An overview on existing cartridge types.")]),e("li",null,[r("Gekkio's cartridge analysis: "),e("ul",null,[e("li",null,[e("a",ye,[r("DMG-BEAN-02"),t(o)]),r(";")]),e("li",null,[e("a",Be,[r("MBC1"),t(o)]),r(";")]),e("li",null,[e("a",Ge,[r("no MBC"),t(o)]),r(".")])])]),e("li",null,[r("Pinout, registers descriptions and VHDL code of some cartridge types on Tauwasser's wiki: "),e("ul",null,[e("li",null,[e("a",we,[r("MBC1"),t(o)])]),e("li",null,[e("a",ve,[r("MBC2"),t(o)])]),e("li",null,[e("a",Ce,[r("MMM01"),t(o)])])])]),e("li",null,[e("a",Ae,[r("Game Boy Cartridges Schematics"),t(o)]),r(" - Schematics for MBC2 and MBC3 types.")]),e("li",null,[e("a",De,[r("Cartridges PCB photos"),t(o)])]),e("li",null,[e("a",Se,[r("MBC1+RAM+Battery cartridge Schematic"),t(o)]),r(" - First schematics by Jeff Frohwein.")]),e("li",null,[e("a",Me,[r("MBC1 and MBC2 cartridges circuits"),t(o)]),r(" - and explanation on how these MBC bank switch and control RAM.")]),xe,e("li",null,[e("a",Pe,[r("Game Boy cartridge PCB photos"),t(o)])])]),Re,e("ul",null,[e("li",null,[e("a",Te,[r("Emulating a GameBoy Cartridge"),t(o)]),r(" - Emulating the functionality of a Game Boy cartridge with the development board STM32F4.")]),e("li",null,[e("a",Ee,[r("Wolf"),t(o)]),r(" - Game Boy cartridge with co-processor.")]),e("li",null,[e("a",je,[r("Homebrew-Gameboy-Cartridge"),t(o)]),r(" - Eagle library, schematic, and board files for a cartridge PCB using an Atmel AT49F040 as ROM.")]),e("li",null,[e("a",Le,[r("Homebrew Gameboy Color Cartridge"),t(o)]),r(" - Board layout for an EEPROM powered cartridge.")]),e("li",null,[e("a",ze,[r("Nekocart"),t(o)]),r(" - Open-source flash cartridge using an Xilinx CPLD as MBC5 ("),e("a",Ie,[r("Post"),t(o)]),r(").")]),e("li",null,[e("a",Fe,[r("Reiner Ziegler's Game Boy page"),t(o)]),r(" - Commercial and homemade programmable cartridges and programming systems. Tutorials, wiring and schematics provided.")]),e("li",null,[e("a",Oe,[r("Gameboy-MBC5-MBC1-Hybrid"),t(o)]),r(" - CPLD implementation of a MBC5/MBC1 Hybrid cartridge.")])]),He,e("ul",null,[e("li",null,[e("a",Ne,[r("Introduction to Game Boy Hacking"),t(o)]),r(" - Workshop introducing basic assembly, debugging and reverse engineering.")]),e("li",null,[e("a",Ue,[r("GBSOUND.txt"),t(o)]),r(" - A document detailing the Game Boy sound engine.")]),e("li",null,[e("a",Ke,[r("gbdev FAQs"),t(o)]),r(" - Must read by Jeff Frohwein.")]),e("li",null,[e("a",Ve,[r("Game Boy Bootrom"),t(o)]),r(" - Commented dump of the DMG bootrom.")]),e("li",null,[e("a",We,[r("Differences between the Z80 and the gameboy's processor"),t(o)])]),e("li",null,[e("a",Ze,[r("Gameboy 2BPP Graphics Format"),t(o)]),r(" - Information on how the Game Boy interprets VRAM tile data to color pixels.")])]),qe,e("ul",null,[e("li",null,[e("a",Je,[r("Reverse Engineering fine details of Game Boy hardware"),t(o)]),r(" - 43 minutes talk by Gekkio given at Disobey 2018 ("),e("a",Xe,[r("errata"),t(o)]),r(").")]),e("li",null,[e("a",Ye,[r("Emulation of Nintendo Game Boy"),t(o)]),r(" - Overview of the Game Boy hardware with the perspective of building an emulator.")]),e("li",null,[e("a",Qe,[r("DMG-01"),t(o)]),r(" - An educational Gameboy Emulator in Rust and a companion book explaining its development. *"),e("a",$e,[r("Oh Boy! Creating a Game Boy Emulator in Rust"),t(o)]),r("- is a talk given at Rust Fest 18 about this.")]),e("li",null,[e("a",er,[r("Building a Game Boy emulator in JavaScript"),t(o)]),r(" - Step by step tutorial.")]),e("li",null,[e("a",rr,[r("Writing a Game Boy emulator, Cinoop"),t(o)])]),e("li",null,[e("a",tr,[r("0dmg"),t(o)]),r(" - Learning Rust by building a partial Game Boy emulator.")]),e("li",null,[e("a",or,[r("RealBoy Emulator"),t(o)]),r(" - A series of posts about the design and implementation of the RealBoy Emulator.")]),e("li",null,[e("a",nr,[r("Codeslinger"),t(o)]),r(" - Another series of posts documenting the building of an emulator.")]),e("li",null,[e("a",ar,[r("Why did I spend 1.5 months creating a Gameboy emulator?"),t(o)]),r(" - Blog post.")]),e("li",null,[e("a",lr,[r("binjgb rewind"),t(o)]),r(" - Implementing a *rewind- feature.")]),e("li",null,[e("a",ir,[r("binjgb on the web"),t(o)]),r(" - Porting of the binjgb emulator to Web Assembly. "),e("a",sr,[r("(Part 2)"),t(o)])]),e("li",null,[e("a",hr,[r("binjgb debugging hangs"),t(o)]),r(" - Investigations on emulations quirks.")]),e("li",null,[e("a",dr,[r("Decoding Gameboy Z80 opcodes"),t(o)]),r(" - How to algorithmically decode Game Boy instructions (as opposed to writing one huge switch-case statement).")]),e("li",null,[e("a",cr,[r("Porting a GO Game Boy emulator to WebAssembly"),t(o)])]),e("li",null,[e("a",gr,[r("About swotGB"),t(o)]),r(" - Notes about the development of a Game Boy emulator in JavaScript.")]),e("li",null,[t(a,{to:"/EMULATORS.html"},{default:i(()=>[r("List of open source emulators")]),_:1})])]),mr,e("ul",null,[e("li",null,[e("a",pr,[r("Blargg's test roms"),t(o)])]),e("li",null,[e("a",ur,[r("Gekkio's test roms"),t(o)])]),e("li",null,[e("a",br,[r("SameSuite"),t(o)])]),e("li",null,[e("a",_r,[r("Mealybug Tearoom Tests"),t(o)])]),e("li",null,[e("a",fr,[r("GB Accuracy Tests"),t(o)])]),e("li",null,[e("a",kr,[r("144p Test Suite"),t(o)]),r(" - Port of Artemio Urbina's 240p Test Suite to the Game Boy.")]),e("li",null,[e("a",yr,[r("MBC3 RTC test ROM"),t(o)])]),e("li",null,[e("a",Br,[r("dmg-acid2"),t(o)]),r(" and "),e("a",Gr,[r("cgb-acid2"),t(o)]),r(" - Basic PPU rendering tests.")])]),wr,e("p",null,[r("The "),e("a",vr,[r("Choosing tools for Game Boy development"),t(o)]),r(" essay provides an overview of the available development tools for Game Boy.")]),Cr,e("ul",null,[e("li",null,[e("a",Ar,[r("RGBDS"),t(o)]),r(" - Assembler and linker package. "),e("a",Dr,[r("Documentation"),t(o)]),r(".")]),e("li",null,[e("a",Sr,[r("ASMotor"),t(o)]),r(" - Assembler engine and development system targeting Game Boy, among other CPUs. Written by the original RGBDS author. "),e("a",Mr,[r("Documentation"),t(o)]),r(".")]),e("li",null,[e("a",xr,[r("wla-dx"),t(o)]),r(" - Yet Another GB-Z80/Z80/... Multi Platform Cross Assembler Package. "),e("a",Pr,[r("Documentation"),t(o)]),r(".")])]),Rr,e("ul",null,[e("li",null,[e("a",Tr,[r("GBDK"),t(o)]),r(" - Maintained and modernized GBDK (Game Boy Development Kit) powered by an updated version of the SDCC toolchain. Provides a C compiler, assembler, linker and a set of libraries. "),e("ul",null,[e("li",null,[e("a",Er,[r("API docs: Getting Started"),t(o)])]),e("li",null,[e("a",jr,[r("Examples"),t(o)])]),e("li",null,[e("a",Lr,[r("Documentation, links and tools"),t(o)])])])]),e("li",null,[e("a",zr,[r("Turbo Rascal Syntax Error"),t(o)]),r(" - Complete suite (IDE, compiler, programming language, resource editor) intended for developing games/demos for 8 / 16-bit line of computers, including the Game Boy and Game Boy Color.")])]),Ir,e("ul",null,[e("li",null,[e("a",Fr,[r("RGBDS-Live"),t(o)]),r(" - In-browser coding environment to try out RGBDS.")]),e("li",null,[e("a",Or,[r("Wiz"),t(o)]),r(" - A high-level assembly language for writing homebrew on retro console platforms (Game Boy, NES, Atari 2600, and more).")]),e("li",null,[e("a",Hr,[r("gbforth"),t(o)]),r(" - A Forth-based Game Boy development kit.")]),e("li",null,[e("a",Nr,[r("gbasm-rs"),t(o)]),r(" - An opinionated Rust based compiler for Game Boy z80 assembly code.")]),e("li",null,[e("a",Ur,[r("gbasm"),t(o)]),r(" - A JavaScript based compiler for Game Boy z80 assembly code.")]),e("li",null,[e("a",Kr,[r("tniASM"),t(o)]),r(" - Macro Assembler.")]),e("li",null,[e("a",Vr,[r("Assembler"),t(o)]),r(" - Assembler written in Swift.")]),e("li",null,[e("a",Wr,[r("llvm-gbz80"),t(o)]),r(" / "),e("a",Zr,[r("clang-gbz80"),t(o)]),r(" - Clang/LLVM port to the GBZ80 CPU (similar to the deprecated "),e("a",qr,[r("euclio/llvm-gbz80"),t(o)]),r(").")]),e("li",null,[e("a",Jr,[r("gbdk-go"),t(o)]),r(" - A compiler translates Go programs to C code. The output C code is built into GB ROM by GBDK.")])]),Xr,e("ul",null,[e("li",null,[e("a",Yr,[r("BGB"),t(o)]),r(" - Powerful emulator and debugger. Provides an accurate hardware emulation.")]),e("li",null,[e("a",Qr,[r("SameBoy"),t(o)]),r(" - Accurate emulator with a wide range of powerful debugging features.")]),e("li",null,[e("a",$r,[r("Mooneye GB"),t(o)]),r(" - Research project and emulator in Rust.")]),e("li",null,[e("a",et,[r("mGBA"),t(o)]),r(" - Modern cross platform GBA emulator which also runs GB/GBC games.")]),e("li",null,[e("a",rt,[r("Binjgb"),t(o)]),r(" - 5Kloc emulator that passes most of the tests. *Rewind- feature. Runs in the browser using WebAssembly.")]),e("li",null,[e("a",tt,[r("Gambatte"),t(o)]),r(" - Cross-platform and accurate emulator.")]),e("li",null,[e("a",ot,[r("MetroBoy"),t(o)]),r(" - A playable, circuit-level simulation of an entire Game Boy.")]),e("li",null,[e("a",nt,[r("gbe-plus"),t(o)]),r(" - A recently rewritten emulator that has a large effort in preserving the functions of obscure accessories (such as IR link, Mobile Network GB, Barcode Boy, GB Printer, local and online GB Serial Link Cable, ... )")]),e("li",null,[e("a",at,[r("Emulicious"),t(o)]),r(" - Provides accurate emulation and includes powerful tools such as a profiler and source-level debugging for ASM and C via a "),e("a",lt,[r("VS Code debug adapter"),t(o)]),r(".")])]),e("p",null,[t(a,{to:"/EMULATORS.html"},{default:i(()=>[r("Complete list of open source emulators")]),_:1})]),it,st,e("ul",null,[e("li",null,[e("a",ht,[r("ZGB"),t(o)]),r(" - A little engine for creating games for the original Game Boy (expands gbdk, more info "),e("a",dt,[r("here"),t(o)]),r(").")]),e("li",null,[e("a",ct,[r("Retr0 GB"),t(o)]),r(" - An engine for creating games (expands GBDK).")])]),gt,e("ul",null,[e("li",null,[e("a",mt,[r("GBExtended"),t(o)]),r(" - C library extending gbdk.")]),e("li",null,[e("a",pt,[r("gbdk-lib-extension"),t(o)]),r(" - A small set of sources and tools for the Game Boy Development Kit by Michael Hope.")]),e("li",null,[e("a",ut,[r("Dot Matrix Game Editor"),t(o)]),r(" - An IDE for Game Boy programming in a C-like language called GBL, with many other features like tile and map extraction, WLA-DX assembly, and more.")]),e("li",null,[e("a",bt,[r("mgbdis"),t(o)]),r(" - Game Boy ROM disassembler with RGBDS compatible output.")]),e("li",null,[e("a",_t,[r("ROM Header Utility"),t(o)]),r(" - An online tool to inspect and modify a ROM's header data, including the logo.")]),e("li",null,[e("a",ft,[r("romusage"),t(o)]),r(" - Command line tool for estimating usage (free space) of Game Boy ROMs from a .map, .noi or ihx file. Works with GBDK-2020 and RGBDS.")]),e("li",null,[e("a",kt,[r("awake"),t(o)]),r(" - Game Boy decompiler.")]),e("li",null,[e("a",yt,[r("Game Boy Text Tools"),t(o)]),r(" - Set of tools for text manipulation and translation of Game Boy ROMs written in Node.js.")]),e("li",null,[e("a",Bt,[r("evscript"),t(o)]),r(" - A scripting language for the Game Boy, useful for enemy AI, dialogue, animations, and coroutines.")]),e("li",null,[e("a",Gt,[r("evunit"),t(o)]),r(" - A unit testing program for assembly code.")])]),wt,e("ul",null,[e("li",null,[e("a",vt,[r("Game Boy Tile Data Generator"),t(o)]),r(" - HTML5 / JS web application that will convert bitmap images to hexadecimal data appropriate for use in tile based graphical applications, specifically GB.")]),e("li",null,[e("a",Ct,[r("Harry Mulder's GB Development"),t(o)]),r(" - Some sources and home of Game Boy Tile Designer (GBTD) and Game Boy Map Builder (GBMB) tools.")]),e("li",null,[e("a",At,[r("GBTiles"),t(o)]),r(" - Converts .GBR files created with Harry Mulder's Tile Designer (GBTD) and .GBM files created with Harry Mulder's Map Builder (GBMB) to different formats for use with the Game Boy and GBDK.")]),e("li",null,[e("a",Dt,[r("bmp2cgb"),t(o)]),r(" - Graphics converter for Game Boy Color development providing real time palette adjustments.")]),e("li",null,[e("a",St,[r("png2gb"),t(o)]),r(" - CLI tool to convert image file to game boy .c array.")]),e("li",null,[e("a",Mt,[r("GB-convert"),t(o)]),r(" - Game Boy tile conversion and map editor tool (converts to assembly).")]),e("li",null,[e("a",xt,[r("brewtool"),t(o)]),r(" - A collection of primitive editor/converter tools for making assets used with homebrew ROM development.")]),e("li",null,[e("a",Pt,[r("vtGBte"),t(o)]),r(" - A minimalistic ncurses tile editor.")]),e("li",null,[e("a",Rt,[r("tpp1"),t(o)]),r(" - Definition and specification of a custom GB/GBC memory/hardware mapper, as a functional superset of MBC.")]),e("li",null,[e("a",Tt,[r("libstdgb"),t(o)]),r(" - A C library of useful Game Boy operations (SDCC).")]),e("li",null,[e("a",Et,[r("Tilemap GB"),t(o)]),r(" - GIMP image editor plug-in for importing & exporting GBMB and GBTD tilemaps and tilesets (as bitmap images or .GBM/.GBR files).")]),e("li",null,[e("a",jt,[r("Tilemap Helper"),t(o)]),r(" - GIMP image editor plug-in for optimizing tile maps and tile sets.")]),e("li",null,[e("a",Lt,[r("Tilemap Studio"),t(o)]),r(" - A tilemap editor for Game Boy, Color, Advance, and SNES projects. Written in C++ with FLTK.")]),e("li",null,[e("a",zt,[r("Superfamiconv"),t(o)]),r(" - Flexible and composable tile graphics converter supporting Super Nintendo, Game Boy, Game Boy Color, Game Boy Advance, Mega Drive and PC Engine formats.")])]),It,e("ul",null,[e("li",null,[e("a",Ft,[r("cart-dumper"),t(o)]),r(" - Game Boy Cartridge Dumper ROM.")]),e("li",null,[e("a",Ot,[r("gbcamextract"),t(o)]),r(" - Extracts photos from Game Boy Camera saves.")]),e("li",null,[e("a",Ht,[r("Game Boy LCD sniffing"),t(o)]),r(" - Sniff your Game Boy's LCD using a logic analyzer.")]),e("li",null,[e("a",Nt,[r("swapdump"),t(o)]),r(" - Diagnostic utility for Game Boy flashcarts.")]),e("li",null,[e("a",Ut,[r("Gameboy-LinkUp"),t(o)]),r(" - Game Boy LinkUp serial cable networking project.")])]),Kt,e("ul",null,[e("li",null,[e("a",Vt,[r("DevSound"),t(o)]),r(" - Sound driver embeddable in homebrews which supports pulse width manipulation, arpeggios, and multiple waveforms.")]),e("li",null,[e("a",Wt,[r("Carillon Player"),t(o)]),r(" - Music Engine.")]),e("li",null,[e("a",Zt,[r("GBT PLAYER"),t(o)]),r(" - A music player library and converter kit.")]),e("li",null,[e("a",qt,[r("mmlgb"),t(o)]),r(" - A MML parser and GBDK sound driver for the Nintendo Game Boy.")]),e("li",null,[e("a",Jt,[r("XPMCK"),t(o)]),r(" - An MML based music compiler with support for Game Boy & Game Boy Color.")]),e("li",null,[e("a",Xt,[r("SoundSystem"),t(o)]),r(" - A modernized audio driver for GameBoy Tracker (aka the Paragon 5 music player).")]),e("li",null,[e("a",Yt,[r("hUGETracker"),t(o)]),r(" - A music tracker based on OpenMPT, focused on ease of use, compact output, and embeddability in homebrew games.")]),e("li",null,[e("a",Qt,[r("CBT-FX"),t(o)]),r(" - A GBDK-2020 sound effect driver compatible with FX-Hammer sound effects.")])]),$t,e("ul",null,[e("li",null,[e("strong",null,[e("a",eo,[r("gb asm tutorial"),t(o)])]),r(" - Step by step tutorial, building several ROMs to accompany its explanations.")]),e("li",null,[e("a",ro,[r("ASMSchool"),t(o)]),r(" - A set of lessons by Duo about coding in Assembly for GB/GBC and disassembling.")]),e("li",null,[e("a",to,[r("hardware.inc"),t(o)]),r(" - Standard include file containing Game Boy hardware definitions for use in RGBDS projects.")]),e("li",null,[e("a",oo,[r("Assembly tutorial by David Pello"),t(o)]),r(" - Good document to learn to produce working asm code for gb. Brief explanations of many important topics. Many examples with commented source code.")]),e("li",null,[e("a",no,[r("assemblydigest"),t(o)]),r(" - Exploring Game Boy programming techniques: "),e("ul",null,[e("li",null,[e("a",ao,[r("Making an Empty Game Boy ROM (in Wiz)"),t(o)])]),e("li",null,[e("a",lo,[r("Making Art for the Game Boy"),t(o)])])])]),e("li",null,[e("a",io,[r("Beginner's Guide to Reverse Engineering GB"),t(o)]),r(" - Some starting tips on disassembling and reverse engineering.")]),e("li",null,[e("a",so,[r("FlappyBoy: Making a simple Game Boy Game"),t(o)])]),e("li",null,[e("a",ho,[r("Super Game Boy development"),t(o)]),r(" - Step by step tutorial to implement Super Game Boy features (frame and palettes).")]),e("li",null,[e("a",co,[r("GameBoy programming tutorial: Hello World!"),t(o)]),r(" - Step by step tutorial.")]),e("li",null,[e("a",go,[r("DMGreport"),t(o)]),r(" - Game programming tutorials in assembly.")]),e("li",null,[e("a",mo,[r("OAM DMA tutorial"),t(o)]),r(" - Example of how to use OAM DMA in assembly.")]),e("li",null,[e("a",po,[r("Game Boy Assembly Programming for the Modern Game Developer"),t(o)]),r(" - An e-book about making Game Boy games in Assembly.")])]),uo,bo,e("ul",null,[e("li",null,[e("a",_o,[r("dev'rs ASM section"),t(o)]),r(" - A lot of working demos and sources.")]),e("li",null,[e("a",fo,[r("EmmaEwert's experiments"),t(o)]),r(" - A collection of prototype programs, mostly just toying around. Among others, a daylight effect, transparency and a weather effect.")]),e("li",null,[e("a",ko,[r("DeadCScroll"),t(o)]),r(' - A detailed tutorial on how to make the screen wobble, among other "raster effects"')])]),yo,e("ul",null,[e("li",null,[e("a",Bo,[r("Nitty Gritty Gameboy Cycle Timing"),t(o)])]),e("li",null,[e("a",Go,[r("Mode3 Sprite Timing"),t(o)])]),e("li",null,[e("a",wo,[r("GameBoy Color DMA-Transfers v0.0.1"),t(o)])]),e("li",null,[e("a",vo,[r("STAT interrupt timings"),t(o)])]),e("li",null,[e("a",Co,[r("Video Timing"),t(o)])])]),Ao,e("ul",null,[e("li",null,[e("a",Do,[r("rgbds-template"),t(o)]),r(" - Basic hello-world example for Game Boy using RGBDS.")]),e("li",null,[e("a",So,[r("Game Boy Assembly Language Primer"),t(o)]),r(" - Simple template code with memory defines, copy routines and IBM font tilemap.")]),e("li",null,[e("a",Mo,[r("bootstrap.gb"),t(o)]),r(" - An example Game Boy project.")]),e("li",null,[e("a",xo,[r("Gameboy Boilerplate"),t(o)]),r(" - Boilerplate project to move quicker into the actual assembly code for your game.")]),e("li",null,[e("a",Po,[r("GingerBread"),t(o)]),r(" - A software library for making your own Game Boy games. It is made to be used alongside the book "),e("a",Ro,[r("Game Boy Assembly Programming for the Modern Game Developer"),t(o)]),r(" which also doubles as documentation.")]),e("li",null,[e("a",To,[r("gb-vwf"),t(o)]),r(" - Library to print variable-width text, comes with a demo.")]),e("li",null,[e("a",Eo,[r("gb-boilerplate"),t(o)]),r(" - A template for starting Game Boy projects, providing a Makefile for infrastructure.")]),e("li",null,[e("a",jo,[r("gb-starter-kit"),t(o)]),r(" - An expansion on the above, including base library code as well to get started faster.")]),e("li",null,[e("a",Lo,[r("gb-template"),t(o)]),r(" - A template with basic functions such as joypad input, DMA transfers, and map/tile data loading.")])]),zo,e("ul",null,[e("li",null,[e("a",Io,[r("Atom language package for RGBASM"),t(o)]),r(" - Atom syntax highlighting for RGBDS assembly.")]),e("li",null,[e("a",Fo,[r("gbz80-highlight"),t(o)]),r(" - Notepad+- and gedit syntax highlighting files for RGBDS assembly.")]),e("li",null,[e("a",Oo,[r("Vim syntax file for the Game Boy assembler RGBASM"),t(o)]),r(" - Vim syntax highlighting for RGBDS assembly.")]),e("li",null,[e("a",Ho,[r("Vim syntax file for RGBDS"),t(o)]),r(" - Another Vim syntax highlighting file for RGBDS assembly.")]),e("li",null,[e("a",No,[r("sublime-rgbds"),t(o)]),r(" - A Sublime Text 3 package for RGBDS, including syntax highlighting and some completion snippets.")]),e("li",null,[e("a",Uo,[r("Z80 Assembly support for Visual Studio Code"),t(o)])]),e("li",null,[e("a",Ko,[r("rgbds-vscode"),t(o)]),r(" - Visual Studio Code language extension for RGBDS GBZ80 Assembly.")]),e("li",null,[e("a",Vo,[r("rgbds-mode"),t(o)]),r(" - Emacs major mode for RGBDS assembly.")])]),Wo,e("ul",null,[e("li",null,[e("a",Zo,[r("8-Bit Wonderland"),t(o)]),r(" - Well-written introductory document about how the Game Boy works and how to start developing working code for it.")]),e("li",null,[e("a",qo,[r("Grooves Game Boy Programming"),t(o)]),r(" - A complete set of lessons about implementing various game mechanics in a Game Boy game.")]),e("li",null,[e("a",Jo,[r("How to Write a Simple Side Scrolling Game"),t(o)]),r(" - Old (but still relevant) tutorial.")]),e("li",null,[e("a",Xo,[r("Just another simple tutorial"),t(o)])]),e("li",null,[e("a",Yo,[r("GBDK Tutorial"),t(o)]),r(" - Fairly minimal game demo for getting started with GBDK.")]),e("li",null,[e("a",Qo,[r("GBDK Sprite"),t(o)]),r(" - Presents a workflow for getting multiple sprites to display and animate.")]),e("li",null,[e("a",$o,[r("GBDK Color"),t(o)]),r(" - Extends your knowledge of basic spriting on the Game Boy by adding colors to sprites, backgrounds and the window layer.")]),e("li",null,[e("a",en,[r("GBDK Joypad"),t(o)]),r(" - Details the use of the joypad with GBDK.")]),e("li",null,[e("a",rn,[r("Game Boy home of Flavor"),t(o)]),r(" - Some full games and sources.")]),e("li",null,[e("a",tn,[r("GBDK Configuring and Programming Tutorial"),t(o)]),r(" - Configuring GBDK, Using Tiles, Colliding Sprites, GBTD, GBMB, Memory Management and ROM Banking.")]),e("li",null,[e("a",on,[r("Simplified GBDK examples"),t(o)])]),e("li",null,[e("a",nn,[r("GBDK Programming Video Tutorials"),t(o)]),r(" - A series of video tutorials introducing beginners to programming with GBDK.")])]),an,ln,e("ul",null,[e("li",null,[e("a",sn,[r("Homebrew Hub"),t(o)]),r(" - Every unofficial homebrew ever produced for Game Boy playable online (mobile/touch too): a community-lead attempt to collect, archive and save every unofficial game, homebrew, demo, patch, hackrom for Game Boy (Color) produced by the community through years of passionate work.")])]),hn,e("ul",null,[e("li",null,[e("a",dn,[r("Tuff"),t(o)])]),e("li",null,[e("a",cn,[r("2048-gb"),t(o)])]),e("li",null,[e("a",gn,[r("Snake"),t(o)])]),e("li",null,[e("a",mn,[r("Lazerpong"),t(o)])]),e("li",null,[e("a",pn,[r("Geometrix"),t(o)])]),e("li",null,[e("a",un,[r("µCity"),t(o)])]),e("li",null,[e("a",bn,[r("Carazu"),t(o)])]),e("li",null,[e("a",_n,[r("Snake-gb"),t(o)])]),e("li",null,[e("a",fn,[r("GB303"),t(o)]),r(" - GB303 wavetable-based TB-303 style synthesizer for the Nintendo Game Boy.")]),e("li",null,[e("a",kn,[r("Sushi"),t(o)])]),e("li",null,[e("a",yn,[r("Flappy-boy-asm"),t(o)])]),e("li",null,[e("a",Bn,[r("kupman"),t(o)]),r(" and some other projects.")]),e("li",null,[e("a",Gn,[r("Adjustris"),t(o)])]),e("li",null,[e("a",wn,[r("exeman"),t(o)])]),e("li",null,[e("a",vn,[r("Aevilia"),t(o)])]),e("li",null,[e("a",Cn,[r("GBSlides"),t(o)]),r(" - A simple Game Boy Powerpoint-like slides viewer.")]),e("li",null,[e("a",An,[r("Pokered-gbc"),t(o)]),r(" - Pokémon Red remade with full GBC support.")]),e("li",null,[e("a",Dn,[r("ToyToy"),t(o)])]),e("li",null,[e("a",Sn,[r("StefaN"),t(o)]),r(" - Fourway Breakout clone.")]),e("li",null,[e("a",Mn,[r("Galaxia"),t(o)])]),e("li",null,[e("a",xn,[r("desgb"),t(o)]),r(" - DES encryption.")]),e("li",null,[e("a",Pn,[r("superhappyfunbubbletime"),t(o)])]),e("li",null,[e("a",Rn,[r("minesweepGB"),t(o)])]),e("li",null,[e("a",Tn,[r("Libbet and the Magic Floor"),t(o)])]),e("li",null,[e("a",En,[r("waveform-gb"),t(o)]),r(" - Program visualizing the wave form used by the wave channel. The wave form can be edited freely and playback of the wave is updated immediately.")]),e("li",null,[e("a",jn,[r("vectroid.gb"),t(o)]),r(" - Developed with gbasm.")]),e("li",null,[e("a",Ln,[r("PlantBoy"),t(o)])]),e("li",null,[e("a",zn,[r("Death Planet"),t(o)])]),e("li",null,[e("a",In,[r("Quartet"),t(o)]),r(" - Puzzle game for the Game Boy (Color) and Super Game Boy.")]),e("li",null,[e("a",Fn,[r("Dangan"),t(o)])])]),On,e("ul",null,[e("li",null,[e("a",Hn,[r("FlappyBoy"),t(o)])]),e("li",null,[e("a",Nn,[r("flappybird-gameboy"),t(o)])]),e("li",null,[e("a",Un,[r("fbgb"),t(o)])]),e("li",null,[e("a",Kn,[r("Novascape"),t(o)])]),e("li",null,[e("a",Vn,[r("Squishy the Turtle"),t(o)])]),e("li",null,[e("a",Wn,[r("Quadratino"),t(o)])]),e("li",null,[e("a",Zn,[r("Doctor How"),t(o)])]),e("li",null,[e("a",qn,[r("Super Princess' 2092 Exodus"),t(o)]),r(" - ("),e("a",Jn,[r("ZGB engine"),t(o)]),r(").")]),e("li",null,[e("a",Xn,[r("GBsnake"),t(o)])]),e("li",null,[e("a",Yn,[r("gb-mines"),t(o)])]),e("li",null,[e("a",Qn,[r("oranges"),t(o)])]),e("li",null,[e("a",$n,[r("red hot princess carnage"),t(o)])]),e("li",null,[e("a",ea,[r("loderunner"),t(o)])]),e("li",null,[e("a",ra,[r("Hives"),t(o)])]),e("li",null,[e("a",ta,[r("Bubble Factory"),t(o)]),r(" - *Vanilla- SDCC (no gbdk).")]),e("li",null,[e("a",oa,[r("GBC Atari Boxing"),t(o)]),r(" - Atari 2600 Boxing clone for the Game Boy (Color).")]),e("li",null,[e("a",na,[r("GB raycaster, Vision-8"),t(o)]),r(" - and some other projects.")]),e("li",null,[e("a",aa,[r("Tobu Tobu Girl Deluxe"),t(o)]),r(" - An arcade platformer for the Game Boy (Color).")]),e("li",null,[e("a",la,[r("Burly Bear vs. The Mean Foxes"),t(o)]),r(" ("),e("a",ia,[r("GBC"),t(o)]),r(" port)")]),e("li",null,[e("a",sa,[r("PostBot"),t(o)])]),e("li",null,[e("a",ha,[r("Guns & Riders"),t(o)])]),e("li",null,[e("a",da,[r("Dino's Offline Adventure"),t(o)]),r(" - A clone of the Google Chrome offline game.")]),e("li",null,[e("a",ca,[r("dino-gb"),t(o)]),r(" - Another clone of the Chrome game.")]),e("li",null,[e("a",ga,[r("Evoland.gb"),t(o)]),r(" - A port of the first level of Evoland.")]),e("li",null,[e("a",ma,[r("Petris"),t(o)]),r(" - A puzzle game of shapely pets for the Game Boy Color ("),e("a",pa,[r("itch.io"),t(o)]),r(").")]),e("li",null,[e("a",ua,[r("Infinity"),t(o)]),r(" - RPG developed by Affinix Software primarily between the years 1999 and 2001. The game never found a publisher and was eventually canceled. Got recently released with the full source, development tools and workflows.")]),e("li",null,[e("a",ba,[r("Black Castle"),t(o)]),r(" - Side scrolling platformer for the Game Boy ("),e("a",_a,[r("itch.io"),t(o)]),r(").")]),e("li",null,[e("a",fa,[r("Genesis"),t(o)]),r(" - Shmup for the Game Boy ("),e("a",ka,[r("itch.io"),t(o)]),r(").")]),e("li",null,[e("a",ya,[r("Indestructo Tank!"),t(o)])]),e("li",null,[e("a",Ba,[r("Super JetPak DX"),t(o)])]),e("li",null,[e("a",Ga,[r("Powa!"),t(o)]),r(" - Side scrolling platformer for the Game Boy (Color) ("),e("a",wa,[r("ZGB engine"),t(o)]),r(").")]),e("li",null,[e("a",va,[r("Cavern"),t(o)]),r(" - ("),e("a",Ca,[r("ZGB engine"),t(o)]),r(").")]),e("li",null,[e("a",Aa,[r("Mona and the Witch's Hat Deluxe"),t(o)]),r(" - ("),e("a",Da,[r("ZGB engine"),t(o)]),r(").")]),e("li",null,[e("a",Sa,[r("The Bouncing Ball"),t(o)])]),e("li",null,[e("a",Ma,[r("DMG Deals Damage"),t(o)])])]),xa,e("ul",null,[e("li",null,[e("a",Pa,[r("Soul Void"),t(o)]),r(" - Interactive horror fiction.")]),e("li",null,[e("a",Ra,[r("Deadeus"),t(o)])]),e("li",null,[e("a",Ta,[r("SUPER IMPOSTOR BROS."),t(o)])])]),Ea,e("ul",null,[e("li",null,[e("a",ja,[r("Back to Color"),t(o)])]),e("li",null,[e("a",La,[r("beach-gbc"),t(o)])]),e("li",null,[e("a",za,[r("CUTE DEMO"),t(o)])]),e("li",null,[e("a",Ia,[Fa,r(" Game Boy"),t(o)])]),e("li",null,[e("a",Oa,[r("Roboto Demo"),t(o)])]),e("li",null,[e("a",Ha,[r("matrix-rain-gb"),t(o)]),r(" - A Matrix digital rain effect in assembler.")]),e("li",null,[e("a",Na,[r("GBVideoPlayer"),t(o)]),r(" - A technical demo demonstrating how the Game Boy LCD controller can be hacked to make a Game Boy Color play a full motion video in color, together with music.")]),e("li",null,[e("a",Ua,[r("GBVideoPlayer2"),t(o)]),r(" - The second iteration of the above demo, which increases the resolution, adds "),Ka,r(".")])]),Va,e("ul",null,[e("li",null,[e("a",Wa,[r("Reverse engineering Kirby's Dreamland 2"),t(o)])]),e("li",null,[e("a",Za,[r("pokemontools"),t(o)]),r(" - a python module that provides various reverse engineering components for various Pokémon games.")]),e("li",null,[e("a",qa,[r("Reverse Engineering a Gameboy ROM with radare2"),t(o)]),r(" - A walkthrough to reverse engineer a Game Boy ROM challenge using radare2.")]),e("li",null,[e("a",Ja,[r("Disassembling Link's Awakening"),t(o)]),r(" - A series of blog posts about disassembling Link's Awakening DX.")]),e("li",null,[e("a",Xa,[r("Reverse Engineering the GameBoy Tetris"),t(o)])]),e("li",null,[e("a",Ya,[r("DMA hijacking"),t(o)]),r(" - A simple technique that allows you to run custom code in most GB/SGB/CGB games, provided you have an ACE exploit.")])]),Qa,e("ul",null,[e("li",null,[e("a",$a,[r("Pokémon Red/Blue"),t(o)])]),e("li",null,[e("a",el,[r("Pokémon Crystal"),t(o)])]),e("li",null,[e("a",rl,[r("Pokémon Yellow"),t(o)])]),e("li",null,[e("a",tl,[r("Pokémon Gold and Silver"),t(o)])]),e("li",null,[e("a",ol,[r("Pokémon Pinball"),t(o)])]),e("li",null,[e("a",nl,[r("Pokémon TCG"),t(o)])]),e("li",null,[e("a",al,[r("pokegold-spaceworld"),t(o)]),r(" - Pokémon Gold and Silver 1997 Space World demo.")]),e("li",null,[e("a",ll,[r("Link's Awakening DX"),t(o)])]),e("li",null,[e("a",il,[r("Oracle of Ages"),t(o)])]),e("li",null,[e("a",sl,[r("Tetris"),t(o)]),r(" - Complete Tetris disassembly.")]),e("li",null,[e("a",hl,[r("FX Hammer"),t(o)])]),e("li",null,[e("a",dl,[r("Harvest Moon 3"),t(o)])])]),cl,gl,ml,e("ul",null,[e("li",null,[e("a",pl,[r("Arduino Gameboy Printer Emulator"),t(o)]),r(" - Emulate a gameboy printer via the gameboy link cable.")]),e("li",null,[e("a",ul,[r("ESP8266 Game Boy Printer"),t(o)]),r(" - A device that emulates the Gameboy Printer and lets you retrieve images using WiFi powered by an ESP8266.")]),e("li",null,[e("a",bl,[r("WiFi GBP Emulator"),t(o)]),r(" - A GameBoy printer emulator which provides the received data over a WiFi connection.")]),e("li",null,[e("a",_l,[r("Game Boy WiFi Printer - D1 Mini Shield"),t(o)]),r(" - Game Boy Printer interface shield for D1 mini/mini Pro ESP8266 boards.")]),e("li",null,[e("a",fl,[r("Game Boy Printer Sniffer"),t(o)]),r(" - Sniff packet communications between a Game Boy and the Printer.")])]),kl,yl,e("ul",null,[e("li",null,[e("a",Bl,[r("Game Boy Camera Canon EF Lens Mount"),t(o)])]),e("li",null,[e("a",Gl,[r("Game Boy Camera to Canon Lens mount"),t(o)]),r(" - based on the above.")]),e("li",null,[e("a",wl,[r("game-boy-camera-frame-replacer"),t(o)]),r(" - Manipulate the ROM of a camera to include custom frames")])]),vl,e("ul",null,[e("li",null,[e("a",Cl,[r("Game Boy Printer Paper Simulation"),t(o)]),r(" - Generate as-if-printed images of digital printed images.")]),e("li",null,[e("a",Al,[r("Game Boy Printer Web"),t(o)]),r(" - Gallery app for to the Game Boy camera: import pictures from exports or cartridge dumps and choose color palettes.")])]),Dl,e("ul",null,[e("li",null,[e("a",Sl,[r("GB Studio"),t(o)]),r(" - Drag and drop game creator with simple, no knowledge required, visual scripting. "),e("ul",null,[e("li",null,[e("a",Ml,[r("Resources to get started"),t(o)])]),e("li",null,[e("a",xl,[r("Dedicated Discord"),t(o)])])])]),e("li",null,[e("a",Pl,[r("ArduinoBoy"),t(o)]),r(" - Serial communication (MIDI) from an Arduino to the Game Boy for music applications such as LittleSoundDJ, Nanoloop, and mGB.")]),e("li",null,[e("a",Rl,[r("papiGB"),t(o)]),r(" - Game Boy Classic fully functional FPGA implementation from scratch.")]),e("li",null,[e("a",Tl,[r("fpgaboy"),t(o)]),r(" - Implementation Nintendo's Game Boy console on an FPGA.")]),e("li",null,[e("a",El,[r("Piglet"),t(o)]),r(" - A LUA-driven AI that plays classic Game Boy color games using experimentation. In active development.")]),e("li",null,[e("a",jl,[r("Ostrich"),t(o)]),r(" - A Game Boy Sound System player written in Swift.")]),e("li",null,[e("a",Ll,[r("mGB"),t(o)]),r(" - A Game Boy cartridge program that enables the Game Boy to act as a full MIDI supported sound module.")]),e("li",null,[e("a",zl,[r("GBVisualizer"),t(o)]),r(" - Demonstrating the use of two undocumented Game Boy Color registers, nicknamed PCM12 (FF76) and PCM34 (FF77), which can be used to read the current PCM amplitude of the 4 APU channels.")]),e("li",null,[e("a",Il,[r("ArduinoGameBoy"),t(o)]),r(" - Arduino based Game Boy cartridge reader and writer.")]),e("li",null,[e("a",Fl,[r("gameboy-brainfuck"),t(o)]),r(" - Brainf*ck interpreter.")]),e("li",null,[e("a",Ol,[r("gbfk"),t(o)]),r(" - Brainf*ck interpreter, with input.")]),e("li",null,[e("a",Hl,[r("gb-save-states"),t(o)]),r(" - Patches to add save state support to Game Boy games when playing on the original hardware.")]),e("li",null,[e("a",Nl,[r("gbcpu"),t(o)]),r(" - A CPU and peripherals implementing the Game Boy instruction set and functionality.")]),e("li",null,[e("a",Ul,[r("Digitized Speech in Game Boy Games"),t(o)])]),e("li",null,[e("a",Kl,[r("Sniffing Game Boy serial traffic with an STM32F4"),t(o)])]),e("li",null,[e("a",Vl,[r("Virtual Game Boy Printer with an STM32F4"),t(o)])]),e("li",null,[e("a",Wl,[r("Printing on the Game Boy Printer using an STM32F4"),t(o)])]),e("li",null,[e("a",Zl,[r("Programming Game Boy Chinese cartridges with an STM32F4"),t(o)])]),e("li",null,[e("a",ql,[r("Pokemon Pocket Computer:"),t(o)]),r(" - What is it and how to use it to make cheat codes.")]),e("li",null,[e("a",Jl,[r("Booting the Game Boy with a custom logo"),t(o)]),r(" - Bypassing the Nintendo logo check.")]),e("li",null,[r('Making a Game Boy game in 2017: A "Sheep It Up!" Post-Mortem ('),e("a",Xl,[r("part 1"),t(o)]),r(", "),e("a",Yl,[r("part 2"),t(o)]),r(")")]),e("li",null,[e("a",Ql,[r("Nintendo's fake logos"),t(o)]),r(" - Every cartridge has to show the authentic logo to be considered valid and be run, but obviously some companies managed to exploit the check system.")]),e("li",null,[e("a",$l,[r("liblsdj"),t(o)]),r(" - Utility library for interacting with the LSDj save format (.sav), song files (.lsdsng) and more.")]),e("li",null,[e("a",ei,[r("lsdpatch"),t(o)]),r(" - Tool for modifying samples, fonts and palettes on LSDj ROM images.")]),e("li",null,[e("a",ri,[r("Game Boy video effects"),t(o)]),r(" - Some little experiments using the STAT interrupt to do funny video manipulations.")]),e("li",null,[e("a",ti,[r("gbos"),t(o)]),r(" - A basic operating system for the Game Boy.")]),e("li",null,[e("a",oi,[r("Work Master OS"),t(o)]),r(" - Russian multi tasking operating system.")]),e("li",null,[e("a",ni,[r("Game Boy Link Cable Breakout Board"),t(o)])]),e("li",null,[e("a",ai,[r("GBCartFlasher firmware"),t(o)])]),e("li",null,[e("a",li,[r("VerilogBoy"),t(o)]),r(" - Game Boy compatible console Verilog RTL implementation.")]),e("li",null,[e("a",ii,[r("GBCamcorder"),t(o)]),r(" - Lo-Fi portable video recorder using a GameBoy Camera cartridge.")]),e("li",null,[e("a",si,[r("GBCartRead"),t(o)]),r(" - Read ROM, Read RAM or Write RAM from/to a GameBoy Cartridge.")]),e("li",null,[e("a",hi,[r("GBxCart-RW"),t(o)]),r(" - A device for reading game ROMs, save games and restoring saves for GB, GBC and GBA carts from your PC via USB.")]),e("li",null,[e("a",di,[r("Dumping the Super Game Boy Boot ROM"),t(o)])])]),ci,e("ul",null,[e("li",null,[e("a",gi,[r("Archive of related files"),t(o)])]),e("li",null,[e("a",mi,[r("The Game Boy Archive"),t(o)]),r(" - A library of Game Boy related software, hardware and literature. Aimed to mirror and preserve old and fragmented contributions from the last three decades.")]),e("li",null,[e("a",pi,[r("The Game Boy Archive - Salvage"),t(o)]),r(" - Historical archive of software, old articles, FAQs and various documents.")])]),ui,e("ul",null,[e("li",null,[e("a",bi,[r("devrs.com/gb"),t(o)]),r(" - Old home of the scene: examples, sources, complete documentation, guides, tutorials and various tools.")]),e("li",null,[e("a",_i,[r("pdroms.de"),t(o)]),r(" - Game Boy releases.")]),e("li",null,[e("a",fi,[r("Handheld Underground"),t(o)]),r(" - Unlicensed games, blog posts about Game Boy, home of the hhugboy emulator.")])])])}const wi=s(c,[["render",ki],["__file","resources.html.vue"]]);export{wi as default};
